{
  "stats": {
    "suites": 54,
    "tests": 143,
    "passes": 143,
    "pending": 0,
    "failures": 0,
    "start": "2020-11-02T10:24:48.877Z",
    "end": "2020-11-02T10:24:48.951Z",
    "duration": 74,
    "testsRegistered": 143,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0a2931bd-ae93-4260-86d9-b3e19370aab0",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "88b44a7e-97c6-443e-ab48-c8b1d2c44d06",
          "title": "Bag",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
          "file": "/spec/bag/Bag.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not be affected by changes to the passed array of tokens",
              "fullTitle": "Bag should not be affected by changes to the passed array of tokens",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var someTokens = [tokens_1.Token.ZERO, tokens_1.Token.MINUS_ONE];\nvar bag = new bag_1.Bag(someTokens);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ZERO, tokens_1.Token.MINUS_ONE]);\nsomeTokens.push(tokens_1.Token.AUTOFAIL);\nchai_1.expect(someTokens).to.deep.equal([\n    tokens_1.Token.ZERO,\n    tokens_1.Token.MINUS_ONE,\n    tokens_1.Token.AUTOFAIL\n]);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ZERO, tokens_1.Token.MINUS_ONE]);",
              "err": {},
              "uuid": "c28f8579-19a6-4107-9b82-bdc08f668b92",
              "parentUUID": "88b44a7e-97c6-443e-ab48-c8b1d2c44d06",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "e28105a0-4163-4ad0-8cb6-0c1b1cff9e0e",
              "title": "getTokens",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
              "file": "/spec/bag/Bag.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "modifications to the returned array should not affect the Bag",
                  "fullTitle": "Bag getTokens modifications to the returned array should not affect the Bag",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nvar tokens = bag.getTokens();\ntokens.push(tokens_1.Token.TABLET);\nchai_1.expect(tokens).to.deep.equal([\n    tokens_1.Token.ELDER_SIGN,\n    tokens_1.Token.AUTOFAIL,\n    tokens_1.Token.TABLET\n]);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);",
                  "err": {},
                  "uuid": "1628492a-eba7-4e0e-b259-983497066338",
                  "parentUUID": "e28105a0-4163-4ad0-8cb6-0c1b1cff9e0e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1628492a-eba7-4e0e-b259-983497066338"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c5c5ef75-cf8a-4f32-acea-98ff069912e3",
              "title": "addTokens",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
              "file": "/spec/bag/Bag.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new Bag",
                  "fullTitle": "Bag addTokens should return a new Bag",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN]);\nvar added = bag.addTokens([tokens_1.Token.AUTOFAIL]);\nchai_1.expect(added).not.to.equal(bag);",
                  "err": {},
                  "uuid": "7fca93ee-63f4-4f2e-b4ba-d1802560cc19",
                  "parentUUID": "c5c5ef75-cf8a-4f32-acea-98ff069912e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add the tokens",
                  "fullTitle": "Bag addTokens should add the tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN]);\nvar added = bag.addTokens([tokens_1.Token.AUTOFAIL, tokens_1.Token.TABLET]);\nchai_1.expect(added.getTokens()).to.deep.equal([\n    tokens_1.Token.ELDER_SIGN,\n    tokens_1.Token.AUTOFAIL,\n    tokens_1.Token.TABLET\n]);",
                  "err": {},
                  "uuid": "38729008-42cd-452a-b3ea-985200b7326e",
                  "parentUUID": "c5c5ef75-cf8a-4f32-acea-98ff069912e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should leave the original Bag untouched",
                  "fullTitle": "Bag addTokens should leave the original Bag untouched",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN]);\nbag.addTokens([tokens_1.Token.AUTOFAIL]);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN]);",
                  "err": {},
                  "uuid": "3bbf9ea7-3e78-4813-b0d5-a3f5f0c0f2d8",
                  "parentUUID": "c5c5ef75-cf8a-4f32-acea-98ff069912e3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7fca93ee-63f4-4f2e-b4ba-d1802560cc19",
                "38729008-42cd-452a-b3ea-985200b7326e",
                "3bbf9ea7-3e78-4813-b0d5-a3f5f0c0f2d8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c09dae75-da56-4a75-9e42-be1bc4ddd062",
              "title": "removeToken",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
              "file": "/spec/bag/Bag.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new Bag",
                  "fullTitle": "Bag removeToken should return a new Bag",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nvar removed = bag.removeToken(tokens_1.Token.AUTOFAIL);\nchai_1.expect(removed).not.to.equal(bag);",
                  "err": {},
                  "uuid": "03acaea0-f03d-4874-b53e-f5e18335dd36",
                  "parentUUID": "c09dae75-da56-4a75-9e42-be1bc4ddd062",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should remove the token",
                  "fullTitle": "Bag removeToken should remove the token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nvar removed = bag.removeToken(tokens_1.Token.AUTOFAIL);\nchai_1.expect(removed.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN]);",
                  "err": {},
                  "uuid": "105b7d9a-9b19-4683-9117-e85ec5afa9e4",
                  "parentUUID": "c09dae75-da56-4a75-9e42-be1bc4ddd062",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should the original Bag untouched",
                  "fullTitle": "Bag removeToken should the original Bag untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nbag.removeToken(tokens_1.Token.AUTOFAIL);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);",
                  "err": {},
                  "uuid": "5cdf8207-595d-4a20-8677-2520eaf20063",
                  "parentUUID": "c09dae75-da56-4a75-9e42-be1bc4ddd062",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "03acaea0-f03d-4874-b53e-f5e18335dd36",
                "105b7d9a-9b19-4683-9117-e85ec5afa9e4",
                "5cdf8207-595d-4a20-8677-2520eaf20063"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "c28f8579-19a6-4107-9b82-bdc08f668b92"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c6d2f484-6135-49b1-9d02-a0986f59a244",
          "title": "cards",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
          "file": "/spec/cards.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "cards \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.MINUS_FOUR, new src_1.Modifier(-4)],\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);",
              "err": {},
              "uuid": "2712c7e8-8993-4789-aefb-41ba6d4ba4f8",
              "parentUUID": "c6d2f484-6135-49b1-9d02-a0986f59a244",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "56d943a5-ec18-4bfe-ac39-5b671c945fca",
              "title": "success",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards success returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.success(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "bcdb4d59-a149-4a34-81f9-48e2db4ab82b",
                  "parentUUID": "56d943a5-ec18-4bfe-ac39-5b671c945fca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returned function determine success resolving all pulled tokens",
                  "fullTitle": "cards success returned function determine success resolving all pulled tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.success(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be\n    .false;\nchai_1.expect(src_1.success(3)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be\n    .true;",
                  "err": {},
                  "uuid": "9b02fbab-28a3-48be-8a86-7844a36bd3f6",
                  "parentUUID": "56d943a5-ec18-4bfe-ac39-5b671c945fca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bcdb4d59-a149-4a34-81f9-48e2db4ab82b",
                "9b02fbab-28a3-48be-8a86-7844a36bd3f6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d6f30724-bbb4-4bed-afc1-90b9be7690f2",
              "title": "successChoosingBest",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards successChoosingBest returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.successChoosingBest(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "c96770a1-14f8-4ab2-8e70-c1540e193a1a",
                  "parentUUID": "d6f30724-bbb4-4bed-afc1-90b9be7690f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty when applying the best token",
                  "fullTitle": "cards successChoosingBest returns true if greater than difficulty when applying the best token",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.successChoosingBest(1)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be.true;",
                  "err": {},
                  "uuid": "562dcd14-75a7-43d9-93db-3e73b11f3499",
                  "parentUUID": "d6f30724-bbb4-4bed-afc1-90b9be7690f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty when applying the best token",
                  "fullTitle": "cards successChoosingBest returns false if lesser than difficulty when applying the best token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.successChoosingBest(0)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "47bd3e8e-a6b4-407e-9a0e-b83c120f98f6",
                  "parentUUID": "d6f30724-bbb4-4bed-afc1-90b9be7690f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should assume that redraw tokens where pulled",
                  "fullTitle": "cards successChoosingBest should assume that redraw tokens where pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.successChoosingBest(0)([src_1.Token.AUTOFAIL, src_1.Token.MINUS_FOUR, src_1.Token.BLESS], effects)).to.be.false;",
                  "err": {},
                  "uuid": "05676347-1a2d-4d74-a91d-e77bd114f3ae",
                  "parentUUID": "d6f30724-bbb4-4bed-afc1-90b9be7690f2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c96770a1-14f8-4ab2-8e70-c1540e193a1a",
                "562dcd14-75a7-43d9-93db-3e73b11f3499",
                "47bd3e8e-a6b4-407e-9a0e-b83c120f98f6",
                "05676347-1a2d-4d74-a91d-e77bd114f3ae"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "40fa1b85-8ceb-4e5c-ac1b-db4789a70a72",
              "title": "oliveMcBride",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBride returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBride(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "b35242df-5fb8-47e2-bb04-dd8bc55ebd4f",
                  "parentUUID": "40fa1b85-8ceb-4e5c-ac1b-db4789a70a72",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if higher than difficulty with the 2 best tokens",
                  "fullTitle": "cards oliveMcBride returns true if higher than difficulty with the 2 best tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBride(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.true;",
                  "err": {},
                  "uuid": "83d7472b-f4a7-4bbc-aa1e-47bc38e5c9df",
                  "parentUUID": "40fa1b85-8ceb-4e5c-ac1b-db4789a70a72",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty with the 2 best tokens",
                  "fullTitle": "cards oliveMcBride returns false if lesser than difficulty with the 2 best tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBride(0)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.false;",
                  "err": {},
                  "uuid": "dae9c6b2-dbce-4d4a-a77e-c375deae8bfe",
                  "parentUUID": "40fa1b85-8ceb-4e5c-ac1b-db4789a70a72",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should assume that redraw tokens where pulled",
                  "fullTitle": "cards oliveMcBride should assume that redraw tokens where pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBride(-2)([src_1.Token.AUTOFAIL, src_1.Token.MINUS_FOUR, src_1.Token.BLESS, src_1.Token.ZERO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "73d6d7df-388f-4415-97d3-03a779f34905",
                  "parentUUID": "40fa1b85-8ceb-4e5c-ac1b-db4789a70a72",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b35242df-5fb8-47e2-bb04-dd8bc55ebd4f",
                "83d7472b-f4a7-4bbc-aa1e-47bc38e5c9df",
                "dae9c6b2-dbce-4d4a-a77e-c375deae8bfe",
                "73d6d7df-388f-4415-97d3-03a779f34905"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a0e58ebe-3d6e-4e27-b7ee-a8a36551b042",
              "title": "oliveMcBrideWithSkull",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBrideWithSkull returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBrideWithSkull(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "d5a26bdb-356f-4d41-8ad5-88fad7858e8d",
                  "parentUUID": "a0e58ebe-3d6e-4e27-b7ee-a8a36551b042",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if there is no Skull token in the tokens pulled",
                  "fullTitle": "cards oliveMcBrideWithSkull returns false if there is no Skull token in the tokens pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(0)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "701c5cc9-7c41-4726-a700-c8918cd4cfc4",
                  "parentUUID": "a0e58ebe-3d6e-4e27-b7ee-a8a36551b042",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not modify the combination",
                  "fullTitle": "cards oliveMcBrideWithSkull should not modify the combination",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var myComb = [src_1.Token.SKULL, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO];\nsrc_1.oliveMcBrideWithSkull(2)(myComb, effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-1)]])));\nchai_1.expect(myComb).to.deep.equal([\n    src_1.Token.SKULL,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO\n]);",
                  "err": {},
                  "uuid": "791d099b-991b-4d4d-9472-3ac33a4a5916",
                  "parentUUID": "a0e58ebe-3d6e-4e27-b7ee-a8a36551b042",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if there is a Skull token in the tokens pulled and if adding best of remaining tokens is still higher than difficulty",
                  "fullTitle": "cards oliveMcBrideWithSkull returns true if there is a Skull token in the tokens pulled and if adding best of remaining tokens is still higher than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(2)([src_1.Token.SKULL, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-1)]])))).to.be.true;",
                  "err": {},
                  "uuid": "bf8e29a9-f7c3-4efc-baad-6d5697296540",
                  "parentUUID": "a0e58ebe-3d6e-4e27-b7ee-a8a36551b042",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if there is a Skull token in the tokens pulled and if adding best of remaining tokens is lesser than difficulty",
                  "fullTitle": "cards oliveMcBrideWithSkull returns false if there is a Skull token in the tokens pulled and if adding best of remaining tokens is lesser than difficulty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(1)([src_1.Token.SKULL, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-1)]])))).to.be.false;",
                  "err": {},
                  "uuid": "9d4863eb-3912-4835-a56e-d277b581ad10",
                  "parentUUID": "a0e58ebe-3d6e-4e27-b7ee-a8a36551b042",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should assume that redraw tokens where pulled",
                  "fullTitle": "cards oliveMcBrideWithSkull should assume that redraw tokens where pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(3)([src_1.Token.AUTOFAIL, src_1.Token.SKULL, src_1.Token.BLESS, src_1.Token.MINUS_TWO], effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-4)]])))).to.be.false;",
                  "err": {},
                  "uuid": "125cb6e6-6568-4ac1-8620-8d0bcfed919a",
                  "parentUUID": "a0e58ebe-3d6e-4e27-b7ee-a8a36551b042",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d5a26bdb-356f-4d41-8ad5-88fad7858e8d",
                "701c5cc9-7c41-4726-a700-c8918cd4cfc4",
                "791d099b-991b-4d4d-9472-3ac33a4a5916",
                "bf8e29a9-f7c3-4efc-baad-6d5697296540",
                "9d4863eb-3912-4835-a56e-d277b581ad10",
                "125cb6e6-6568-4ac1-8620-8d0bcfed919a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9ca950ac-2d1e-4411-94ac-623d2e52a76c",
              "title": "recallTheFuture",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards recallTheFuture returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.recallTheFuture(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "183febf5-c724-4c7e-aadd-437071423229",
                  "parentUUID": "9ca950ac-2d1e-4411-94ac-623d2e52a76c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty",
                  "fullTitle": "cards recallTheFuture returns true if greater than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(0)([src_1.Token.ZERO], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.true;",
                  "err": {},
                  "uuid": "97ffd3f1-5888-492e-b7f0-24db1a92d93d",
                  "parentUUID": "9ca950ac-2d1e-4411-94ac-623d2e52a76c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if lesser than difficulty but drew the token which has the most chances to be turned into success using the +2 bonus",
                  "fullTitle": "cards recallTheFuture returns true if lesser than difficulty but drew the token which has the most chances to be turned into success using the +2 bonus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.MINUS_ONE], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.true;",
                  "err": {},
                  "uuid": "4564f41c-6760-4d38-b2f9-ee3815451915",
                  "parentUUID": "9ca950ac-2d1e-4411-94ac-623d2e52a76c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty and did not drew the token which has the most chances to be turned into success using the +2 bonus",
                  "fullTitle": "cards recallTheFuture returns false if lesser than difficulty and did not drew the token which has the most chances to be turned into success using the +2 bonus",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.ZERO], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.false;",
                  "err": {},
                  "uuid": "02d26f15-3f92-467c-8c71-4446b761b3da",
                  "parentUUID": "9ca950ac-2d1e-4411-94ac-623d2e52a76c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if still lesser than difficulty applying the +2 bonus",
                  "fullTitle": "cards recallTheFuture returns false if still lesser than difficulty applying the +2 bonus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-2)([src_1.Token.MINUS_ONE], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.false;",
                  "err": {},
                  "uuid": "b3c9f25e-c581-42bc-a1e0-90714c5bd4a3",
                  "parentUUID": "9ca950ac-2d1e-4411-94ac-623d2e52a76c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can handle the case where several tokens where drawn",
                  "fullTitle": "cards recallTheFuture can handle the case where several tokens where drawn",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE], effects, new src_1.Bag([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO\n]))).to.be.true;",
                  "err": {},
                  "uuid": "615277b3-63cd-4ea1-ae10-432b138d83a3",
                  "parentUUID": "9ca950ac-2d1e-4411-94ac-623d2e52a76c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can handle redraw tokens",
                  "fullTitle": "cards recallTheFuture can handle redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.MINUS_ONE, src_1.Token.CURSE], effects, new src_1.Bag([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.CURSE\n]))).to.be.false;",
                  "err": {},
                  "uuid": "69427726-85c8-44b2-9b5f-1e30d785f88c",
                  "parentUUID": "9ca950ac-2d1e-4411-94ac-623d2e52a76c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "183febf5-c724-4c7e-aadd-437071423229",
                "97ffd3f1-5888-492e-b7f0-24db1a92d93d",
                "4564f41c-6760-4d38-b2f9-ee3815451915",
                "02d26f15-3f92-467c-8c71-4446b761b3da",
                "b3c9f25e-c581-42bc-a1e0-90714c5bd4a3",
                "615277b3-63cd-4ea1-ae10-432b138d83a3",
                "69427726-85c8-44b2-9b5f-1e30d785f88c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1b75c7b6-eb4b-4689-8211-d96caef8fa88",
              "title": "darkProphecy",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards darkProphecy returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.darkProphecy(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "580e0835-13e1-4880-b0b0-03804219aa98",
                  "parentUUID": "1b75c7b6-eb4b-4689-8211-d96caef8fa88",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return true if greater than difficulty using the \"best\" bad token pulled",
                  "fullTitle": "cards darkProphecy return true if greater than difficulty using the \"best\" bad token pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(2)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.CULTIST,\n    src_1.Token.ELDER_THING\n], effects.merge(new src_1.TokenEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n])))).to.be.true;",
                  "err": {},
                  "uuid": "e4cf143d-48ed-43a3-92d1-e37c0c3c8377",
                  "parentUUID": "1b75c7b6-eb4b-4689-8211-d96caef8fa88",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return false if lesser than difficulty using the \"best\" bad token pulled",
                  "fullTitle": "cards darkProphecy return false if lesser than difficulty using the \"best\" bad token pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(1)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.CULTIST,\n    src_1.Token.ELDER_THING\n], effects.merge(new src_1.TokenEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n])))).to.be.false;",
                  "err": {},
                  "uuid": "d8b8334c-8e7d-4f9f-8a18-6639def9d59a",
                  "parentUUID": "1b75c7b6-eb4b-4689-8211-d96caef8fa88",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return true if greater than difficulty using best token when no bad tokens were pulled",
                  "fullTitle": "cards darkProphecy return true if greater than difficulty using best token when no bad tokens were pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(0)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_TWO\n], effects)).to.be.true;",
                  "err": {},
                  "uuid": "1437d42c-a926-4535-a607-087811ef66d8",
                  "parentUUID": "1b75c7b6-eb4b-4689-8211-d96caef8fa88",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return false if lesser than difficulty using best token when no bad tokens were pulled",
                  "fullTitle": "cards darkProphecy return false if lesser than difficulty using best token when no bad tokens were pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(-1)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_TWO\n], effects)).to.be.false;",
                  "err": {},
                  "uuid": "a26e5ebb-a1d7-4cd3-bfbf-99d0ca9297fa",
                  "parentUUID": "1b75c7b6-eb4b-4689-8211-d96caef8fa88",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens (assuming they were pulled)",
                  "fullTitle": "cards darkProphecy takes into account redraw tokens (assuming they were pulled)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(0)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.CURSE\n], effects)).to.be.false;",
                  "err": {},
                  "uuid": "63eb4914-7d2c-4bcf-b80d-4825bd862316",
                  "parentUUID": "1b75c7b6-eb4b-4689-8211-d96caef8fa88",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "580e0835-13e1-4880-b0b0-03804219aa98",
                "e4cf143d-48ed-43a3-92d1-e37c0c3c8377",
                "d8b8334c-8e7d-4f9f-8a18-6639def9d59a",
                "1437d42c-a926-4535-a607-087811ef66d8",
                "a26e5ebb-a1d7-4cd3-bfbf-99d0ca9297fa",
                "63eb4914-7d2c-4bcf-b80d-4825bd862316"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7ef9d302-1843-46da-9509-dc821feef0d2",
              "title": "winchesterDoing1Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards winchesterDoing1Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.winchesterDoing1Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "127512e3-bdb9-4ca7-8172-11d085450aa2",
                  "parentUUID": "7ef9d302-1843-46da-9509-dc821feef0d2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards winchesterDoing1Damage returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing1Damage(1)([src_1.Token.MINUS_ONE], effects)).to.be.true;\nchai_1.expect(src_1.winchesterDoing1Damage(2)([src_1.Token.MINUS_TWO], effects)).to.be.true;",
                  "err": {},
                  "uuid": "ea158879-0857-455b-b4b1-61d6798c47b3",
                  "parentUUID": "7ef9d302-1843-46da-9509-dc821feef0d2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards winchesterDoing1Damage returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing1Damage(0)([src_1.Token.ELDER_SIGN], effects)).to.be\n    .false;\nchai_1.expect(src_1.winchesterDoing1Damage(0)([src_1.Token.ZERO], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(-1)([src_1.Token.PLUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "a370d323-7ee6-4dcd-b965-ffd9cd6c5f2c",
                  "parentUUID": "7ef9d302-1843-46da-9509-dc821feef0d2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards winchesterDoing1Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing1Damage(-2)([src_1.Token.ELDER_SIGN], effects)).to.be\n    .false;\nchai_1.expect(src_1.winchesterDoing1Damage(-1)([src_1.Token.ZERO], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(-2)([src_1.Token.PLUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(0)([src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(1)([src_1.Token.MINUS_TWO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "b146b054-9c87-4d18-8c94-27e21cd95e3c",
                  "parentUUID": "7ef9d302-1843-46da-9509-dc821feef0d2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "127512e3-bdb9-4ca7-8172-11d085450aa2",
                "ea158879-0857-455b-b4b1-61d6798c47b3",
                "a370d323-7ee6-4dcd-b965-ffd9cd6c5f2c",
                "b146b054-9c87-4d18-8c94-27e21cd95e3c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b28cda0a-7bf8-4350-b525-f4c53112cbd7",
              "title": "winchesterDoing3Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards winchesterDoing3Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.winchesterDoing3Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "52079b33-6e59-495b-8455-8a2720f7cb09",
                  "parentUUID": "b28cda0a-7bf8-4350-b525-f4c53112cbd7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards winchesterDoing3Damage returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing3Damage(0)([src_1.Token.ELDER_SIGN], effects)).to.be.true;\nchai_1.expect(src_1.winchesterDoing3Damage(0)([src_1.Token.ZERO], effects)).to.be.true;\nchai_1.expect(src_1.winchesterDoing3Damage(-1)([src_1.Token.PLUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "2128c637-f3e6-425b-84f8-8bddaaa0e593",
                  "parentUUID": "b28cda0a-7bf8-4350-b525-f4c53112cbd7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards winchesterDoing3Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing3Damage(-2)([src_1.Token.ELDER_SIGN], effects)).to.be\n    .false;\nchai_1.expect(src_1.winchesterDoing3Damage(-1)([src_1.Token.ZERO], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing3Damage(-2)([src_1.Token.PLUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "8cbe9d05-8596-445a-9413-809c8d0da7f8",
                  "parentUUID": "b28cda0a-7bf8-4350-b525-f4c53112cbd7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards winchesterDoing3Damage returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing3Damage(1)([src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "4ed80bc6-b286-489e-b97c-9ac0d884a9ce",
                  "parentUUID": "b28cda0a-7bf8-4350-b525-f4c53112cbd7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52079b33-6e59-495b-8455-8a2720f7cb09",
                "2128c637-f3e6-425b-84f8-8bddaaa0e593",
                "8cbe9d05-8596-445a-9413-809c8d0da7f8",
                "4ed80bc6-b286-489e-b97c-9ac0d884a9ce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f687b633-12d9-42be-8cb0-d762ad12ce5a",
              "title": "oliveMcBrideAndWinchesterDoing1Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns a function",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBrideAndWinchesterDoing1Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "f1ba1c35-281a-48d3-923c-4c9390c2d6d1",
                  "parentUUID": "f687b633-12d9-42be-8cb0-d762ad12ce5a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(2)([src_1.Token.MINUS_TWO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "fb39d548-9176-418a-aaca-ae251124ac71",
                  "parentUUID": "f687b633-12d9-42be-8cb0-d762ad12ce5a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(0)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(0)([src_1.Token.PLUS_ONE, , src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "0a1c9343-4717-476d-bc2f-fb8a2077a938",
                  "parentUUID": "f687b633-12d9-42be-8cb0-d762ad12ce5a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(-1)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(1)([src_1.Token.MINUS_TWO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "d1d52e70-644d-45db-8267-2cde46800bca",
                  "parentUUID": "f687b633-12d9-42be-8cb0-d762ad12ce5a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage takes into account redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "1c647a60-1298-4f35-b7ca-788b9cf703f9",
                  "parentUUID": "f687b633-12d9-42be-8cb0-d762ad12ce5a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f1ba1c35-281a-48d3-923c-4c9390c2d6d1",
                "fb39d548-9176-418a-aaca-ae251124ac71",
                "0a1c9343-4717-476d-bc2f-fb8a2077a938",
                "d1d52e70-644d-45db-8267-2cde46800bca",
                "1c647a60-1298-4f35-b7ca-788b9cf703f9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e31588dc-2374-4220-9f6c-63112bcd5422",
              "title": "oliveMcBrideAndWinchesterDoing3Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBrideAndWinchesterDoing3Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "7a91aa48-3625-4c3e-98f0-6e7cf4a5b636",
                  "parentUUID": "e31588dc-2374-4220-9f6c-63112bcd5422",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(0)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(0)([src_1.Token.PLUS_ONE, , src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "ce570c11-7c20-41dd-9917-26b1dcf6914a",
                  "parentUUID": "e31588dc-2374-4220-9f6c-63112bcd5422",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(-1)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(0)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(-1)([src_1.Token.PLUS_ONE, , src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "6e29c6a6-b435-4e0a-afc2-0e616452b5bd",
                  "parentUUID": "e31588dc-2374-4220-9f6c-63112bcd5422",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "0450d11b-0b4d-4eb1-aba5-7fc880f39929",
                  "parentUUID": "e31588dc-2374-4220-9f6c-63112bcd5422",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage takes into account redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "4fabd97c-b46f-4200-adb5-bc1d959e8227",
                  "parentUUID": "e31588dc-2374-4220-9f6c-63112bcd5422",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7a91aa48-3625-4c3e-98f0-6e7cf4a5b636",
                "ce570c11-7c20-41dd-9917-26b1dcf6914a",
                "6e29c6a6-b435-4e0a-afc2-0e616452b5bd",
                "0450d11b-0b4d-4eb1-aba5-7fc880f39929",
                "4fabd97c-b46f-4200-adb5-bc1d959e8227"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "dc36deae-6acc-4dad-8c4d-b1acdda593ac",
              "title": "jacqueline",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards jacqueline returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.jacqueline(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "c1d84240-2011-4bca-941f-943de97d6892",
                  "parentUUID": "dc36deae-6acc-4dad-8c4d-b1acdda593ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty when cancelling 2 non-tentacle tokens",
                  "fullTitle": "cards jacqueline returns true if greater than difficulty when cancelling 2 non-tentacle tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(1)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "07020602-b0eb-48c2-9473-5ae055ee3068",
                  "parentUUID": "dc36deae-6acc-4dad-8c4d-b1acdda593ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty when cancelling tentacle",
                  "fullTitle": "cards jacqueline returns true if greater than difficulty when cancelling tentacle",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.true;",
                  "err": {},
                  "uuid": "6eaa2ca0-1aa6-4ab4-89fa-644cbbe97313",
                  "parentUUID": "dc36deae-6acc-4dad-8c4d-b1acdda593ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty when cancelling 2 non-tentacle tokens",
                  "fullTitle": "cards jacqueline returns false if lesser than difficulty when cancelling 2 non-tentacle tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(0)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "7d8c84c7-6974-406e-93e1-d9e9e3bc83b6",
                  "parentUUID": "dc36deae-6acc-4dad-8c4d-b1acdda593ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty when cancelling tentacle",
                  "fullTitle": "cards jacqueline returns false if lesser than difficulty when cancelling tentacle",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(1)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.false;",
                  "err": {},
                  "uuid": "472fdb77-3f40-4979-b464-93ff01969777",
                  "parentUUID": "dc36deae-6acc-4dad-8c4d-b1acdda593ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens when ignoring 2 tokens",
                  "fullTitle": "cards jacqueline takes into account redraw tokens when ignoring 2 tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "e519b7e8-0640-41c5-b5b6-67301787710c",
                  "parentUUID": "dc36deae-6acc-4dad-8c4d-b1acdda593ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens when cancelling tentacle",
                  "fullTitle": "cards jacqueline takes into account redraw tokens when cancelling tentacle",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "0deb21b3-4fc2-4b63-a45d-56414b43dcad",
                  "parentUUID": "dc36deae-6acc-4dad-8c4d-b1acdda593ac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c1d84240-2011-4bca-941f-943de97d6892",
                "07020602-b0eb-48c2-9473-5ae055ee3068",
                "6eaa2ca0-1aa6-4ab4-89fa-644cbbe97313",
                "7d8c84c7-6974-406e-93e1-d9e9e3bc83b6",
                "472fdb77-3f40-4979-b464-93ff01969777",
                "e519b7e8-0640-41c5-b5b6-67301787710c",
                "0deb21b3-4fc2-4b63-a45d-56414b43dcad"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a484ba3d-e92c-414b-99f6-bec237ce34d2",
          "title": "exports",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/exports.spec.ts",
          "file": "/spec/exports.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "exports the `drawFromBag` function",
              "fullTitle": "exports exports the `drawFromBag` function",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai_1.expect(ArkhamOdds.drawFromBag).to.exist;",
              "err": {},
              "uuid": "ec52f43f-6f06-4a9b-be12-9585943b8fd4",
              "parentUUID": "a484ba3d-e92c-414b-99f6-bec237ce34d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "exports the `odds` function",
              "fullTitle": "exports exports the `odds` function",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai_1.expect(ArkhamOdds.odds).to.exist;",
              "err": {},
              "uuid": "e6a4520f-7eeb-4465-bb4e-5c41c26325bd",
              "parentUUID": "a484ba3d-e92c-414b-99f6-bec237ce34d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec52f43f-6f06-4a9b-be12-9585943b8fd4",
            "e6a4520f-7eeb-4465-bb4e-5c41c26325bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "29c31abb-613e-48e8-9856-88637dce023a",
          "title": "Odds functions",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
          "file": "/spec/index.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Odds functions \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-1, true)]\n]);",
              "err": {},
              "uuid": "62eb779a-ba0f-4bc6-b064-9f6454ff2262",
              "parentUUID": "29c31abb-613e-48e8-9856-88637dce023a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a57f5c6c-b727-47d7-a77f-b5d90422e586",
              "title": "drawFromBag",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
              "file": "/spec/index.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "return all possible sets with their odds when pulling only 1 token",
                  "fullTitle": "Odds functions drawFromBag return all possible sets with their odds when pulling only 1 token",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar sets = src_1.drawFromBag(1, bag);\nvar expected = [\n    { tokens: [src_1.Token.PLUS_ONE], odds: 0.5 },\n    { tokens: [src_1.Token.MINUS_ONE], odds: 0.5 }\n];\nexpectSetsEqual(chai_1.expect, expected, sets);",
                  "err": {},
                  "uuid": "24fe8f5b-59c3-4743-8867-9cc2b926b379",
                  "parentUUID": "a57f5c6c-b727-47d7-a77f-b5d90422e586",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return all possible sets with their odds when pulling multiple tokens",
                  "fullTitle": "Odds functions drawFromBag return all possible sets with their odds when pulling multiple tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO\n]);\nvar sets = src_1.drawFromBag(2, bag);\nvar expected = [\n    { tokens: [src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE], odds: 0.2 },\n    { tokens: [src_1.Token.PLUS_ONE, src_1.Token.MINUS_TWO], odds: 0.2 },\n    { tokens: [src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], odds: 0.1 },\n    { tokens: [src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], odds: 0.4 },\n    { tokens: [src_1.Token.MINUS_TWO, src_1.Token.MINUS_TWO], odds: 0.1 }\n];\nexpectSetsEqual(chai_1.expect, expected, sets);",
                  "err": {},
                  "uuid": "ca1db5e6-a8fd-432c-adcb-60553abb21da",
                  "parentUUID": "a57f5c6c-b727-47d7-a77f-b5d90422e586",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account tokens with a redraw effect",
                  "fullTitle": "Odds functions drawFromBag takes into account tokens with a redraw effect",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.CULTIST,\n    src_1.Token.CULTIST\n]);\nvar sets = src_1.drawFromBag(1, bag, effects);\nvar expected = [\n    { tokens: [src_1.Token.PLUS_ONE], odds: 1 / 4 },\n    { tokens: [src_1.Token.MINUS_ONE], odds: 1 / 4 },\n    {\n        tokens: [src_1.Token.CULTIST, src_1.Token.PLUS_ONE],\n        odds: (1 / 2) * (1 / 3)\n    },\n    {\n        tokens: [src_1.Token.CULTIST, src_1.Token.MINUS_ONE],\n        odds: (1 / 2) * (1 / 3)\n    },\n    {\n        tokens: [src_1.Token.CULTIST, src_1.Token.CULTIST, src_1.Token.PLUS_ONE],\n        odds: (1 / 2) * (1 / 3) * (1 / 2)\n    },\n    {\n        tokens: [src_1.Token.CULTIST, src_1.Token.CULTIST, src_1.Token.MINUS_ONE],\n        odds: (1 / 2) * (1 / 3) * (1 / 2)\n    }\n];\nexpectSetsEqual(chai_1.expect, expected, sets);",
                  "err": {},
                  "uuid": "9a9b6785-42e9-45f7-8c6d-d5b53b8c7194",
                  "parentUUID": "a57f5c6c-b727-47d7-a77f-b5d90422e586",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "24fe8f5b-59c3-4743-8867-9cc2b926b379",
                "ca1db5e6-a8fd-432c-adcb-60553abb21da",
                "9a9b6785-42e9-45f7-8c6d-d5b53b8c7194"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "44378cbb-32c5-425f-8768-11c38769ec3a",
              "title": "odds",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
              "file": "/spec/index.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "fullTitle": "Odds functions odds returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.odds(1, bag, effects, src_1.success(0));\nchai_1.expect(oddsOfSuccess).to.equal(0.5);",
                  "err": {},
                  "uuid": "01868675-d9d8-4e3f-9386-3270c8ae856b",
                  "parentUUID": "44378cbb-32c5-425f-8768-11c38769ec3a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can compute odds even when there are no successful combinations",
                  "fullTitle": "Odds functions odds can compute odds even when there are no successful combinations",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.odds(1, bag, effects, src_1.success(-4));\nchai_1.expect(oddsOfSuccess).to.equal(0);",
                  "err": {},
                  "uuid": "653d5d6a-9a81-424b-9535-31aba772d9ef",
                  "parentUUID": "44378cbb-32c5-425f-8768-11c38769ec3a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account tokens with a redraw effect",
                  "fullTitle": "Odds functions odds takes into account tokens with a redraw effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.CULTIST]);\nvar oddsOfSuccess = src_1.odds(1, bag, effects, src_1.success(-1));\n/* Possible draws are :\n * - +1 with a probability of 1/3\n * - -1 with a probability of 1/3\n * - Cultist and +1 with a probability of 1/6 (1/3 x 1/2)\n * - Cultist and -1 with a probability of 1/6 (1/3 x 1/2)\n * If testing at -1, only +1 result in a success.\n */\nchai_1.expect(oddsOfSuccess).to.be.closeTo(1 / 3, PRECISION);",
                  "err": {},
                  "uuid": "5f1fdf79-b92b-443c-8214-444904bd3938",
                  "parentUUID": "44378cbb-32c5-425f-8768-11c38769ec3a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account tokens with a redraw effect when pulling multiple tokens",
                  "fullTitle": "Odds functions odds takes into account tokens with a redraw effect when pulling multiple tokens",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.CULTIST\n]);\n/* Possible draws are in the table below\n *\n * | 1st pull | 2nd pull | 3rd pull | Result | Probability |\n * | +1       | -1       |          | +0     | 1/12        |\n * | +1       | -2       |          | -1     | 1/12        |\n * | +1       | Cultist  | -1       | -1     | 1/24        |\n * | +1       | Cultist  | -2       | -2     | 1/24        |\n * | -1       | +1       |          | +0     | 1/12        |\n * | -1       | -2       |          | -3     | 1/12        |\n * | -1       | Cultist  | +1       | -1     | 1/24        |\n * | -1       | Cultist  | -2       | -4     | 1/24        |\n * | -2       | +1       |          | -1     | 1/12        |\n * | -2       | -1       |          | -3     | 1/12        |\n * | -2       | Cultist  | +1       | -2     | 1/24        |\n * | -2       | Cultist  | -1       | -4     | 1/24        |\n * | Cultist  | +1       | -1       | -1     | 1/24        |\n * | Cultist  | +1       | -2       | -2     | 1/24        |\n * | Cultist  | -1       | +1       | -1     | 1/24        |\n * | Cultist  | -1       | -2       | -4     | 1/24        |\n * | Cultist  | -2       | +1       | -2     | 1/24        |\n * | Cultist  | -2       | -1       | -4     | 1/24        |\n *\n * Odds of success depending on difficulty is then :\n *\n * | Result | Probability |\n * | -4     | 4/24        |\n * | -3     | 4/24        |\n * | -2     | 4/24        |\n * | -1     | 8/24        |\n * | 0      | 4/24        |\n */\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(0))).to.be.closeTo(4 / 24, PRECISION, \"when equal\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(1))).to.be.closeTo(12 / 24, // 4 / 24 + 8 / 24\nPRECISION, \"when over by 1\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(2))).to.be.closeTo(16 / 24, // 4 / 24 + 8 / 24 + 4 / 24\nPRECISION, \"when over by 2\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(3))).to.closeTo(20 / 24, // 4 / 24 + 8 / 24 + 4 / 24 + 4 / 24\nPRECISION, \"when over by 3\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(4))).to.be.closeTo(1, PRECISION, \"when over by 4\");",
                  "err": {},
                  "uuid": "9d533338-7d12-47be-b36d-e5be2a877753",
                  "parentUUID": "44378cbb-32c5-425f-8768-11c38769ec3a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "01868675-d9d8-4e3f-9386-3270c8ae856b",
                "653d5d6a-9a81-424b-9535-31aba772d9ef",
                "5f1fdf79-b92b-443c-8214-444904bd3938",
                "9d533338-7d12-47be-b36d-e5be2a877753"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "27c7020c-cb32-4f27-9233-7c1f8169e0c5",
              "title": "oddsWithRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
              "file": "/spec/index.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "fullTitle": "Odds functions oddsWithRedraw returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.oddsWithRedraw(1, bag, effects, src_1.success(0));\nchai_1.expect(oddsOfSuccess).to.equal(0.5);",
                  "err": {},
                  "uuid": "b8c45f0a-4b59-4f75-83ee-aa3bd778ab45",
                  "parentUUID": "27c7020c-cb32-4f27-9233-7c1f8169e0c5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns 0.75 when pulling 2 tokens (putting back first token before second draw) if half the tokens results in a success",
                  "fullTitle": "Odds functions oddsWithRedraw returns 0.75 when pulling 2 tokens (putting back first token before second draw) if half the tokens results in a success",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.oddsWithRedraw(2, bag, effects, src_1.successChoosingBest(0));\nchai_1.expect(oddsOfSuccess).to.equal(0.75);",
                  "err": {},
                  "uuid": "9852ae3e-08e3-492a-9482-63cc4186c552",
                  "parentUUID": "27c7020c-cb32-4f27-9233-7c1f8169e0c5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b8c45f0a-4b59-4f75-83ee-aa3bd778ab45",
                "9852ae3e-08e3-492a-9482-63cc4186c552"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "06b9fbe9-a7e2-4d60-83ca-1b5021c3b8d9",
          "title": "Precise calculations with fraction",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/precise_calculations.spec.ts",
          "file": "/spec/precise_calculations.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "fractions with same numerator and denominator are equal",
              "fullTitle": "Precise calculations with fraction fractions with same numerator and denominator are equal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var frac1 = new Fraction_1.Fraction(1, 3);\nvar frac2 = new Fraction_1.Fraction(1, 3);\nchai_1.expect(frac1.sameAs(frac2)).to.be.true;",
              "err": {},
              "uuid": "7ca43062-3247-446e-a83b-bdbfa0628b0c",
              "parentUUID": "06b9fbe9-a7e2-4d60-83ca-1b5021c3b8d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "fractions with same numerator and different denominator are not equal",
              "fullTitle": "Precise calculations with fraction fractions with same numerator and different denominator are not equal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var frac1 = new Fraction_1.Fraction(1, 3);\nvar frac2 = new Fraction_1.Fraction(1, 4);\nchai_1.expect(frac1.sameAs(frac2)).to.be.false;",
              "err": {},
              "uuid": "60b89916-09e8-4e0e-9cdc-8bd88c7164cd",
              "parentUUID": "06b9fbe9-a7e2-4d60-83ca-1b5021c3b8d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "fractions reducing to the same fraction are equal",
              "fullTitle": "Precise calculations with fraction fractions reducing to the same fraction are equal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var frac1 = new Fraction_1.Fraction(1, 2);\nvar frac2 = new Fraction_1.Fraction(2, 4);\nchai_1.expect(frac1.sameAs(frac2)).to.be.true;",
              "err": {},
              "uuid": "768b2f00-e38b-4ece-b56a-7c8228edf8d4",
              "parentUUID": "06b9fbe9-a7e2-4d60-83ca-1b5021c3b8d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can add fractions",
              "fullTitle": "Precise calculations with fraction can add fractions",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var frac1 = new Fraction_1.Fraction(1, 3);\nvar frac2 = new Fraction_1.Fraction(1, 4);\nvar expected = new Fraction_1.Fraction(7, 12);\nchai_1.expect(frac1.add(frac2).sameAs(expected)).to.be.true;",
              "err": {},
              "uuid": "b99fa192-79e3-4af2-a3de-7146c6b84f69",
              "parentUUID": "06b9fbe9-a7e2-4d60-83ca-1b5021c3b8d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can compute to float",
              "fullTitle": "Precise calculations with fraction can compute to float",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var frac = new Fraction_1.Fraction(1, 2);\nchai_1.expect(frac.valueOf()).to.equal(0.5);",
              "err": {},
              "uuid": "17cf64c8-1de2-4ef7-a0d6-a2e45c504f15",
              "parentUUID": "06b9fbe9-a7e2-4d60-83ca-1b5021c3b8d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ca43062-3247-446e-a83b-bdbfa0628b0c",
            "60b89916-09e8-4e0e-9cdc-8bd88c7164cd",
            "768b2f00-e38b-4ece-b56a-7c8228edf8d4",
            "b99fa192-79e3-4af2-a3de-7146c6b84f69",
            "17cf64c8-1de2-4ef7-a0d6-a2e45c504f15"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8ca54fc5-9447-4e00-a144-00932600790f",
          "title": "Autofail",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
          "file": "/spec/tokens/Autofail.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "cef2cf2b-6312-4a02-b14e-cdf95458bdf9",
              "title": "getOutcome",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
              "file": "/spec/tokens/Autofail.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "outcome is of type AUTOFAIL",
                  "fullTitle": "Autofail getOutcome outcome is of type AUTOFAIL",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autofail().getOutcome()).to.equal(src_1.TokenEffectType.AUTOFAIL);",
                  "err": {},
                  "uuid": "6b75b5cd-864d-4cbf-bee6-3d967fa7bb7b",
                  "parentUUID": "cef2cf2b-6312-4a02-b14e-cdf95458bdf9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6b75b5cd-864d-4cbf-bee6-3d967fa7bb7b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "14b96dfb-1dd9-42ea-aa46-0756408269f7",
              "title": "isRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
              "file": "/spec/tokens/Autofail.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is not a redraw token",
                  "fullTitle": "Autofail isRedraw is not a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autofail().isRedraw()).to.equal(false);",
                  "err": {},
                  "uuid": "0a014cd1-8b34-4e05-9d2d-3558b704a84b",
                  "parentUUID": "14b96dfb-1dd9-42ea-aa46-0756408269f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0a014cd1-8b34-4e05-9d2d-3558b704a84b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "986888b6-acfe-475e-80f2-e20a63f71d1d",
              "title": "sameAs",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
              "file": "/spec/tokens/Autofail.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when compared to another Auofail",
                  "fullTitle": "Autofail sameAs is true when compared to another Auofail",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Autofail(), new src_1.Autofail()], fail1 = _a[0], fail2 = _a[1];\nchai_1.expect(fail1.sameAs(fail2)).to.be.true;",
                  "err": {},
                  "uuid": "fd48692d-f5ee-4104-88ad-601af762f0a0",
                  "parentUUID": "986888b6-acfe-475e-80f2-e20a63f71d1d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when compared to another type of effect",
                  "fullTitle": "Autofail sameAs is false when compared to another type of effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var fail = new src_1.Autofail();\nchai_1.expect(fail.sameAs(new src_1.Modifier(-1))).to.be.false;\nchai_1.expect(fail.sameAs(new src_1.Autosuccess())).to.be.false;",
                  "err": {},
                  "uuid": "f01a513c-8be8-44b1-b29a-1754890f14af",
                  "parentUUID": "986888b6-acfe-475e-80f2-e20a63f71d1d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fd48692d-f5ee-4104-88ad-601af762f0a0",
                "f01a513c-8be8-44b1-b29a-1754890f14af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b6de4aaf-8f01-4d96-b18e-4b9d1a19c4ae",
          "title": "Autofail",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
          "file": "/spec/tokens/Autosuccess.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6e094a0a-fdd9-4784-b37e-a164272b50a4",
              "title": "getOutcome",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
              "file": "/spec/tokens/Autosuccess.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "outcome is of type AUTOSUCCESS",
                  "fullTitle": "Autofail getOutcome outcome is of type AUTOSUCCESS",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autosuccess().getOutcome()).to.equal(src_1.TokenEffectType.AUTOSUCCESS);",
                  "err": {},
                  "uuid": "ea637e59-f382-41a3-a3e5-7892570d8270",
                  "parentUUID": "6e094a0a-fdd9-4784-b37e-a164272b50a4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ea637e59-f382-41a3-a3e5-7892570d8270"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4724598c-99e0-4e3e-ac38-184799050fcf",
              "title": "isRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
              "file": "/spec/tokens/Autosuccess.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is not a redraw token",
                  "fullTitle": "Autofail isRedraw is not a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autosuccess().isRedraw()).to.equal(false);",
                  "err": {},
                  "uuid": "e3b5a082-0e91-4b0c-8562-28c57f145cb9",
                  "parentUUID": "4724598c-99e0-4e3e-ac38-184799050fcf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e3b5a082-0e91-4b0c-8562-28c57f145cb9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4eeb458a-115b-46e0-89e2-620ef4766c16",
              "title": "sameAs",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
              "file": "/spec/tokens/Autosuccess.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when compared to another Auofail",
                  "fullTitle": "Autofail sameAs is true when compared to another Auofail",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Autosuccess(), new src_1.Autosuccess()], succ1 = _a[0], succ2 = _a[1];\nchai_1.expect(succ1.sameAs(succ2)).to.be.true;",
                  "err": {},
                  "uuid": "9cea78e3-c620-4c03-8b4f-1111b3a66d06",
                  "parentUUID": "4eeb458a-115b-46e0-89e2-620ef4766c16",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when compared to another type of effect",
                  "fullTitle": "Autofail sameAs is false when compared to another type of effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var succ = new src_1.Autosuccess();\nchai_1.expect(succ.sameAs(new src_1.Modifier(-1))).to.be.false;\nchai_1.expect(succ.sameAs(new src_1.Autofail())).to.be.false;",
                  "err": {},
                  "uuid": "3a5c1873-b023-41ee-a00e-151f520752e2",
                  "parentUUID": "4eeb458a-115b-46e0-89e2-620ef4766c16",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9cea78e3-c620-4c03-8b4f-1111b3a66d06",
                "3a5c1873-b023-41ee-a00e-151f520752e2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c7695fa8-cba6-473b-84ae-5b149bace8de",
          "title": "Modifier",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
          "file": "/spec/tokens/Modifier.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "686b6af3-4c54-400d-9965-c1422a3a1088",
              "title": "getOutcome",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
              "file": "/spec/tokens/Modifier.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "outcome is of type MODIFIER",
                  "fullTitle": "Modifier getOutcome outcome is of type MODIFIER",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Modifier(0).getOutcome()).to.equal(src_1.TokenEffectType.MODIFIER);",
                  "err": {},
                  "uuid": "a2118107-1464-4ea5-bc24-a6b0b7db7bb0",
                  "parentUUID": "686b6af3-4c54-400d-9965-c1422a3a1088",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a2118107-1464-4ea5-bc24-a6b0b7db7bb0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5d4b996f-a8b4-42c5-9cfb-502a4fecce6e",
              "title": "isRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
              "file": "/spec/tokens/Modifier.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if it is a redraw token",
                  "fullTitle": "Modifier isRedraw returns true if it is a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Modifier(0, true).isRedraw()).to.equal(true);",
                  "err": {},
                  "uuid": "b376ea33-1d1d-48a8-b61b-d96f2dab6404",
                  "parentUUID": "5d4b996f-a8b4-42c5-9cfb-502a4fecce6e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if it is not a redraw token",
                  "fullTitle": "Modifier isRedraw returns false if it is not a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Modifier(0).isRedraw()).to.equal(false);",
                  "err": {},
                  "uuid": "5a54f2fe-a234-46bc-98cd-56b5fc202820",
                  "parentUUID": "5d4b996f-a8b4-42c5-9cfb-502a4fecce6e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b376ea33-1d1d-48a8-b61b-d96f2dab6404",
                "5a54f2fe-a234-46bc-98cd-56b5fc202820"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a8ca5612-5cfa-404c-9e31-01d297a96ecb",
              "title": "sameAs",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
              "file": "/spec/tokens/Modifier.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when representing a modifier with same value and redraw effect",
                  "fullTitle": "Modifier sameAs is true when representing a modifier with same value and redraw effect",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Modifier(1), new src_1.Modifier(1)], mod1 = _a[0], mod2 = _a[1];\nchai_1.expect(mod1.sameAs(mod2)).to.be.true;",
                  "err": {},
                  "uuid": "ec422d97-3ac9-47d8-ae54-3c55ba36a630",
                  "parentUUID": "a8ca5612-5cfa-404c-9e31-01d297a96ecb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when representing a modifier with different value",
                  "fullTitle": "Modifier sameAs is false when representing a modifier with different value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Modifier(1), new src_1.Modifier(2)], mod1 = _a[0], mod2 = _a[1];\nchai_1.expect(mod1.sameAs(mod2)).to.be.false;",
                  "err": {},
                  "uuid": "e89479b4-3573-404e-8580-924564009c81",
                  "parentUUID": "a8ca5612-5cfa-404c-9e31-01d297a96ecb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when representing a modifier with same value but different redraw effect",
                  "fullTitle": "Modifier sameAs is false when representing a modifier with same value but different redraw effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Modifier(1), new src_1.Modifier(1, true)], mod1 = _a[0], mod2 = _a[1];\nchai_1.expect(mod1.sameAs(mod2)).to.be.false;",
                  "err": {},
                  "uuid": "73b938b2-3602-4467-bc94-37b387411ade",
                  "parentUUID": "a8ca5612-5cfa-404c-9e31-01d297a96ecb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when compared to another type of effect",
                  "fullTitle": "Modifier sameAs is false when compared to another type of effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mod1 = new src_1.Modifier(1);\nchai_1.expect(mod1.sameAs(new src_1.Autofail())).to.be.false;\nchai_1.expect(mod1.sameAs(new src_1.Autosuccess())).to.be.false;",
                  "err": {},
                  "uuid": "edc8edf0-e452-4e5d-be21-2e6a3ad1a990",
                  "parentUUID": "a8ca5612-5cfa-404c-9e31-01d297a96ecb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ec422d97-3ac9-47d8-ae54-3c55ba36a630",
                "e89479b4-3573-404e-8580-924564009c81",
                "73b938b2-3602-4467-bc94-37b387411ade",
                "edc8edf0-e452-4e5d-be21-2e6a3ad1a990"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6aebc718-5b4a-4db3-91b0-b2196bfc44b9",
          "title": "TokenEffects",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
          "file": "/spec/tokens/TokenEffects.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "can be created from mapping",
              "fullTitle": "TokenEffects can be created from mapping",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nchai_1.expect(effects.getEffect(src_1.Token.ELDER_SIGN)).to.exist;\nchai_1.expect(effects.getEffect(src_1.Token.AUTOFAIL)).to.not.exist;",
              "err": {},
              "uuid": "b6fdb373-ca4a-4e5e-b9e6-2ec8aa9eeadb",
              "parentUUID": "6aebc718-5b4a-4db3-91b0-b2196bfc44b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "is not affected by changes to provided mapping",
              "fullTitle": "TokenEffects is not affected by changes to provided mapping",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mapping = [\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n];\nvar effects = new src_1.TokenEffects(mapping);\nchai_1.expect(effects.getEffect(src_1.Token.AUTOFAIL)).to.not.exist;\nmapping.push([src_1.Token.AUTOFAIL, new src_1.Autofail()]);\nchai_1.expect(effects.getEffect(src_1.Token.AUTOFAIL)).to.not.exist;",
              "err": {},
              "uuid": "52b863e9-ba93-492c-b053-5c94576c7434",
              "parentUUID": "6aebc718-5b4a-4db3-91b0-b2196bfc44b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can be created empty",
              "fullTitle": "TokenEffects can be created empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var effects = new src_1.TokenEffects();\nchai_1.expect(effects.getEffect(src_1.Token.ELDER_SIGN)).to.not.exist;",
              "err": {},
              "uuid": "13461616-8aa8-4f05-9805-9cb0411b588e",
              "parentUUID": "6aebc718-5b4a-4db3-91b0-b2196bfc44b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "e723c688-9add-4177-9ea1-090644a2583a",
              "title": "setEffect",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new TokenEffects",
                  "fullTitle": "TokenEffects setEffect should return a new TokenEffects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffect(src_1.Token.CULTIST, new src_1.Autofail());\nchai_1.expect(modifiedEffects).to.not.equal(effects);",
                  "err": {},
                  "uuid": "53f83e34-7ed6-4b06-bbc3-009badbcc934",
                  "parentUUID": "e723c688-9add-4177-9ea1-090644a2583a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set the new effect",
                  "fullTitle": "TokenEffects setEffect should set the new effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffect(src_1.Token.CULTIST, new src_1.Autofail());\nchai_1.expect(modifiedEffects.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Autofail())).to\n    .be.true;",
                  "err": {},
                  "uuid": "e1ecc4bc-6f90-4315-993c-92ef422a533d",
                  "parentUUID": "e723c688-9add-4177-9ea1-090644a2583a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should leave the original effects untouched",
                  "fullTitle": "TokenEffects setEffect should leave the original effects untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\neffects.setEffect(src_1.Token.CULTIST, new src_1.Autofail());\nchai_1.expect(effects.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Modifier(-2))).to.be\n    .true;",
                  "err": {},
                  "uuid": "266c814d-b926-4c83-85aa-cc55f1e0988d",
                  "parentUUID": "e723c688-9add-4177-9ea1-090644a2583a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "53f83e34-7ed6-4b06-bbc3-009badbcc934",
                "e1ecc4bc-6f90-4315-993c-92ef422a533d",
                "266c814d-b926-4c83-85aa-cc55f1e0988d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "176d3e48-34ca-4a84-814e-39e8299ece65",
              "title": "setEffects",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new TokenEffects",
                  "fullTitle": "TokenEffects setEffects should return a new TokenEffects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffects([\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()]\n]);\nchai_1.expect(modifiedEffects).to.not.equal(effects);",
                  "err": {},
                  "uuid": "97c8d2da-5ded-434e-826d-073235f9c915",
                  "parentUUID": "176d3e48-34ca-4a84-814e-39e8299ece65",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set the new effects",
                  "fullTitle": "TokenEffects setEffects should set the new effects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffects([\n    [src_1.Token.TABLET, new src_1.Modifier(-3)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n]);\nchai_1.expect(modifiedEffects.getEffect(src_1.Token.TABLET).sameAs(new src_1.Modifier(-3)))\n    .to.be.true;\nchai_1.expect(modifiedEffects.getEffect(src_1.Token.ELDER_THING).sameAs(new src_1.Modifier(-4))).to.be.true;",
                  "err": {},
                  "uuid": "921bda34-f3ea-4a3f-8b06-213572c8a1eb",
                  "parentUUID": "176d3e48-34ca-4a84-814e-39e8299ece65",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should leave the original effects untouched",
                  "fullTitle": "TokenEffects setEffects should leave the original effects untouched",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\neffects.setEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-3)],\n    [src_1.Token.TABLET, new src_1.Modifier(-4)]\n]);\nchai_1.expect(effects.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Modifier(-2))).to.be\n    .true;",
                  "err": {},
                  "uuid": "36679cbf-42f4-4f4f-a67a-56332e15733a",
                  "parentUUID": "176d3e48-34ca-4a84-814e-39e8299ece65",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "97c8d2da-5ded-434e-826d-073235f9c915",
                "921bda34-f3ea-4a3f-8b06-213572c8a1eb",
                "36679cbf-42f4-4f4f-a67a-56332e15733a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "30ef6241-a13c-45fd-bcfb-ed49ab2a9842",
              "title": "merge",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new TokenEffects",
                  "fullTitle": "TokenEffects merge should return a new TokenEffects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects1 = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar effects2 = new src_1.TokenEffects([\n    [src_1.Token.TABLET, new src_1.Modifier(-3)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n]);\nvar merged = effects1.merge(effects2);\nchai_1.expect(merged).to.not.equal(effects1);\nchai_1.expect(merged).to.not.equal(effects2);",
                  "err": {},
                  "uuid": "acd6bb2d-f43e-4315-94e6-96a257913d35",
                  "parentUUID": "30ef6241-a13c-45fd-bcfb-ed49ab2a9842",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should merge effects",
                  "fullTitle": "TokenEffects merge should merge effects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects1 = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar effects2 = new src_1.TokenEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-3)],\n    [src_1.Token.TABLET, new src_1.Modifier(-4)]\n]);\nvar merged = effects1.merge(effects2);\nchai_1.expect(merged.getEffect(src_1.Token.ELDER_SIGN).sameAs(new src_1.Modifier(1))).to.be\n    .true;\nchai_1.expect(merged.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Modifier(-3))).to.be\n    .true;\nchai_1.expect(merged.getEffect(src_1.Token.TABLET).sameAs(new src_1.Modifier(-4))).to.be\n    .true;",
                  "err": {},
                  "uuid": "0a1189a3-2e44-4cac-a8ab-3877c07e1879",
                  "parentUUID": "30ef6241-a13c-45fd-bcfb-ed49ab2a9842",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "acd6bb2d-f43e-4315-94e6-96a257913d35",
                "0a1189a3-2e44-4cac-a8ab-3877c07e1879"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "751fe34e-eb88-4fcf-ad88-0b2b0e0ccf5d",
              "title": "isTokenAutoSuccess",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when token is autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoSuccess is true when token is autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Autosuccess()]]);\nchai_1.expect(effects.isTokenAutoSuccess(src_1.Token.ELDER_SIGN)).to.be.true;",
                  "err": {},
                  "uuid": "45c7d5be-7e63-4d46-b00b-1efa1fbe708e",
                  "parentUUID": "751fe34e-eb88-4fcf-ad88-0b2b0e0ccf5d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when token is not autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoSuccess is false when token is not autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Modifier(1)]]);\nchai_1.expect(effects.isTokenAutoSuccess(src_1.Token.ELDER_SIGN)).to.be.false;",
                  "err": {},
                  "uuid": "a8f7757f-dabd-44eb-8d3d-323e43dcaf62",
                  "parentUUID": "751fe34e-eb88-4fcf-ad88-0b2b0e0ccf5d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "45c7d5be-7e63-4d46-b00b-1efa1fbe708e",
                "a8f7757f-dabd-44eb-8d3d-323e43dcaf62"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c62fc91e-b8ab-4d94-a73b-1a5ef44701bb",
              "title": "isTokenAutoFail",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when token is autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoFail is true when token is autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.AUTOFAIL, new src_1.Autofail()]]);\nchai_1.expect(effects.isTokenAutoFail(src_1.Token.AUTOFAIL)).to.be.true;",
                  "err": {},
                  "uuid": "8fecce61-4e1c-44ed-9748-99db62178d51",
                  "parentUUID": "c62fc91e-b8ab-4d94-a73b-1a5ef44701bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when token is not autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoFail is false when token is not autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Modifier(1)]]);\nchai_1.expect(effects.isTokenAutoFail(src_1.Token.ELDER_SIGN)).to.be.false;",
                  "err": {},
                  "uuid": "dea473f7-47d2-425b-a02c-746b7940fdc3",
                  "parentUUID": "c62fc91e-b8ab-4d94-a73b-1a5ef44701bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8fecce61-4e1c-44ed-9748-99db62178d51",
                "dea473f7-47d2-425b-a02c-746b7940fdc3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3eaebcb8-5038-4325-a0af-8e4d306c2615",
              "title": "getTokenModifier",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns the token modifier if the token is a modifier token",
                  "fullTitle": "TokenEffects getTokenModifier returns the token modifier if the token is a modifier token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Modifier(2)]]);\nchai_1.expect(effects.getTokenModifier(src_1.Token.ELDER_SIGN)).to.equal(2);",
                  "err": {},
                  "uuid": "e405da6e-1d65-40f9-939c-352ee10c8a62",
                  "parentUUID": "3eaebcb8-5038-4325-a0af-8e4d306c2615",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns an error if the token effect is not a modifier token",
                  "fullTitle": "TokenEffects getTokenModifier returns an error if the token effect is not a modifier token",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Autosuccess()]]);\nchai_1.expect(function () {\n    effects.getTokenModifier(src_1.Token.ELDER_SIGN);\n}).to.throw();",
                  "err": {},
                  "uuid": "cd8a4a20-cb31-4dd5-b996-d8584221ced0",
                  "parentUUID": "3eaebcb8-5038-4325-a0af-8e4d306c2615",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e405da6e-1d65-40f9-939c-352ee10c8a62",
                "cd8a4a20-cb31-4dd5-b996-d8584221ced0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8e56fcb8-4a8d-4857-915b-15eda11eea77",
              "title": "sortByBestOutcomeDesc",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Autosuccess comes first",
                  "fullTitle": "TokenEffects sortByBestOutcomeDesc Autosuccess comes first",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Autosuccess()],\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)]\n]);\nvar tokens = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ELDER_SIGN,\n    src_1.Token.PLUS_ONE\n];\nchai_1.expect(effects.sortByBestOutcomeDesc(tokens)[0]).to.equal(src_1.Token.ELDER_SIGN);",
                  "err": {},
                  "uuid": "bbe72aa1-1122-431c-afe0-331142683275",
                  "parentUUID": "8e56fcb8-4a8d-4857-915b-15eda11eea77",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Autofail comes last",
                  "fullTitle": "TokenEffects sortByBestOutcomeDesc Autofail comes last",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()]\n]);\nvar tokens = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.AUTOFAIL,\n    src_1.Token.PLUS_ONE\n];\nchai_1.expect(effects.sortByBestOutcomeDesc(tokens)[tokens.length - 1]).to.equal(src_1.Token.AUTOFAIL);",
                  "err": {},
                  "uuid": "7cadade5-2aff-4b03-b3d9-0f76ea39d74d",
                  "parentUUID": "8e56fcb8-4a8d-4857-915b-15eda11eea77",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Modifier tokens are sorted by their modifier value from highest to lowest",
                  "fullTitle": "TokenEffects sortByBestOutcomeDesc Modifier tokens are sorted by their modifier value from highest to lowest",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.MINUS_FIVE, new src_1.Modifier(-5)]\n]);\nvar tokens = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_FIVE,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_TWO\n];\nvar sorted = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.MINUS_FIVE\n];\nchai_1.expect(effects.sortByBestOutcomeDesc(tokens)).to.deep.equal(sorted);",
                  "err": {},
                  "uuid": "3121afcb-24ff-477e-92cd-529a880ab2e3",
                  "parentUUID": "8e56fcb8-4a8d-4857-915b-15eda11eea77",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bbe72aa1-1122-431c-afe0-331142683275",
                "7cadade5-2aff-4b03-b3d9-0f76ea39d74d",
                "3121afcb-24ff-477e-92cd-529a880ab2e3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f2c4e73d-9825-4954-8249-811f9ce79c94",
              "title": "isSuccess",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "TokenEffects isSuccess \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sharedEffects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Autosuccess()],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()]\n]);",
                  "err": {},
                  "uuid": "d47b1814-9c28-46da-a4bb-5398d9a57dc1",
                  "parentUUID": "f2c4e73d-9825-4954-8249-811f9ce79c94",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "54434a4a-7c5c-4d4b-9dbd-2c55368d2314",
                  "title": "with a single token",
                  "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
                  "file": "/spec/tokens/TokenEffects.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns true whatever the difficulty if the token is an autosuccess",
                      "fullTitle": "TokenEffects isSuccess with a single token returns true whatever the difficulty if the token is an autosuccess",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN], 3)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN], -3)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN], -20)).to.be.true;",
                      "err": {},
                      "uuid": "85d8cf23-97fd-41b8-b95d-b4925dfa7825",
                      "parentUUID": "54434a4a-7c5c-4d4b-9dbd-2c55368d2314",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false whatever the difficulty if the token is an autofail",
                      "fullTitle": "TokenEffects isSuccess with a single token returns false whatever the difficulty if the token is an autofail",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL], 3)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL], -3)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL], -20)).to.be.false;",
                      "err": {},
                      "uuid": "590ad9cb-e932-4095-93d0-900e7e34e662",
                      "parentUUID": "54434a4a-7c5c-4d4b-9dbd-2c55368d2314",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns true if the sum of (skill - difficulty) and modifier value is greater than or equal to 0",
                      "fullTitle": "TokenEffects isSuccess with a single token returns true if the sum of (skill - difficulty) and modifier value is greater than or equal to 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], 3)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], 1)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_TWO], 2)).to.be.true;",
                      "err": {},
                      "uuid": "32066c9f-f24d-4be2-b789-d705b5e4f490",
                      "parentUUID": "54434a4a-7c5c-4d4b-9dbd-2c55368d2314",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false if the sum of (skill - difficulty) and modifier value is lesser than 0",
                      "fullTitle": "TokenEffects isSuccess with a single token returns false if the sum of (skill - difficulty) and modifier value is lesser than 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], -3)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], 0)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_TWO], 1)).to.be.false;",
                      "err": {},
                      "uuid": "6e74e86d-172d-49b3-9257-88a9da511c23",
                      "parentUUID": "54434a4a-7c5c-4d4b-9dbd-2c55368d2314",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "85d8cf23-97fd-41b8-b95d-b4925dfa7825",
                    "590ad9cb-e932-4095-93d0-900e7e34e662",
                    "32066c9f-f24d-4be2-b789-d705b5e4f490",
                    "6e74e86d-172d-49b3-9257-88a9da511c23"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "67142430-06de-4005-b8e7-56962451a5ec",
                  "title": "with multiple tokens",
                  "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
                  "file": "/spec/tokens/TokenEffects.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns true when 1 of the tokens is an autosuccess and there are no autofail",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns true when 1 of the tokens is an autosuccess and there are no autofail",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_TWO], -8))\n    .to.be.true;",
                      "err": {},
                      "uuid": "4c885313-0ed8-48d4-b966-ab200e66f7ec",
                      "parentUUID": "67142430-06de-4005-b8e7-56962451a5ec",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns true when 1 of the tokens is an autofail",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns true when 1 of the tokens is an autofail",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL, src_1.Token.MINUS_TWO], 10))\n    .to.be.false;",
                      "err": {},
                      "uuid": "c3d4894b-cb24-4265-9cc4-b71799066f06",
                      "parentUUID": "67142430-06de-4005-b8e7-56962451a5ec",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false when there are both an autosuccess and an autofail among the tokens",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns false when there are both an autosuccess and an autofail among the tokens",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_TWO, src_1.Token.AUTOFAIL], 10)).to.be.false;",
                      "err": {},
                      "uuid": "4548c87a-c3c2-4762-abee-612fe87d3edd",
                      "parentUUID": "67142430-06de-4005-b8e7-56962451a5ec",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns true if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns true if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], 6)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.MINUS_ONE], 4)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_TWO, src_1.Token.MINUS_TWO, src_1.Token.MINUS_TWO], 6)).to.be.true;",
                      "err": {},
                      "uuid": "25f299f2-34a8-495a-8905-46cb277c93d3",
                      "parentUUID": "67142430-06de-4005-b8e7-56962451a5ec",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns false if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], 0)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], 2)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], 3)).to.be.false;",
                      "err": {},
                      "uuid": "5a717d98-9d62-4844-93ec-087a29e52bbb",
                      "parentUUID": "67142430-06de-4005-b8e7-56962451a5ec",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4c885313-0ed8-48d4-b966-ab200e66f7ec",
                    "c3d4894b-cb24-4265-9cc4-b71799066f06",
                    "4548c87a-c3c2-4762-abee-612fe87d3edd",
                    "25f299f2-34a8-495a-8905-46cb277c93d3",
                    "5a717d98-9d62-4844-93ec-087a29e52bbb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c03a1363-8a96-4ee0-a903-3719465728ad",
              "title": "separateRedrawTokens",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "separates redraw tokens from non-redraw tokens",
                  "fullTitle": "TokenEffects separateRedrawTokens separates redraw tokens from non-redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);\nvar _a = effects.separateRedrawTokens([\n    src_1.Token.ZERO,\n    src_1.Token.BLESS,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.CURSE,\n    src_1.Token.ZERO\n]), nonRedrawTokens = _a.nonRedrawTokens, redrawTokens = _a.redrawTokens;\nchai_1.expect(nonRedrawTokens).to.deep.equal([\n    src_1.Token.ZERO,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.ZERO\n]);\nchai_1.expect(redrawTokens).to.deep.equal([src_1.Token.BLESS, src_1.Token.CURSE]);",
                  "err": {},
                  "uuid": "395aee95-df50-47f2-aca0-c8f6698744ed",
                  "parentUUID": "c03a1363-8a96-4ee0-a903-3719465728ad",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "separates redraw tokens from non-redraw tokens when there are no redraw tokens",
                  "fullTitle": "TokenEffects separateRedrawTokens separates redraw tokens from non-redraw tokens when there are no redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);\nvar _a = effects.separateRedrawTokens([\n    src_1.Token.ZERO,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.ZERO\n]), nonRedrawTokens = _a.nonRedrawTokens, redrawTokens = _a.redrawTokens;\nchai_1.expect(nonRedrawTokens).to.deep.equal([\n    src_1.Token.ZERO,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.ZERO\n]);\nchai_1.expect(redrawTokens).to.deep.equal([]);",
                  "err": {},
                  "uuid": "35af6b31-c3ee-4f5c-84fd-d6947a0594b5",
                  "parentUUID": "c03a1363-8a96-4ee0-a903-3719465728ad",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "separates redraw tokens from non-redraw tokens when there are no non-redraw tokens",
                  "fullTitle": "TokenEffects separateRedrawTokens separates redraw tokens from non-redraw tokens when there are no non-redraw tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);\nvar _a = effects.separateRedrawTokens([\n    src_1.Token.BLESS,\n    src_1.Token.CURSE\n]), nonRedrawTokens = _a.nonRedrawTokens, redrawTokens = _a.redrawTokens;\nchai_1.expect(nonRedrawTokens).to.deep.equal([]);\nchai_1.expect(redrawTokens).to.deep.equal([src_1.Token.BLESS, src_1.Token.CURSE]);",
                  "err": {},
                  "uuid": "429bb8e3-bb43-4f60-88ea-5457aad86575",
                  "parentUUID": "c03a1363-8a96-4ee0-a903-3719465728ad",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "leaves the original token array untouched",
                  "fullTitle": "TokenEffects separateRedrawTokens leaves the original token array untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)]\n]);\nvar tokens = [src_1.Token.BLESS, src_1.Token.PLUS_ONE];\neffects.separateRedrawTokens(tokens);\nchai_1.expect(tokens).to.deep.equal([src_1.Token.BLESS, src_1.Token.PLUS_ONE]);",
                  "err": {},
                  "uuid": "41816c21-9cbe-4fc7-9b0a-49b04b11017f",
                  "parentUUID": "c03a1363-8a96-4ee0-a903-3719465728ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "395aee95-df50-47f2-aca0-c8f6698744ed",
                "35af6b31-c3ee-4f5c-84fd-d6947a0594b5",
                "429bb8e3-bb43-4f60-88ea-5457aad86575",
                "41816c21-9cbe-4fc7-9b0a-49b04b11017f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "b6fdb373-ca4a-4e5e-b9e6-2ec8aa9eeadb",
            "52b863e9-ba93-492c-b053-5c94576c7434",
            "13461616-8aa8-4f05-9805-9cb0411b588e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b21a248-182d-49c8-871e-78abdf521e42",
          "title": "utils",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
          "file": "/spec/utils.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1c48920c-9961-403d-8fd5-5ee83274e292",
              "title": "removeFirst",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should remove the first occurrence",
                  "fullTitle": "utils removeFirst should remove the first occurrence",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar removed = utils.removeFirst(arr, 2);\nchai_1.expect(removed).to.deep.equal([1, 3]);",
                  "err": {},
                  "uuid": "4e16b122-55ff-4006-9f6e-4e3a16a82280",
                  "parentUUID": "1c48920c-9961-403d-8fd5-5ee83274e292",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not remove other occurrences",
                  "fullTitle": "utils removeFirst should not remove other occurrences",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 2, 2, 3];\nvar removed = utils.removeFirst(arr, 2);\nchai_1.expect(removed).to.deep.equal([1, 2, 2, 3]);",
                  "err": {},
                  "uuid": "2e988166-4160-4a96-82a4-2b557602b150",
                  "parentUUID": "1c48920c-9961-403d-8fd5-5ee83274e292",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not modify the original array",
                  "fullTitle": "utils removeFirst should not modify the original array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nutils.removeFirst(arr, 2);\nchai_1.expect(arr).to.deep.equal([1, 2, 3]);",
                  "err": {},
                  "uuid": "f48dd79b-9e40-4709-8f89-57e891393707",
                  "parentUUID": "1c48920c-9961-403d-8fd5-5ee83274e292",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should do nothing if the array does not contain the element",
                  "fullTitle": "utils removeFirst should do nothing if the array does not contain the element",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar removed = utils.removeFirst(arr, 4);\nchai_1.expect(arr).to.deep.equal([1, 2, 3]);\nchai_1.expect(removed).to.deep.equal([1, 2, 3]);\nchai_1.expect(arr).to.not.equal(removed);",
                  "err": {},
                  "uuid": "0aae75fd-a920-43fa-9778-a9dd703c45be",
                  "parentUUID": "1c48920c-9961-403d-8fd5-5ee83274e292",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4e16b122-55ff-4006-9f6e-4e3a16a82280",
                "2e988166-4160-4a96-82a4-2b557602b150",
                "f48dd79b-9e40-4709-8f89-57e891393707",
                "0aae75fd-a920-43fa-9778-a9dd703c45be"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "defbbf8c-f6d9-4941-a9b9-ac98d987cf44",
              "title": "flatten",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "flattens an array",
                  "fullTitle": "utils flatten flattens an array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.flatten([[], [1], [2]])).to.deep.equal([1, 2]);",
                  "err": {},
                  "uuid": "62705b4f-8552-4d25-a72f-33224179fe97",
                  "parentUUID": "defbbf8c-f6d9-4941-a9b9-ac98d987cf44",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "62705b4f-8552-4d25-a72f-33224179fe97"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2049ba64-f2ad-480b-b305-30c3179955d0",
              "title": "arrayEquals",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the arrays contain the same values in the same order",
                  "fullTitle": "utils arrayEquals returns true if the arrays contain the same values in the same order",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.arrayEquals([1, 2, 3], [1, 2, 3])).to.be.true;",
                  "err": {},
                  "uuid": "e97a6a53-107a-405e-aed9-98242d5bd05f",
                  "parentUUID": "2049ba64-f2ad-480b-b305-30c3179955d0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the arrays do not contain the same values",
                  "fullTitle": "utils arrayEquals returns false if the arrays do not contain the same values",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.arrayEquals([1, 2, 3], [1, 2, 4])).to.be.false;",
                  "err": {},
                  "uuid": "12f6d8ff-fd51-4101-b1de-f2cbf5396129",
                  "parentUUID": "2049ba64-f2ad-480b-b305-30c3179955d0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the arrays contain the same values but in a different order",
                  "fullTitle": "utils arrayEquals returns false if the arrays contain the same values but in a different order",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.arrayEquals([1, 2, 3], [3, 1, 2])).to.be.false;",
                  "err": {},
                  "uuid": "afcf3d49-8efb-47fe-a9fe-05746ebe0e3d",
                  "parentUUID": "2049ba64-f2ad-480b-b305-30c3179955d0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can compare different primitives",
                  "fullTitle": "utils arrayEquals can compare different primitives",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.arrayEquals([\"a\", \"b\"], [\"a\", \"b\"])).to.be.true;\nchai_1.expect(utils.arrayEquals([1.0, 2.5], [1.0, 2.5])).to.be.true;\nchai_1.expect(utils.arrayEquals([true, false], [true, false])).to.be.true;\nchai_1.expect(utils.arrayEquals([1, null, undefined], [1, null, undefined])).to\n    .be.true;",
                  "err": {},
                  "uuid": "dbce2332-bf49-4869-9c67-1df6ef8083df",
                  "parentUUID": "2049ba64-f2ad-480b-b305-30c3179955d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e97a6a53-107a-405e-aed9-98242d5bd05f",
                "12f6d8ff-fd51-4101-b1de-f2cbf5396129",
                "afcf3d49-8efb-47fe-a9fe-05746ebe0e3d",
                "dbce2332-bf49-4869-9c67-1df6ef8083df"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ddf7c57d-49c8-4471-8b04-7f009a699a9e",
              "title": "combinations",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an empty array if K > N",
                  "fullTitle": "utils combinations should return an empty array if K > N",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar comb = utils.combinations(4, arr);\nchai_1.expect(comb).to.deep.equals([]);",
                  "err": {},
                  "uuid": "94dc0eb5-2006-4757-ab1c-3a3ef91c1439",
                  "parentUUID": "ddf7c57d-49c8-4471-8b04-7f009a699a9e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return [[]] if K <= 0",
                  "fullTitle": "utils combinations should return [[]] if K <= 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nchai_1.expect(utils.combinations(0, arr)).to.deep.equals([[]]);\nchai_1.expect(utils.combinations(-5, arr)).to.deep.equals([[]]);",
                  "err": {},
                  "uuid": "d3405528-575d-433b-9ccd-20f3acb170ec",
                  "parentUUID": "ddf7c57d-49c8-4471-8b04-7f009a699a9e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the combinations",
                  "fullTitle": "utils combinations should return the combinations",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar expected = [\n    [1, 2],\n    [1, 3],\n    [2, 3]\n];\nchai_1.expect(utils.combinations(2, arr)).to.deep.equals(expected);",
                  "err": {},
                  "uuid": "dc152ca5-33e9-4d59-97ed-6c8478a0b3d3",
                  "parentUUID": "ddf7c57d-49c8-4471-8b04-7f009a699a9e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "94dc0eb5-2006-4757-ab1c-3a3ef91c1439",
                "d3405528-575d-433b-9ccd-20f3acb170ec",
                "dc152ca5-33e9-4d59-97ed-6c8478a0b3d3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3a8a73d6-f245-4a17-91f4-d4d8a002d815",
              "title": "allCombinations",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return [[]] if provided an empty array of elements",
                  "fullTitle": "utils allCombinations should return [[]] if provided an empty array of elements",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var allComb = utils.allCombinations([]);\nchai_1.expect(allComb).to.deep.equals([[]]);",
                  "err": {},
                  "uuid": "14a4f415-c39e-4d10-92b6-b5ed53ec7efb",
                  "parentUUID": "3a8a73d6-f245-4a17-91f4-d4d8a002d815",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return all combinations of provided elements including empty and full sets",
                  "fullTitle": "utils allCombinations should return all combinations of provided elements including empty and full sets",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar expected = [[], [1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3]];\nvar allComb = utils.allCombinations(arr);\nchai_1.expect(allComb).to.deep.equals(expected);",
                  "err": {},
                  "uuid": "a9a82975-6054-47ea-85c3-291bf85fb7e3",
                  "parentUUID": "3a8a73d6-f245-4a17-91f4-d4d8a002d815",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "14a4f415-c39e-4d10-92b6-b5ed53ec7efb",
                "a9a82975-6054-47ea-85c3-291bf85fb7e3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8586b62c-f885-4620-a267-b493e3f9bed5",
              "title": "cartesianProduct",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should compute cartesian product of 2 arrays",
                  "fullTitle": "utils cartesianProduct should compute cartesian product of 2 arrays",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr1 = [1, 2];\nvar arr2 = [3, 4];\nvar expected = [\n    [1, 3],\n    [1, 4],\n    [2, 3],\n    [2, 4]\n];\nchai_1.expect(utils.cartesianProduct(arr1, arr2)).to.deep.equals(expected);",
                  "err": {},
                  "uuid": "241a9bb7-e649-4c98-bdc2-f16982989f10",
                  "parentUUID": "8586b62c-f885-4620-a267-b493e3f9bed5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "241a9bb7-e649-4c98-bdc2-f16982989f10"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "add43050-deda-4521-818e-37bc26cd56ad",
              "title": "factorial",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns 1 for 0!",
                  "fullTitle": "utils factorial returns 1 for 0!",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.factorial(0)).to.equal(1);",
                  "err": {},
                  "uuid": "e12f361a-e1e5-44d6-b619-027a76e2c97c",
                  "parentUUID": "add43050-deda-4521-818e-37bc26cd56ad",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns 6 for 3!",
                  "fullTitle": "utils factorial returns 6 for 3!",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.factorial(3)).to.equal(6);",
                  "err": {},
                  "uuid": "7eba5f92-39b1-4459-85a9-b71424859749",
                  "parentUUID": "add43050-deda-4521-818e-37bc26cd56ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e12f361a-e1e5-44d6-b619-027a76e2c97c",
                "7eba5f92-39b1-4459-85a9-b71424859749"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "reports/tests",
        "reportFilename": "index"
      },
      "version": "4.1.0"
    }
  }
}