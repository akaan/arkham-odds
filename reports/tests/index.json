{
  "stats": {
    "suites": 51,
    "tests": 130,
    "passes": 130,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-15T14:37:40.047Z",
    "end": "2020-05-15T14:37:40.109Z",
    "duration": 62,
    "testsRegistered": 130,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6d1da457-a95d-44ad-8503-0965c86a3301",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0e448cdc-be0a-416c-a43c-66d2d60b2492",
          "title": "Bag",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
          "file": "/spec/bag/Bag.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not be affected by changes to the passed array of tokens",
              "fullTitle": "Bag should not be affected by changes to the passed array of tokens",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var someTokens = [tokens_1.Token.ZERO, tokens_1.Token.MINUS_ONE];\nvar bag = new bag_1.Bag(someTokens);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ZERO, tokens_1.Token.MINUS_ONE]);\nsomeTokens.push(tokens_1.Token.AUTOFAIL);\nchai_1.expect(someTokens).to.deep.equal([\n    tokens_1.Token.ZERO,\n    tokens_1.Token.MINUS_ONE,\n    tokens_1.Token.AUTOFAIL\n]);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ZERO, tokens_1.Token.MINUS_ONE]);",
              "err": {},
              "uuid": "bcfb33b8-0f32-4a4c-9b0b-26cac7fb738f",
              "parentUUID": "0e448cdc-be0a-416c-a43c-66d2d60b2492",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "10d71aff-7586-4fe5-8ceb-7ecb06070db6",
              "title": "getTokens",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
              "file": "/spec/bag/Bag.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "modifications to the returned array should not affect the Bag",
                  "fullTitle": "Bag getTokens modifications to the returned array should not affect the Bag",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nvar tokens = bag.getTokens();\ntokens.push(tokens_1.Token.TABLET);\nchai_1.expect(tokens).to.deep.equal([\n    tokens_1.Token.ELDER_SIGN,\n    tokens_1.Token.AUTOFAIL,\n    tokens_1.Token.TABLET\n]);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);",
                  "err": {},
                  "uuid": "ff8af4bf-91ed-4a84-a4a0-1dfdd5387019",
                  "parentUUID": "10d71aff-7586-4fe5-8ceb-7ecb06070db6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff8af4bf-91ed-4a84-a4a0-1dfdd5387019"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5c383ee1-d576-4218-8f9b-82833fbec3cc",
              "title": "addTokens",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
              "file": "/spec/bag/Bag.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new Bag",
                  "fullTitle": "Bag addTokens should return a new Bag",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN]);\nvar added = bag.addTokens([tokens_1.Token.AUTOFAIL]);\nchai_1.expect(added).not.to.equal(bag);",
                  "err": {},
                  "uuid": "474e3e09-656c-4dcd-9d8f-47be2528232d",
                  "parentUUID": "5c383ee1-d576-4218-8f9b-82833fbec3cc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add the tokens",
                  "fullTitle": "Bag addTokens should add the tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN]);\nvar added = bag.addTokens([tokens_1.Token.AUTOFAIL, tokens_1.Token.TABLET]);\nchai_1.expect(added.getTokens()).to.deep.equal([\n    tokens_1.Token.ELDER_SIGN,\n    tokens_1.Token.AUTOFAIL,\n    tokens_1.Token.TABLET\n]);",
                  "err": {},
                  "uuid": "6e2ef2f0-1f77-4346-8af7-527588ab7c47",
                  "parentUUID": "5c383ee1-d576-4218-8f9b-82833fbec3cc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should leave the original Bag untouched",
                  "fullTitle": "Bag addTokens should leave the original Bag untouched",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN]);\nbag.addTokens([tokens_1.Token.AUTOFAIL]);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN]);",
                  "err": {},
                  "uuid": "91cce391-a316-4495-837e-8aeba33d15ce",
                  "parentUUID": "5c383ee1-d576-4218-8f9b-82833fbec3cc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "474e3e09-656c-4dcd-9d8f-47be2528232d",
                "6e2ef2f0-1f77-4346-8af7-527588ab7c47",
                "91cce391-a316-4495-837e-8aeba33d15ce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cc7e3279-7d57-49fe-94f4-ba1afc434faa",
              "title": "removeToken",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
              "file": "/spec/bag/Bag.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new Bag",
                  "fullTitle": "Bag removeToken should return a new Bag",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nvar removed = bag.removeToken(tokens_1.Token.AUTOFAIL);\nchai_1.expect(removed).not.to.equal(bag);",
                  "err": {},
                  "uuid": "df1f830f-fb7e-4999-9b15-48cfc82c62c0",
                  "parentUUID": "cc7e3279-7d57-49fe-94f4-ba1afc434faa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should remove the token",
                  "fullTitle": "Bag removeToken should remove the token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nvar removed = bag.removeToken(tokens_1.Token.AUTOFAIL);\nchai_1.expect(removed.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN]);",
                  "err": {},
                  "uuid": "e8eefd9c-5f1c-41e3-9c8f-6ee2ba355ae4",
                  "parentUUID": "cc7e3279-7d57-49fe-94f4-ba1afc434faa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should the original Bag untouched",
                  "fullTitle": "Bag removeToken should the original Bag untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nbag.removeToken(tokens_1.Token.AUTOFAIL);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);",
                  "err": {},
                  "uuid": "d759d2d6-5d33-48aa-bb73-d72af9bdb5fe",
                  "parentUUID": "cc7e3279-7d57-49fe-94f4-ba1afc434faa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "df1f830f-fb7e-4999-9b15-48cfc82c62c0",
                "e8eefd9c-5f1c-41e3-9c8f-6ee2ba355ae4",
                "d759d2d6-5d33-48aa-bb73-d72af9bdb5fe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "bcfb33b8-0f32-4a4c-9b0b-26cac7fb738f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8a0dfc5a-d572-40f1-a435-19b2caee759c",
          "title": "cards",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
          "file": "/spec/cards.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "cards \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.MINUS_FOUR, new src_1.Modifier(-4)],\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);",
              "err": {},
              "uuid": "755e6e3c-dd6f-432e-b35b-ad6ddf55a61e",
              "parentUUID": "8a0dfc5a-d572-40f1-a435-19b2caee759c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8b55d9b3-ba38-4be9-a6f8-6cd757cb8558",
              "title": "success",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards success returns a function",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.success(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "f421420b-6dd0-4bbd-a9b3-c0ac7b285533",
                  "parentUUID": "8b55d9b3-ba38-4be9-a6f8-6cd757cb8558",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returned function determine success resolving all pulled tokens",
                  "fullTitle": "cards success returned function determine success resolving all pulled tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.success(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be\n    .false;\nchai_1.expect(src_1.success(3)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be\n    .true;",
                  "err": {},
                  "uuid": "f0ac79ba-2686-43db-bd65-d1918ad18bba",
                  "parentUUID": "8b55d9b3-ba38-4be9-a6f8-6cd757cb8558",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f421420b-6dd0-4bbd-a9b3-c0ac7b285533",
                "f0ac79ba-2686-43db-bd65-d1918ad18bba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "110b505e-aee4-4d5c-918b-f444391f7893",
              "title": "successChoosingBest",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards successChoosingBest returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.successChoosingBest(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "18449945-e4c2-4a35-97c6-1425303c51c8",
                  "parentUUID": "110b505e-aee4-4d5c-918b-f444391f7893",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty when applying the best token",
                  "fullTitle": "cards successChoosingBest returns true if greater than difficulty when applying the best token",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.successChoosingBest(1)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be.true;",
                  "err": {},
                  "uuid": "4fb1c6d0-59ce-4099-a4c0-f8bc6bb7ce22",
                  "parentUUID": "110b505e-aee4-4d5c-918b-f444391f7893",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty when applying the best token",
                  "fullTitle": "cards successChoosingBest returns false if lesser than difficulty when applying the best token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.successChoosingBest(0)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "bc87ac0d-4651-4b4f-adb4-46d911fe3678",
                  "parentUUID": "110b505e-aee4-4d5c-918b-f444391f7893",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should assume that redraw tokens where pulled",
                  "fullTitle": "cards successChoosingBest should assume that redraw tokens where pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.successChoosingBest(0)([src_1.Token.AUTOFAIL, src_1.Token.MINUS_FOUR, src_1.Token.BLESS], effects)).to.be.false;",
                  "err": {},
                  "uuid": "428a8fff-0f4b-4d2f-b615-fad0545d46af",
                  "parentUUID": "110b505e-aee4-4d5c-918b-f444391f7893",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "18449945-e4c2-4a35-97c6-1425303c51c8",
                "4fb1c6d0-59ce-4099-a4c0-f8bc6bb7ce22",
                "bc87ac0d-4651-4b4f-adb4-46d911fe3678",
                "428a8fff-0f4b-4d2f-b615-fad0545d46af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2cb47a23-41e0-4397-9bfd-ad627458c1ee",
              "title": "oliveMcBride",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBride returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBride(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "f2f7b4ec-281d-4082-ba41-51486bbe8ce0",
                  "parentUUID": "2cb47a23-41e0-4397-9bfd-ad627458c1ee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if higher than difficulty with the 2 best tokens",
                  "fullTitle": "cards oliveMcBride returns true if higher than difficulty with the 2 best tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBride(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.true;",
                  "err": {},
                  "uuid": "7d554a22-9475-497d-8eff-6e700e432e95",
                  "parentUUID": "2cb47a23-41e0-4397-9bfd-ad627458c1ee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty with the 2 best tokens",
                  "fullTitle": "cards oliveMcBride returns false if lesser than difficulty with the 2 best tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBride(0)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.false;",
                  "err": {},
                  "uuid": "43bf6eb5-f1a2-4bf2-992c-983154276e96",
                  "parentUUID": "2cb47a23-41e0-4397-9bfd-ad627458c1ee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should assume that redraw tokens where pulled",
                  "fullTitle": "cards oliveMcBride should assume that redraw tokens where pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBride(-2)([src_1.Token.AUTOFAIL, src_1.Token.MINUS_FOUR, src_1.Token.BLESS, src_1.Token.ZERO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "5e1aac42-f2b4-474c-a3c0-a10d8c00e0c8",
                  "parentUUID": "2cb47a23-41e0-4397-9bfd-ad627458c1ee",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f2f7b4ec-281d-4082-ba41-51486bbe8ce0",
                "7d554a22-9475-497d-8eff-6e700e432e95",
                "43bf6eb5-f1a2-4bf2-992c-983154276e96",
                "5e1aac42-f2b4-474c-a3c0-a10d8c00e0c8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7ba9a959-e9fc-414b-a7d2-766f725ba94f",
              "title": "oliveMcBrideWithSkull",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBrideWithSkull returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBrideWithSkull(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "95de59ea-0eb0-4292-a403-34185227e9f0",
                  "parentUUID": "7ba9a959-e9fc-414b-a7d2-766f725ba94f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if there is no Skull token in the tokens pulled",
                  "fullTitle": "cards oliveMcBrideWithSkull returns false if there is no Skull token in the tokens pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(0)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "af1cf9b9-e786-48d0-9235-6ae77d9c6fae",
                  "parentUUID": "7ba9a959-e9fc-414b-a7d2-766f725ba94f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not modify the combination",
                  "fullTitle": "cards oliveMcBrideWithSkull should not modify the combination",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var myComb = [src_1.Token.SKULL, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO];\nsrc_1.oliveMcBrideWithSkull(2)(myComb, effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-1)]])));\nchai_1.expect(myComb).to.deep.equal([\n    src_1.Token.SKULL,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO\n]);",
                  "err": {},
                  "uuid": "3862a3cc-6756-4530-9595-43026abdacaf",
                  "parentUUID": "7ba9a959-e9fc-414b-a7d2-766f725ba94f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if there is a Skull token in the tokens pulled and if adding best of remaining tokens is still higher than difficulty",
                  "fullTitle": "cards oliveMcBrideWithSkull returns true if there is a Skull token in the tokens pulled and if adding best of remaining tokens is still higher than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(2)([src_1.Token.SKULL, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-1)]])))).to.be.true;",
                  "err": {},
                  "uuid": "b57dd91a-3fc2-4a43-8a42-3978c3767af3",
                  "parentUUID": "7ba9a959-e9fc-414b-a7d2-766f725ba94f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if there is a Skull token in the tokens pulled and if adding best of remaining tokens is lesser than difficulty",
                  "fullTitle": "cards oliveMcBrideWithSkull returns false if there is a Skull token in the tokens pulled and if adding best of remaining tokens is lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(1)([src_1.Token.SKULL, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-1)]])))).to.be.false;",
                  "err": {},
                  "uuid": "71d1a2ac-207a-450e-89ab-4330444f8271",
                  "parentUUID": "7ba9a959-e9fc-414b-a7d2-766f725ba94f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should assume that redraw tokens where pulled",
                  "fullTitle": "cards oliveMcBrideWithSkull should assume that redraw tokens where pulled",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(3)([src_1.Token.AUTOFAIL, src_1.Token.SKULL, src_1.Token.BLESS, src_1.Token.MINUS_TWO], effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-4)]])))).to.be.false;",
                  "err": {},
                  "uuid": "b9eb3945-a8d3-4c9b-996b-61c194b9bfd6",
                  "parentUUID": "7ba9a959-e9fc-414b-a7d2-766f725ba94f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "95de59ea-0eb0-4292-a403-34185227e9f0",
                "af1cf9b9-e786-48d0-9235-6ae77d9c6fae",
                "3862a3cc-6756-4530-9595-43026abdacaf",
                "b57dd91a-3fc2-4a43-8a42-3978c3767af3",
                "71d1a2ac-207a-450e-89ab-4330444f8271",
                "b9eb3945-a8d3-4c9b-996b-61c194b9bfd6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "17d45c50-b82c-4edf-b5bc-3f835b547d93",
              "title": "recallTheFuture",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards recallTheFuture returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.recallTheFuture(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "a86f7ea4-2cb8-408b-aa78-f3911d253b2c",
                  "parentUUID": "17d45c50-b82c-4edf-b5bc-3f835b547d93",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty",
                  "fullTitle": "cards recallTheFuture returns true if greater than difficulty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(0)([src_1.Token.ZERO], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.true;",
                  "err": {},
                  "uuid": "2a252617-bfc8-4677-aae3-7dc3afd7176b",
                  "parentUUID": "17d45c50-b82c-4edf-b5bc-3f835b547d93",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if lesser than difficulty but drew the token which has the most chances to be turned into success using the +2 bonus",
                  "fullTitle": "cards recallTheFuture returns true if lesser than difficulty but drew the token which has the most chances to be turned into success using the +2 bonus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.MINUS_ONE], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.true;",
                  "err": {},
                  "uuid": "7cd71afd-b57a-4038-b620-2dd7bd97351a",
                  "parentUUID": "17d45c50-b82c-4edf-b5bc-3f835b547d93",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty and did not drew the token which has the most chances to be turned into success using the +2 bonus",
                  "fullTitle": "cards recallTheFuture returns false if lesser than difficulty and did not drew the token which has the most chances to be turned into success using the +2 bonus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.ZERO], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.false;",
                  "err": {},
                  "uuid": "b99e3ef0-5037-48fd-8ec3-758fa9af3417",
                  "parentUUID": "17d45c50-b82c-4edf-b5bc-3f835b547d93",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if still lesser than difficulty applying the +2 bonus",
                  "fullTitle": "cards recallTheFuture returns false if still lesser than difficulty applying the +2 bonus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-2)([src_1.Token.MINUS_ONE], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.false;",
                  "err": {},
                  "uuid": "e9c25085-a4a4-4328-bfcd-f70590ea5bd8",
                  "parentUUID": "17d45c50-b82c-4edf-b5bc-3f835b547d93",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can handle the case where several tokens where drawn",
                  "fullTitle": "cards recallTheFuture can handle the case where several tokens where drawn",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE], effects, new src_1.Bag([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO\n]))).to.be.true;",
                  "err": {},
                  "uuid": "e7d30d5e-7de9-431e-b6d0-54d7fe41cda0",
                  "parentUUID": "17d45c50-b82c-4edf-b5bc-3f835b547d93",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can handle redraw tokens",
                  "fullTitle": "cards recallTheFuture can handle redraw tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.MINUS_ONE, src_1.Token.CURSE], effects, new src_1.Bag([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.CURSE\n]))).to.be.false;",
                  "err": {},
                  "uuid": "27830448-66ba-4e40-8141-dff49d3e948f",
                  "parentUUID": "17d45c50-b82c-4edf-b5bc-3f835b547d93",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a86f7ea4-2cb8-408b-aa78-f3911d253b2c",
                "2a252617-bfc8-4677-aae3-7dc3afd7176b",
                "7cd71afd-b57a-4038-b620-2dd7bd97351a",
                "b99e3ef0-5037-48fd-8ec3-758fa9af3417",
                "e9c25085-a4a4-4328-bfcd-f70590ea5bd8",
                "e7d30d5e-7de9-431e-b6d0-54d7fe41cda0",
                "27830448-66ba-4e40-8141-dff49d3e948f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7e480dc8-145a-427b-b652-6b3dcbc30566",
              "title": "darkProphecy",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards darkProphecy returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.darkProphecy(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "395cf4c7-0e6a-4211-8281-ea78c02f2749",
                  "parentUUID": "7e480dc8-145a-427b-b652-6b3dcbc30566",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return true if greater than difficulty using the \"best\" bad token pulled",
                  "fullTitle": "cards darkProphecy return true if greater than difficulty using the \"best\" bad token pulled",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(2)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.CULTIST,\n    src_1.Token.ELDER_THING\n], effects.merge(new src_1.TokenEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n])))).to.be.true;",
                  "err": {},
                  "uuid": "4e257e58-690b-49e3-ada0-8065e5b0afef",
                  "parentUUID": "7e480dc8-145a-427b-b652-6b3dcbc30566",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return false if lesser than difficulty using the \"best\" bad token pulled",
                  "fullTitle": "cards darkProphecy return false if lesser than difficulty using the \"best\" bad token pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(1)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.CULTIST,\n    src_1.Token.ELDER_THING\n], effects.merge(new src_1.TokenEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n])))).to.be.false;",
                  "err": {},
                  "uuid": "145e954c-9074-4697-84c1-dc35e7209fbb",
                  "parentUUID": "7e480dc8-145a-427b-b652-6b3dcbc30566",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return true if greater than difficulty using best token when no bad tokens were pulled",
                  "fullTitle": "cards darkProphecy return true if greater than difficulty using best token when no bad tokens were pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(0)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_TWO\n], effects)).to.be.true;",
                  "err": {},
                  "uuid": "e1394a65-b381-45bd-af4f-e6198d5d42a9",
                  "parentUUID": "7e480dc8-145a-427b-b652-6b3dcbc30566",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return false if lesser than difficulty using best token when no bad tokens were pulled",
                  "fullTitle": "cards darkProphecy return false if lesser than difficulty using best token when no bad tokens were pulled",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(-1)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_TWO\n], effects)).to.be.false;",
                  "err": {},
                  "uuid": "ddad65fc-82a7-43c5-825c-1bae3d71f230",
                  "parentUUID": "7e480dc8-145a-427b-b652-6b3dcbc30566",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens (assuming they were pulled)",
                  "fullTitle": "cards darkProphecy takes into account redraw tokens (assuming they were pulled)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(0)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.CURSE\n], effects)).to.be.false;",
                  "err": {},
                  "uuid": "a286466c-321f-47d4-b230-0ddfa7da9361",
                  "parentUUID": "7e480dc8-145a-427b-b652-6b3dcbc30566",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "395cf4c7-0e6a-4211-8281-ea78c02f2749",
                "4e257e58-690b-49e3-ada0-8065e5b0afef",
                "145e954c-9074-4697-84c1-dc35e7209fbb",
                "e1394a65-b381-45bd-af4f-e6198d5d42a9",
                "ddad65fc-82a7-43c5-825c-1bae3d71f230",
                "a286466c-321f-47d4-b230-0ddfa7da9361"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "11803bc0-7030-49bc-8d66-89aa2b561531",
              "title": "winchesterDoing1Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards winchesterDoing1Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.winchesterDoing1Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "55c44042-64ec-4f40-8221-8f265fc97957",
                  "parentUUID": "11803bc0-7030-49bc-8d66-89aa2b561531",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards winchesterDoing1Damage returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing1Damage(1)([src_1.Token.MINUS_ONE], effects)).to.be.true;\nchai_1.expect(src_1.winchesterDoing1Damage(2)([src_1.Token.MINUS_TWO], effects)).to.be.true;",
                  "err": {},
                  "uuid": "7f669629-ea86-458d-887c-23e93d2b82f4",
                  "parentUUID": "11803bc0-7030-49bc-8d66-89aa2b561531",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards winchesterDoing1Damage returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing1Damage(0)([src_1.Token.ELDER_SIGN], effects)).to.be\n    .false;\nchai_1.expect(src_1.winchesterDoing1Damage(0)([src_1.Token.ZERO], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(-1)([src_1.Token.PLUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "957c736b-7cbc-4543-aa35-e0699c7a20e7",
                  "parentUUID": "11803bc0-7030-49bc-8d66-89aa2b561531",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards winchesterDoing1Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing1Damage(-2)([src_1.Token.ELDER_SIGN], effects)).to.be\n    .false;\nchai_1.expect(src_1.winchesterDoing1Damage(-1)([src_1.Token.ZERO], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(-2)([src_1.Token.PLUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(0)([src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(1)([src_1.Token.MINUS_TWO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "10a1affd-7390-4fb1-aab0-41e57f1eddd6",
                  "parentUUID": "11803bc0-7030-49bc-8d66-89aa2b561531",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "55c44042-64ec-4f40-8221-8f265fc97957",
                "7f669629-ea86-458d-887c-23e93d2b82f4",
                "957c736b-7cbc-4543-aa35-e0699c7a20e7",
                "10a1affd-7390-4fb1-aab0-41e57f1eddd6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "811efe14-7c8d-48c1-a3a8-cfc4b28c91d1",
              "title": "winchesterDoing3Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards winchesterDoing3Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.winchesterDoing3Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "a40ce53e-fe63-4122-ac55-4f4a237a845e",
                  "parentUUID": "811efe14-7c8d-48c1-a3a8-cfc4b28c91d1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards winchesterDoing3Damage returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing3Damage(0)([src_1.Token.ELDER_SIGN], effects)).to.be.true;\nchai_1.expect(src_1.winchesterDoing3Damage(0)([src_1.Token.ZERO], effects)).to.be.true;\nchai_1.expect(src_1.winchesterDoing3Damage(-1)([src_1.Token.PLUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "6d898b67-9646-406d-95c3-74430062f8c9",
                  "parentUUID": "811efe14-7c8d-48c1-a3a8-cfc4b28c91d1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards winchesterDoing3Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing3Damage(-2)([src_1.Token.ELDER_SIGN], effects)).to.be\n    .false;\nchai_1.expect(src_1.winchesterDoing3Damage(-1)([src_1.Token.ZERO], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing3Damage(-2)([src_1.Token.PLUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "24a89dcc-542f-48da-a65a-f8276bad9df3",
                  "parentUUID": "811efe14-7c8d-48c1-a3a8-cfc4b28c91d1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards winchesterDoing3Damage returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing3Damage(1)([src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "5aa23320-0eed-4e29-a546-26f451482264",
                  "parentUUID": "811efe14-7c8d-48c1-a3a8-cfc4b28c91d1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a40ce53e-fe63-4122-ac55-4f4a237a845e",
                "6d898b67-9646-406d-95c3-74430062f8c9",
                "24a89dcc-542f-48da-a65a-f8276bad9df3",
                "5aa23320-0eed-4e29-a546-26f451482264"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "49107807-1025-4197-8762-7b6663889d3f",
              "title": "oliveMcBrideAndWinchesterDoing1Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBrideAndWinchesterDoing1Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "200cd551-703b-4ce1-ab00-37e2decbf57f",
                  "parentUUID": "49107807-1025-4197-8762-7b6663889d3f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(2)([src_1.Token.MINUS_TWO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "17be26c9-b595-41b4-afdd-870346d3452f",
                  "parentUUID": "49107807-1025-4197-8762-7b6663889d3f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(0)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(0)([src_1.Token.PLUS_ONE, , src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "17f03da8-f2ca-4587-8ef1-1c1c6419df94",
                  "parentUUID": "49107807-1025-4197-8762-7b6663889d3f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(-1)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(1)([src_1.Token.MINUS_TWO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "15f07836-687b-4ab0-9e85-be51e5ba8ff5",
                  "parentUUID": "49107807-1025-4197-8762-7b6663889d3f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage takes into account redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "235246c9-6e57-4163-a537-dadd35ab766a",
                  "parentUUID": "49107807-1025-4197-8762-7b6663889d3f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "200cd551-703b-4ce1-ab00-37e2decbf57f",
                "17be26c9-b595-41b4-afdd-870346d3452f",
                "17f03da8-f2ca-4587-8ef1-1c1c6419df94",
                "15f07836-687b-4ab0-9e85-be51e5ba8ff5",
                "235246c9-6e57-4163-a537-dadd35ab766a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7820f24f-21ea-4af9-8957-98e0f28df0d3",
              "title": "oliveMcBrideAndWinchesterDoing3Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBrideAndWinchesterDoing3Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "4b106a18-9183-4454-8a60-f8d3592d7465",
                  "parentUUID": "7820f24f-21ea-4af9-8957-98e0f28df0d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(0)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(0)([src_1.Token.PLUS_ONE, , src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "1e6bc8db-7645-4a56-80d5-3d519a186246",
                  "parentUUID": "7820f24f-21ea-4af9-8957-98e0f28df0d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(-1)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(0)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(-1)([src_1.Token.PLUS_ONE, , src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "b459e7b6-1cfe-4960-b128-14d9fcd478e1",
                  "parentUUID": "7820f24f-21ea-4af9-8957-98e0f28df0d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "e71fd389-6fae-40ab-89c9-3992a4d4ba67",
                  "parentUUID": "7820f24f-21ea-4af9-8957-98e0f28df0d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage takes into account redraw tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "327bee9a-e86c-4f84-8f41-c9082ab7ee8b",
                  "parentUUID": "7820f24f-21ea-4af9-8957-98e0f28df0d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4b106a18-9183-4454-8a60-f8d3592d7465",
                "1e6bc8db-7645-4a56-80d5-3d519a186246",
                "b459e7b6-1cfe-4960-b128-14d9fcd478e1",
                "e71fd389-6fae-40ab-89c9-3992a4d4ba67",
                "327bee9a-e86c-4f84-8f41-c9082ab7ee8b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5530ba5b-40e5-47fd-b67d-3ccb5388a1f2",
              "title": "jacqueline",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards jacqueline returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.jacqueline(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "32b016c7-01c5-4991-85b2-71f79a0fef6b",
                  "parentUUID": "5530ba5b-40e5-47fd-b67d-3ccb5388a1f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty when cancelling 2 non-tentacle tokens",
                  "fullTitle": "cards jacqueline returns true if greater than difficulty when cancelling 2 non-tentacle tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(1)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "ee1bb525-5fe5-42fa-99b6-00bc967295ed",
                  "parentUUID": "5530ba5b-40e5-47fd-b67d-3ccb5388a1f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty when cancelling tentacle",
                  "fullTitle": "cards jacqueline returns true if greater than difficulty when cancelling tentacle",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.true;",
                  "err": {},
                  "uuid": "f154c3c7-17b9-4140-a971-575dfe2f7945",
                  "parentUUID": "5530ba5b-40e5-47fd-b67d-3ccb5388a1f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty when cancelling 2 non-tentacle tokens",
                  "fullTitle": "cards jacqueline returns false if lesser than difficulty when cancelling 2 non-tentacle tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(0)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "9663cd35-3796-413b-bec0-c21898e15ada",
                  "parentUUID": "5530ba5b-40e5-47fd-b67d-3ccb5388a1f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty when cancelling tentacle",
                  "fullTitle": "cards jacqueline returns false if lesser than difficulty when cancelling tentacle",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(1)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.false;",
                  "err": {},
                  "uuid": "b9e53df9-a1d0-401d-8f28-06e670d9c5a7",
                  "parentUUID": "5530ba5b-40e5-47fd-b67d-3ccb5388a1f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens when ignoring 2 tokens",
                  "fullTitle": "cards jacqueline takes into account redraw tokens when ignoring 2 tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "419d2ad5-8c09-465b-9bad-7612af22dd88",
                  "parentUUID": "5530ba5b-40e5-47fd-b67d-3ccb5388a1f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens when cancelling tentacle",
                  "fullTitle": "cards jacqueline takes into account redraw tokens when cancelling tentacle",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "08bb391a-b671-4591-b1f3-f2ff1ea667ff",
                  "parentUUID": "5530ba5b-40e5-47fd-b67d-3ccb5388a1f2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "32b016c7-01c5-4991-85b2-71f79a0fef6b",
                "ee1bb525-5fe5-42fa-99b6-00bc967295ed",
                "f154c3c7-17b9-4140-a971-575dfe2f7945",
                "9663cd35-3796-413b-bec0-c21898e15ada",
                "b9e53df9-a1d0-401d-8f28-06e670d9c5a7",
                "419d2ad5-8c09-465b-9bad-7612af22dd88",
                "08bb391a-b671-4591-b1f3-f2ff1ea667ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "79a559b2-96d9-4d6a-a0ff-dafafa620c72",
          "title": "exports",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/exports.spec.ts",
          "file": "/spec/exports.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "exports the `odds` function",
              "fullTitle": "exports exports the `odds` function",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai_1.expect(ArkhamOdds.odds).to.exist;",
              "err": {},
              "uuid": "afdd4c04-2178-46b7-bd19-f9e7360e616a",
              "parentUUID": "79a559b2-96d9-4d6a-a0ff-dafafa620c72",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "afdd4c04-2178-46b7-bd19-f9e7360e616a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "303d5e33-dfb1-43f8-83c1-94a29c8a4fc5",
          "title": "Odds functions",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
          "file": "/spec/index.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Odds functions \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-1, true)]\n]);",
              "err": {},
              "uuid": "5670064d-b60b-47d5-8c3b-6b3383a2cac5",
              "parentUUID": "303d5e33-dfb1-43f8-83c1-94a29c8a4fc5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "84c4b7ad-6180-40b2-aaf9-94d590d162c6",
              "title": "odds",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
              "file": "/spec/index.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "fullTitle": "Odds functions odds returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.odds(1, bag, effects, src_1.success(0));\nchai_1.expect(oddsOfSuccess).to.equal(0.5);",
                  "err": {},
                  "uuid": "18fc52cd-3227-42e0-803a-762e32cb871c",
                  "parentUUID": "84c4b7ad-6180-40b2-aaf9-94d590d162c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can compute odds even when there are no successful combinations",
                  "fullTitle": "Odds functions odds can compute odds even when there are no successful combinations",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.odds(1, bag, effects, src_1.success(-4));\nchai_1.expect(oddsOfSuccess).to.equal(0);",
                  "err": {},
                  "uuid": "499b909e-12f1-4cb9-a26d-1079d43430bf",
                  "parentUUID": "84c4b7ad-6180-40b2-aaf9-94d590d162c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account tokens with a redraw effect",
                  "fullTitle": "Odds functions odds takes into account tokens with a redraw effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.CULTIST]);\nvar oddsOfSuccess = src_1.odds(1, bag, effects, src_1.success(-1));\n/* Possible draws are :\n * - +1 with a probability of 1/3\n * - -1 with a probability of 1/3\n * - Cultist and +1 with a probability of 1/6 (1/3 x 1/2)\n * - Cultist and -1 with a probability of 1/6 (1/3 x 1/2)\n * If testing at -1, only +1 result in a success.\n */\nchai_1.expect(oddsOfSuccess).to.be.closeTo(0.33, 0.1);",
                  "err": {},
                  "uuid": "37003431-8959-4f28-9886-10dba5a229db",
                  "parentUUID": "84c4b7ad-6180-40b2-aaf9-94d590d162c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account tokens with a redraw effect when pulling multiple tokens",
                  "fullTitle": "Odds functions odds takes into account tokens with a redraw effect when pulling multiple tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.CULTIST\n]);\n/* Possible draws are in the table below\n *\n * | 1st pull | 2nd pull | 3rd pull | Result | Probability |\n * | +1       | -1       |          | +0     | 1/12        |\n * | +1       | -2       |          | -1     | 1/12        |\n * | +1       | Cultist  | -1       | -1     | 1/24        |\n * | +1       | Cultist  | -2       | -2     | 1/24        |\n * | -1       | +1       |          | +0     | 1/12        |\n * | -1       | -2       |          | -3     | 1/12        |\n * | -1       | Cultist  | +1       | -1     | 1/24        |\n * | -1       | Cultist  | -2       | -4     | 1/24        |\n * | -2       | +1       |          | -1     | 1/12        |\n * | -2       | -1       |          | -3     | 1/12        |\n * | -2       | Cultist  | +1       | -2     | 1/24        |\n * | -2       | Cultist  | -1       | -4     | 1/24        |\n * | Cultist  | +1       | -1       | -1     | 1/24        |\n * | Cultist  | +1       | -2       | -2     | 1/24        |\n * | Cultist  | -1       | +1       | -1     | 1/24        |\n * | Cultist  | -1       | -2       | -4     | 1/24        |\n * | Cultist  | -2       | +1       | -2     | 1/24        |\n * | Cultist  | -2       | -1       | -4     | 1/24        |\n *\n * Odds of success depending on difficulty is then :\n *\n * | Result | Probability |\n * | -4     | 4/24        |\n * | -3     | 4/24        |\n * | -2     | 4/24        |\n * | -1     | 8/24        |\n * | 0      | 4/24        |\n */\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(0))).to.be.closeTo(4 / 24, 0.01, \"when equal\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(1))).to.be.closeTo(4 / 24 + 8 / 24, 0.01, \"when over by 1\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(2))).to.be.closeTo(4 / 24 + 8 / 24 + 4 / 24, 0.01, \"when over by 2\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(3))).to.equal(4 / 24 + 8 / 24 + 4 / 24 + 4 / 24, \"when over by 3\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(4))).to.be.closeTo(1, 0.01, \"when over by 4\");",
                  "err": {},
                  "uuid": "3ed45e5b-de3b-449d-9da8-6771376027e8",
                  "parentUUID": "84c4b7ad-6180-40b2-aaf9-94d590d162c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "18fc52cd-3227-42e0-803a-762e32cb871c",
                "499b909e-12f1-4cb9-a26d-1079d43430bf",
                "37003431-8959-4f28-9886-10dba5a229db",
                "3ed45e5b-de3b-449d-9da8-6771376027e8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "04d0218d-1425-40bf-8f34-3be447a55483",
              "title": "oddsWithRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
              "file": "/spec/index.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "fullTitle": "Odds functions oddsWithRedraw returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.oddsWithRedraw(1, bag, effects, src_1.success(0));\nchai_1.expect(oddsOfSuccess).to.equal(0.5);",
                  "err": {},
                  "uuid": "31856369-73bb-476a-80bf-22b090a45e82",
                  "parentUUID": "04d0218d-1425-40bf-8f34-3be447a55483",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns 0.75 when pulling 2 tokens (putting back first token before second draw) if half the tokens results in a success",
                  "fullTitle": "Odds functions oddsWithRedraw returns 0.75 when pulling 2 tokens (putting back first token before second draw) if half the tokens results in a success",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.oddsWithRedraw(2, bag, effects, src_1.successChoosingBest(0));\nchai_1.expect(oddsOfSuccess).to.equal(0.75);",
                  "err": {},
                  "uuid": "d9ce1bcd-3a79-4ee2-8ea8-381b652650e3",
                  "parentUUID": "04d0218d-1425-40bf-8f34-3be447a55483",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "31856369-73bb-476a-80bf-22b090a45e82",
                "d9ce1bcd-3a79-4ee2-8ea8-381b652650e3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "726e76d6-c174-43c3-a043-405411f0fb16",
          "title": "Autofail",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
          "file": "/spec/tokens/Autofail.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "b957afdd-3d55-4046-b4fc-9db000ca6cb1",
              "title": "getOutcome",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
              "file": "/spec/tokens/Autofail.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "outcome is of type AUTOFAIL",
                  "fullTitle": "Autofail getOutcome outcome is of type AUTOFAIL",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autofail().getOutcome()).to.equal(src_1.TokenEffectType.AUTOFAIL);",
                  "err": {},
                  "uuid": "5903283e-cbea-495f-92e2-50c4c1ccb3b4",
                  "parentUUID": "b957afdd-3d55-4046-b4fc-9db000ca6cb1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5903283e-cbea-495f-92e2-50c4c1ccb3b4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cbe090b4-59e8-4c2a-ad2c-244798c5fae6",
              "title": "isRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
              "file": "/spec/tokens/Autofail.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is not a redraw token",
                  "fullTitle": "Autofail isRedraw is not a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autofail().isRedraw()).to.equal(false);",
                  "err": {},
                  "uuid": "9b01462e-5d39-4992-87e4-fbad822e0a0e",
                  "parentUUID": "cbe090b4-59e8-4c2a-ad2c-244798c5fae6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9b01462e-5d39-4992-87e4-fbad822e0a0e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5c7e76d8-20af-46ff-b2a6-781c0f96cacd",
              "title": "sameAs",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
              "file": "/spec/tokens/Autofail.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when compared to another Auofail",
                  "fullTitle": "Autofail sameAs is true when compared to another Auofail",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Autofail(), new src_1.Autofail()], fail1 = _a[0], fail2 = _a[1];\nchai_1.expect(fail1.sameAs(fail2)).to.be.true;",
                  "err": {},
                  "uuid": "25d48243-8ebc-41a3-95da-e1affaf83759",
                  "parentUUID": "5c7e76d8-20af-46ff-b2a6-781c0f96cacd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when compared to another type of effect",
                  "fullTitle": "Autofail sameAs is false when compared to another type of effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var fail = new src_1.Autofail();\nchai_1.expect(fail.sameAs(new src_1.Modifier(-1))).to.be.false;\nchai_1.expect(fail.sameAs(new src_1.Autosuccess())).to.be.false;",
                  "err": {},
                  "uuid": "347be293-34a3-4bde-801d-a091b1773a5d",
                  "parentUUID": "5c7e76d8-20af-46ff-b2a6-781c0f96cacd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "25d48243-8ebc-41a3-95da-e1affaf83759",
                "347be293-34a3-4bde-801d-a091b1773a5d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "72f65bd6-8365-4a54-a7a8-a424c89113ed",
          "title": "Autofail",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
          "file": "/spec/tokens/Autosuccess.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a824527f-536e-4983-b4d7-a65e654463c9",
              "title": "getOutcome",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
              "file": "/spec/tokens/Autosuccess.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "outcome is of type AUTOSUCCESS",
                  "fullTitle": "Autofail getOutcome outcome is of type AUTOSUCCESS",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autosuccess().getOutcome()).to.equal(src_1.TokenEffectType.AUTOSUCCESS);",
                  "err": {},
                  "uuid": "02e8d797-0f89-47cb-9e78-cba150a46a0f",
                  "parentUUID": "a824527f-536e-4983-b4d7-a65e654463c9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "02e8d797-0f89-47cb-9e78-cba150a46a0f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d39a4333-9f84-4438-9b72-9826d7b71667",
              "title": "isRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
              "file": "/spec/tokens/Autosuccess.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is not a redraw token",
                  "fullTitle": "Autofail isRedraw is not a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autosuccess().isRedraw()).to.equal(false);",
                  "err": {},
                  "uuid": "2301e43d-82c6-43d5-a2cf-b478eb7829a0",
                  "parentUUID": "d39a4333-9f84-4438-9b72-9826d7b71667",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2301e43d-82c6-43d5-a2cf-b478eb7829a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d625822b-c79f-4d2b-a509-cd2206b2dfdc",
              "title": "sameAs",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
              "file": "/spec/tokens/Autosuccess.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when compared to another Auofail",
                  "fullTitle": "Autofail sameAs is true when compared to another Auofail",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Autosuccess(), new src_1.Autosuccess()], succ1 = _a[0], succ2 = _a[1];\nchai_1.expect(succ1.sameAs(succ2)).to.be.true;",
                  "err": {},
                  "uuid": "d18afc50-6010-4eca-b09e-c6038953e646",
                  "parentUUID": "d625822b-c79f-4d2b-a509-cd2206b2dfdc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when compared to another type of effect",
                  "fullTitle": "Autofail sameAs is false when compared to another type of effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var succ = new src_1.Autosuccess();\nchai_1.expect(succ.sameAs(new src_1.Modifier(-1))).to.be.false;\nchai_1.expect(succ.sameAs(new src_1.Autofail())).to.be.false;",
                  "err": {},
                  "uuid": "b05a9930-153a-4f20-b483-6c1e3cbce498",
                  "parentUUID": "d625822b-c79f-4d2b-a509-cd2206b2dfdc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d18afc50-6010-4eca-b09e-c6038953e646",
                "b05a9930-153a-4f20-b483-6c1e3cbce498"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "136de360-fd91-404b-be38-19cc18f39777",
          "title": "Modifier",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
          "file": "/spec/tokens/Modifier.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c22767b8-6181-4bb5-b954-e0bbd42d0ba4",
              "title": "getOutcome",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
              "file": "/spec/tokens/Modifier.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "outcome is of type MODIFIER",
                  "fullTitle": "Modifier getOutcome outcome is of type MODIFIER",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Modifier(0).getOutcome()).to.equal(src_1.TokenEffectType.MODIFIER);",
                  "err": {},
                  "uuid": "374fb118-4df1-439b-afdc-e4e909a12a7d",
                  "parentUUID": "c22767b8-6181-4bb5-b954-e0bbd42d0ba4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "374fb118-4df1-439b-afdc-e4e909a12a7d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b8fec268-d117-48a5-b915-e145bf1af57f",
              "title": "isRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
              "file": "/spec/tokens/Modifier.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if it is a redraw token",
                  "fullTitle": "Modifier isRedraw returns true if it is a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Modifier(0, true).isRedraw()).to.equal(true);",
                  "err": {},
                  "uuid": "a6e7912c-8620-4379-add0-4af95ad03941",
                  "parentUUID": "b8fec268-d117-48a5-b915-e145bf1af57f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if it is not a redraw token",
                  "fullTitle": "Modifier isRedraw returns false if it is not a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Modifier(0).isRedraw()).to.equal(false);",
                  "err": {},
                  "uuid": "0f8d2328-8a0b-49fc-9043-e42d833014a1",
                  "parentUUID": "b8fec268-d117-48a5-b915-e145bf1af57f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a6e7912c-8620-4379-add0-4af95ad03941",
                "0f8d2328-8a0b-49fc-9043-e42d833014a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a7169601-7866-4c4c-a724-6be8debb07b0",
              "title": "sameAs",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
              "file": "/spec/tokens/Modifier.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when representing a modifier with same value and redraw effect",
                  "fullTitle": "Modifier sameAs is true when representing a modifier with same value and redraw effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Modifier(1), new src_1.Modifier(1)], mod1 = _a[0], mod2 = _a[1];\nchai_1.expect(mod1.sameAs(mod2)).to.be.true;",
                  "err": {},
                  "uuid": "bc7bd368-73b7-4ad0-bab8-15dbdd99165c",
                  "parentUUID": "a7169601-7866-4c4c-a724-6be8debb07b0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when representing a modifier with different value",
                  "fullTitle": "Modifier sameAs is false when representing a modifier with different value",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Modifier(1), new src_1.Modifier(2)], mod1 = _a[0], mod2 = _a[1];\nchai_1.expect(mod1.sameAs(mod2)).to.be.false;",
                  "err": {},
                  "uuid": "35fdfcab-1f2f-4e11-90a6-e236cb1e8ab1",
                  "parentUUID": "a7169601-7866-4c4c-a724-6be8debb07b0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when representing a modifier with same value but different redraw effect",
                  "fullTitle": "Modifier sameAs is false when representing a modifier with same value but different redraw effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Modifier(1), new src_1.Modifier(1, true)], mod1 = _a[0], mod2 = _a[1];\nchai_1.expect(mod1.sameAs(mod2)).to.be.false;",
                  "err": {},
                  "uuid": "e6cbd9c0-f31f-41ab-acd7-8376af45c5fe",
                  "parentUUID": "a7169601-7866-4c4c-a724-6be8debb07b0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when compared to another type of effect",
                  "fullTitle": "Modifier sameAs is false when compared to another type of effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mod1 = new src_1.Modifier(1);\nchai_1.expect(mod1.sameAs(new src_1.Autofail())).to.be.false;\nchai_1.expect(mod1.sameAs(new src_1.Autosuccess())).to.be.false;",
                  "err": {},
                  "uuid": "ed8fda99-410c-4321-8eb3-fae7e831fa90",
                  "parentUUID": "a7169601-7866-4c4c-a724-6be8debb07b0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bc7bd368-73b7-4ad0-bab8-15dbdd99165c",
                "35fdfcab-1f2f-4e11-90a6-e236cb1e8ab1",
                "e6cbd9c0-f31f-41ab-acd7-8376af45c5fe",
                "ed8fda99-410c-4321-8eb3-fae7e831fa90"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "887f01c7-a98a-4f15-bcae-482e7ad81422",
          "title": "TokenEffects",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
          "file": "/spec/tokens/TokenEffects.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "can be created from mapping",
              "fullTitle": "TokenEffects can be created from mapping",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nchai_1.expect(effects.getEffect(src_1.Token.ELDER_SIGN)).to.exist;\nchai_1.expect(effects.getEffect(src_1.Token.AUTOFAIL)).to.not.exist;",
              "err": {},
              "uuid": "a741576b-5c67-4e65-ac95-08a387337f7f",
              "parentUUID": "887f01c7-a98a-4f15-bcae-482e7ad81422",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "is not affected by changes to provided mapping",
              "fullTitle": "TokenEffects is not affected by changes to provided mapping",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mapping = [\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n];\nvar effects = new src_1.TokenEffects(mapping);\nchai_1.expect(effects.getEffect(src_1.Token.AUTOFAIL)).to.not.exist;\nmapping.push([src_1.Token.AUTOFAIL, new src_1.Autofail()]);\nchai_1.expect(effects.getEffect(src_1.Token.AUTOFAIL)).to.not.exist;",
              "err": {},
              "uuid": "804b7e40-1a12-4964-9671-d7249a13d7d5",
              "parentUUID": "887f01c7-a98a-4f15-bcae-482e7ad81422",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can be created empty",
              "fullTitle": "TokenEffects can be created empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var effects = new src_1.TokenEffects();\nchai_1.expect(effects.getEffect(src_1.Token.ELDER_SIGN)).to.not.exist;",
              "err": {},
              "uuid": "8c942435-5348-4797-8711-728199e20dcd",
              "parentUUID": "887f01c7-a98a-4f15-bcae-482e7ad81422",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "5c55ce6a-e3f5-481b-a146-802fe92e3224",
              "title": "setEffect",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new TokenEffects",
                  "fullTitle": "TokenEffects setEffect should return a new TokenEffects",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffect(src_1.Token.CULTIST, new src_1.Autofail());\nchai_1.expect(modifiedEffects).to.not.equal(effects);",
                  "err": {},
                  "uuid": "246dbc6e-af4e-4162-ad16-238ac1ddb50d",
                  "parentUUID": "5c55ce6a-e3f5-481b-a146-802fe92e3224",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set the new effect",
                  "fullTitle": "TokenEffects setEffect should set the new effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffect(src_1.Token.CULTIST, new src_1.Autofail());\nchai_1.expect(modifiedEffects.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Autofail())).to\n    .be.true;",
                  "err": {},
                  "uuid": "f08be5d7-4325-40ca-aa60-9ace536087fa",
                  "parentUUID": "5c55ce6a-e3f5-481b-a146-802fe92e3224",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should leave the original effects untouched",
                  "fullTitle": "TokenEffects setEffect should leave the original effects untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\neffects.setEffect(src_1.Token.CULTIST, new src_1.Autofail());\nchai_1.expect(effects.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Modifier(-2))).to.be\n    .true;",
                  "err": {},
                  "uuid": "94e6bef6-d219-4837-bf4f-7fdadf738f6a",
                  "parentUUID": "5c55ce6a-e3f5-481b-a146-802fe92e3224",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "246dbc6e-af4e-4162-ad16-238ac1ddb50d",
                "f08be5d7-4325-40ca-aa60-9ace536087fa",
                "94e6bef6-d219-4837-bf4f-7fdadf738f6a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2bceb6eb-ee89-4a9a-a7e3-33bf9e67ad41",
              "title": "setEffects",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new TokenEffects",
                  "fullTitle": "TokenEffects setEffects should return a new TokenEffects",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffects([\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()]\n]);\nchai_1.expect(modifiedEffects).to.not.equal(effects);",
                  "err": {},
                  "uuid": "244175b3-a3e0-4f6b-892f-15e272532134",
                  "parentUUID": "2bceb6eb-ee89-4a9a-a7e3-33bf9e67ad41",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set the new effects",
                  "fullTitle": "TokenEffects setEffects should set the new effects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffects([\n    [src_1.Token.TABLET, new src_1.Modifier(-3)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n]);\nchai_1.expect(modifiedEffects.getEffect(src_1.Token.TABLET).sameAs(new src_1.Modifier(-3)))\n    .to.be.true;\nchai_1.expect(modifiedEffects.getEffect(src_1.Token.ELDER_THING).sameAs(new src_1.Modifier(-4))).to.be.true;",
                  "err": {},
                  "uuid": "63590dd4-bb9c-4c2a-b82b-e8ce79841d71",
                  "parentUUID": "2bceb6eb-ee89-4a9a-a7e3-33bf9e67ad41",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should leave the original effects untouched",
                  "fullTitle": "TokenEffects setEffects should leave the original effects untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\neffects.setEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-3)],\n    [src_1.Token.TABLET, new src_1.Modifier(-4)]\n]);\nchai_1.expect(effects.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Modifier(-2))).to.be\n    .true;",
                  "err": {},
                  "uuid": "f2711b13-10e9-448c-af65-78813bcf6f03",
                  "parentUUID": "2bceb6eb-ee89-4a9a-a7e3-33bf9e67ad41",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "244175b3-a3e0-4f6b-892f-15e272532134",
                "63590dd4-bb9c-4c2a-b82b-e8ce79841d71",
                "f2711b13-10e9-448c-af65-78813bcf6f03"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "973be097-6ca5-4caa-bf3b-77992a29c6fc",
              "title": "merge",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new TokenEffects",
                  "fullTitle": "TokenEffects merge should return a new TokenEffects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects1 = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar effects2 = new src_1.TokenEffects([\n    [src_1.Token.TABLET, new src_1.Modifier(-3)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n]);\nvar merged = effects1.merge(effects2);\nchai_1.expect(merged).to.not.equal(effects1);\nchai_1.expect(merged).to.not.equal(effects2);",
                  "err": {},
                  "uuid": "369fa62b-da9f-4492-a04d-a12c941157de",
                  "parentUUID": "973be097-6ca5-4caa-bf3b-77992a29c6fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should merge effects",
                  "fullTitle": "TokenEffects merge should merge effects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects1 = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar effects2 = new src_1.TokenEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-3)],\n    [src_1.Token.TABLET, new src_1.Modifier(-4)]\n]);\nvar merged = effects1.merge(effects2);\nchai_1.expect(merged.getEffect(src_1.Token.ELDER_SIGN).sameAs(new src_1.Modifier(1))).to.be\n    .true;\nchai_1.expect(merged.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Modifier(-3))).to.be\n    .true;\nchai_1.expect(merged.getEffect(src_1.Token.TABLET).sameAs(new src_1.Modifier(-4))).to.be\n    .true;",
                  "err": {},
                  "uuid": "74ce6ad0-1496-48fc-8034-4e57dc21886c",
                  "parentUUID": "973be097-6ca5-4caa-bf3b-77992a29c6fc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "369fa62b-da9f-4492-a04d-a12c941157de",
                "74ce6ad0-1496-48fc-8034-4e57dc21886c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c2097f2b-19e7-4097-83eb-1958f9dc4afd",
              "title": "isTokenAutoSuccess",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when token is autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoSuccess is true when token is autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Autosuccess()]]);\nchai_1.expect(effects.isTokenAutoSuccess(src_1.Token.ELDER_SIGN)).to.be.true;",
                  "err": {},
                  "uuid": "a769bdf2-d366-447d-a24d-eac2da074e3d",
                  "parentUUID": "c2097f2b-19e7-4097-83eb-1958f9dc4afd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when token is not autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoSuccess is false when token is not autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Modifier(1)]]);\nchai_1.expect(effects.isTokenAutoSuccess(src_1.Token.ELDER_SIGN)).to.be.false;",
                  "err": {},
                  "uuid": "cfa1cbee-3515-4432-9b4c-f856f4159fe1",
                  "parentUUID": "c2097f2b-19e7-4097-83eb-1958f9dc4afd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a769bdf2-d366-447d-a24d-eac2da074e3d",
                "cfa1cbee-3515-4432-9b4c-f856f4159fe1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "24bbf7f9-9e3e-4aa0-a4fd-89a52feda1dc",
              "title": "isTokenAutoFail",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when token is autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoFail is true when token is autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.AUTOFAIL, new src_1.Autofail()]]);\nchai_1.expect(effects.isTokenAutoFail(src_1.Token.AUTOFAIL)).to.be.true;",
                  "err": {},
                  "uuid": "1eccb369-2064-43cf-b4e3-b7639019e27b",
                  "parentUUID": "24bbf7f9-9e3e-4aa0-a4fd-89a52feda1dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when token is not autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoFail is false when token is not autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Modifier(1)]]);\nchai_1.expect(effects.isTokenAutoFail(src_1.Token.ELDER_SIGN)).to.be.false;",
                  "err": {},
                  "uuid": "a913baca-af31-4a96-a07f-3116a4cc0df1",
                  "parentUUID": "24bbf7f9-9e3e-4aa0-a4fd-89a52feda1dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1eccb369-2064-43cf-b4e3-b7639019e27b",
                "a913baca-af31-4a96-a07f-3116a4cc0df1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "830ddeb5-60d0-4dfa-922c-e30a6fb2668a",
              "title": "getTokenModifier",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns the token modifier if the token is a modifier token",
                  "fullTitle": "TokenEffects getTokenModifier returns the token modifier if the token is a modifier token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Modifier(2)]]);\nchai_1.expect(effects.getTokenModifier(src_1.Token.ELDER_SIGN)).to.equal(2);",
                  "err": {},
                  "uuid": "5690263f-664f-47c3-906b-8fa8e8c6baf4",
                  "parentUUID": "830ddeb5-60d0-4dfa-922c-e30a6fb2668a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns an error if the token effect is not a modifier token",
                  "fullTitle": "TokenEffects getTokenModifier returns an error if the token effect is not a modifier token",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Autosuccess()]]);\nchai_1.expect(function () {\n    effects.getTokenModifier(src_1.Token.ELDER_SIGN);\n}).to.throw();",
                  "err": {},
                  "uuid": "345cd213-f0e8-4e88-9ddf-1d11bb19a1d1",
                  "parentUUID": "830ddeb5-60d0-4dfa-922c-e30a6fb2668a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5690263f-664f-47c3-906b-8fa8e8c6baf4",
                "345cd213-f0e8-4e88-9ddf-1d11bb19a1d1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5bc62cf8-272f-42e7-9c03-2b431d07d045",
              "title": "sortByBestOutcomeDesc",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Autosuccess comes first",
                  "fullTitle": "TokenEffects sortByBestOutcomeDesc Autosuccess comes first",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Autosuccess()],\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)]\n]);\nvar tokens = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ELDER_SIGN,\n    src_1.Token.PLUS_ONE\n];\nchai_1.expect(effects.sortByBestOutcomeDesc(tokens)[0]).to.equal(src_1.Token.ELDER_SIGN);",
                  "err": {},
                  "uuid": "cf03b1d9-ab11-4020-a111-ac481225081b",
                  "parentUUID": "5bc62cf8-272f-42e7-9c03-2b431d07d045",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Autofail comes last",
                  "fullTitle": "TokenEffects sortByBestOutcomeDesc Autofail comes last",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()]\n]);\nvar tokens = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.AUTOFAIL,\n    src_1.Token.PLUS_ONE\n];\nchai_1.expect(effects.sortByBestOutcomeDesc(tokens)[tokens.length - 1]).to.equal(src_1.Token.AUTOFAIL);",
                  "err": {},
                  "uuid": "e2b1e055-64d0-4015-9f1e-7cd65c29b14d",
                  "parentUUID": "5bc62cf8-272f-42e7-9c03-2b431d07d045",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Modifier tokens are sorted by their modifier value from highest to lowest",
                  "fullTitle": "TokenEffects sortByBestOutcomeDesc Modifier tokens are sorted by their modifier value from highest to lowest",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.MINUS_FIVE, new src_1.Modifier(-5)]\n]);\nvar tokens = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_FIVE,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_TWO\n];\nvar sorted = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.MINUS_FIVE\n];\nchai_1.expect(effects.sortByBestOutcomeDesc(tokens)).to.deep.equal(sorted);",
                  "err": {},
                  "uuid": "49f85511-8764-4602-a134-8aba8dd3ff1b",
                  "parentUUID": "5bc62cf8-272f-42e7-9c03-2b431d07d045",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cf03b1d9-ab11-4020-a111-ac481225081b",
                "e2b1e055-64d0-4015-9f1e-7cd65c29b14d",
                "49f85511-8764-4602-a134-8aba8dd3ff1b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c9bf76d7-98ee-44c2-9edc-5b422eb4a87e",
              "title": "isSuccess",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "TokenEffects isSuccess \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sharedEffects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Autosuccess()],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()]\n]);",
                  "err": {},
                  "uuid": "5d656e70-8c9b-4203-8417-2bd96cdd39c2",
                  "parentUUID": "c9bf76d7-98ee-44c2-9edc-5b422eb4a87e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "e2824ba3-d744-4c04-b949-ed2f29fd4858",
                  "title": "with a single token",
                  "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
                  "file": "/spec/tokens/TokenEffects.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns true whatever the difficulty if the token is an autosuccess",
                      "fullTitle": "TokenEffects isSuccess with a single token returns true whatever the difficulty if the token is an autosuccess",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN], 3)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN], -3)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN], -20)).to.be.true;",
                      "err": {},
                      "uuid": "309297a9-a4c6-4bd9-9d14-bad5fe3e414f",
                      "parentUUID": "e2824ba3-d744-4c04-b949-ed2f29fd4858",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false whatever the difficulty if the token is an autofail",
                      "fullTitle": "TokenEffects isSuccess with a single token returns false whatever the difficulty if the token is an autofail",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL], 3)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL], -3)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL], -20)).to.be.false;",
                      "err": {},
                      "uuid": "52aaeccb-acbf-4f9c-8887-2b162bf32276",
                      "parentUUID": "e2824ba3-d744-4c04-b949-ed2f29fd4858",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns true if the sum of (skill - difficulty) and modifier value is greater than or equal to 0",
                      "fullTitle": "TokenEffects isSuccess with a single token returns true if the sum of (skill - difficulty) and modifier value is greater than or equal to 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], 3)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], 1)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_TWO], 2)).to.be.true;",
                      "err": {},
                      "uuid": "27ec139f-f81d-442a-80b3-40d4367b92e6",
                      "parentUUID": "e2824ba3-d744-4c04-b949-ed2f29fd4858",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false if the sum of (skill - difficulty) and modifier value is lesser than 0",
                      "fullTitle": "TokenEffects isSuccess with a single token returns false if the sum of (skill - difficulty) and modifier value is lesser than 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], -3)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], 0)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_TWO], 1)).to.be.false;",
                      "err": {},
                      "uuid": "9f5f8bfb-0b3d-4a9a-865d-ab1ebbca6396",
                      "parentUUID": "e2824ba3-d744-4c04-b949-ed2f29fd4858",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "309297a9-a4c6-4bd9-9d14-bad5fe3e414f",
                    "52aaeccb-acbf-4f9c-8887-2b162bf32276",
                    "27ec139f-f81d-442a-80b3-40d4367b92e6",
                    "9f5f8bfb-0b3d-4a9a-865d-ab1ebbca6396"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "b03c1167-9d57-4110-97e7-6af4726e1be7",
                  "title": "with multiple tokens",
                  "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
                  "file": "/spec/tokens/TokenEffects.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns true when 1 of the tokens is an autosuccess and there are no autofail",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns true when 1 of the tokens is an autosuccess and there are no autofail",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_TWO], -8))\n    .to.be.true;",
                      "err": {},
                      "uuid": "ae48c4f8-01e5-4bcd-b1fe-05117bda162c",
                      "parentUUID": "b03c1167-9d57-4110-97e7-6af4726e1be7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns true when 1 of the tokens is an autofail",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns true when 1 of the tokens is an autofail",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL, src_1.Token.MINUS_TWO], 10))\n    .to.be.false;",
                      "err": {},
                      "uuid": "32edfc21-2045-4b80-8ade-576b9a31a585",
                      "parentUUID": "b03c1167-9d57-4110-97e7-6af4726e1be7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false when there are both an autosuccess and an autofail among the tokens",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns false when there are both an autosuccess and an autofail among the tokens",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_TWO, src_1.Token.AUTOFAIL], 10)).to.be.false;",
                      "err": {},
                      "uuid": "2c264114-f1ac-4ed1-a3db-ce706054119d",
                      "parentUUID": "b03c1167-9d57-4110-97e7-6af4726e1be7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns true if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns true if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], 6)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.MINUS_ONE], 4)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_TWO, src_1.Token.MINUS_TWO, src_1.Token.MINUS_TWO], 6)).to.be.true;",
                      "err": {},
                      "uuid": "9c4d5ce5-6b5b-4cfe-986d-69449d2ca97a",
                      "parentUUID": "b03c1167-9d57-4110-97e7-6af4726e1be7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns false if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], 0)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], 2)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], 3)).to.be.false;",
                      "err": {},
                      "uuid": "0e5a54af-c3de-4762-9935-05ec39c54d0b",
                      "parentUUID": "b03c1167-9d57-4110-97e7-6af4726e1be7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ae48c4f8-01e5-4bcd-b1fe-05117bda162c",
                    "32edfc21-2045-4b80-8ade-576b9a31a585",
                    "2c264114-f1ac-4ed1-a3db-ce706054119d",
                    "9c4d5ce5-6b5b-4cfe-986d-69449d2ca97a",
                    "0e5a54af-c3de-4762-9935-05ec39c54d0b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b82a1fbb-e63c-4db8-a404-6273be2ec8eb",
              "title": "separateRedrawTokens",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "separates redraw tokens from non-redraw tokens",
                  "fullTitle": "TokenEffects separateRedrawTokens separates redraw tokens from non-redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);\nvar _a = effects.separateRedrawTokens([\n    src_1.Token.ZERO,\n    src_1.Token.BLESS,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.CURSE,\n    src_1.Token.ZERO\n]), nonRedrawTokens = _a.nonRedrawTokens, redrawTokens = _a.redrawTokens;\nchai_1.expect(nonRedrawTokens).to.deep.equal([\n    src_1.Token.ZERO,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.ZERO\n]);\nchai_1.expect(redrawTokens).to.deep.equal([src_1.Token.BLESS, src_1.Token.CURSE]);",
                  "err": {},
                  "uuid": "f73678d0-b91f-4435-a27d-d365aff09e60",
                  "parentUUID": "b82a1fbb-e63c-4db8-a404-6273be2ec8eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "separates redraw tokens from non-redraw tokens when there are no redraw tokens",
                  "fullTitle": "TokenEffects separateRedrawTokens separates redraw tokens from non-redraw tokens when there are no redraw tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);\nvar _a = effects.separateRedrawTokens([\n    src_1.Token.ZERO,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.ZERO\n]), nonRedrawTokens = _a.nonRedrawTokens, redrawTokens = _a.redrawTokens;\nchai_1.expect(nonRedrawTokens).to.deep.equal([\n    src_1.Token.ZERO,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.ZERO\n]);\nchai_1.expect(redrawTokens).to.deep.equal([]);",
                  "err": {},
                  "uuid": "90b472e1-ff16-4078-ab4b-5eb1fab129b7",
                  "parentUUID": "b82a1fbb-e63c-4db8-a404-6273be2ec8eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "separates redraw tokens from non-redraw tokens when there are no non-redraw tokens",
                  "fullTitle": "TokenEffects separateRedrawTokens separates redraw tokens from non-redraw tokens when there are no non-redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);\nvar _a = effects.separateRedrawTokens([\n    src_1.Token.BLESS,\n    src_1.Token.CURSE\n]), nonRedrawTokens = _a.nonRedrawTokens, redrawTokens = _a.redrawTokens;\nchai_1.expect(nonRedrawTokens).to.deep.equal([]);\nchai_1.expect(redrawTokens).to.deep.equal([src_1.Token.BLESS, src_1.Token.CURSE]);",
                  "err": {},
                  "uuid": "ccf2d722-2a29-471c-bfe8-e11f898f0c3b",
                  "parentUUID": "b82a1fbb-e63c-4db8-a404-6273be2ec8eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "leaves the original token array untouched",
                  "fullTitle": "TokenEffects separateRedrawTokens leaves the original token array untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)]\n]);\nvar tokens = [src_1.Token.BLESS, src_1.Token.PLUS_ONE];\neffects.separateRedrawTokens(tokens);\nchai_1.expect(tokens).to.deep.equal([src_1.Token.BLESS, src_1.Token.PLUS_ONE]);",
                  "err": {},
                  "uuid": "e0a7edbe-ad51-40ff-9075-84bb23d82957",
                  "parentUUID": "b82a1fbb-e63c-4db8-a404-6273be2ec8eb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f73678d0-b91f-4435-a27d-d365aff09e60",
                "90b472e1-ff16-4078-ab4b-5eb1fab129b7",
                "ccf2d722-2a29-471c-bfe8-e11f898f0c3b",
                "e0a7edbe-ad51-40ff-9075-84bb23d82957"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "a741576b-5c67-4e65-ac95-08a387337f7f",
            "804b7e40-1a12-4964-9671-d7249a13d7d5",
            "8c942435-5348-4797-8711-728199e20dcd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f352e735-256a-4ba8-91c2-62ba0139b682",
          "title": "utils",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
          "file": "/spec/utils.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a39d8f42-da7e-4ce1-b543-236d6dc36d34",
              "title": "removeFirst",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should remove the first occurrence",
                  "fullTitle": "utils removeFirst should remove the first occurrence",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar removed = utils.removeFirst(arr, 2);\nchai_1.expect(removed).to.deep.equal([1, 3]);",
                  "err": {},
                  "uuid": "1d61cf10-e577-43aa-b0fe-d6950d7e2226",
                  "parentUUID": "a39d8f42-da7e-4ce1-b543-236d6dc36d34",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not remove other occurrences",
                  "fullTitle": "utils removeFirst should not remove other occurrences",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 2, 2, 3];\nvar removed = utils.removeFirst(arr, 2);\nchai_1.expect(removed).to.deep.equal([1, 2, 2, 3]);",
                  "err": {},
                  "uuid": "fd0f1a94-47e2-4378-8825-c7bfeeb02bc8",
                  "parentUUID": "a39d8f42-da7e-4ce1-b543-236d6dc36d34",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not modify the original array",
                  "fullTitle": "utils removeFirst should not modify the original array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nutils.removeFirst(arr, 2);\nchai_1.expect(arr).to.deep.equal([1, 2, 3]);",
                  "err": {},
                  "uuid": "bf44e86f-61e0-44f9-84e6-ff3539f37730",
                  "parentUUID": "a39d8f42-da7e-4ce1-b543-236d6dc36d34",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should do nothing if the array does not contain the element",
                  "fullTitle": "utils removeFirst should do nothing if the array does not contain the element",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar removed = utils.removeFirst(arr, 4);\nchai_1.expect(arr).to.deep.equal([1, 2, 3]);\nchai_1.expect(removed).to.deep.equal([1, 2, 3]);\nchai_1.expect(arr).to.not.equal(removed);",
                  "err": {},
                  "uuid": "1bfb01cc-5672-4587-b85c-423c98cb4195",
                  "parentUUID": "a39d8f42-da7e-4ce1-b543-236d6dc36d34",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1d61cf10-e577-43aa-b0fe-d6950d7e2226",
                "fd0f1a94-47e2-4378-8825-c7bfeeb02bc8",
                "bf44e86f-61e0-44f9-84e6-ff3539f37730",
                "1bfb01cc-5672-4587-b85c-423c98cb4195"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f9f4adc9-33a6-4113-a226-3c6b109209bc",
              "title": "flatten",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "flattens an array",
                  "fullTitle": "utils flatten flattens an array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.flatten([[], [1], [2]])).to.deep.equal([1, 2]);",
                  "err": {},
                  "uuid": "2d86a60c-3c32-4aa8-806e-9d6ac64473e8",
                  "parentUUID": "f9f4adc9-33a6-4113-a226-3c6b109209bc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2d86a60c-3c32-4aa8-806e-9d6ac64473e8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5354937f-0a0f-4fdc-bae5-579c5497c9b5",
              "title": "combinations",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an empty array if K > N",
                  "fullTitle": "utils combinations should return an empty array if K > N",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar comb = utils.combinations(4, arr);\nchai_1.expect(comb).to.deep.equals([]);",
                  "err": {},
                  "uuid": "12c41e3a-24f2-47a5-8d0f-9f7e35a8da67",
                  "parentUUID": "5354937f-0a0f-4fdc-bae5-579c5497c9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return [[]] if K <= 0",
                  "fullTitle": "utils combinations should return [[]] if K <= 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nchai_1.expect(utils.combinations(0, arr)).to.deep.equals([[]]);\nchai_1.expect(utils.combinations(-5, arr)).to.deep.equals([[]]);",
                  "err": {},
                  "uuid": "ca348be8-66f4-45bf-a115-cdf6490452cd",
                  "parentUUID": "5354937f-0a0f-4fdc-bae5-579c5497c9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the combinations",
                  "fullTitle": "utils combinations should return the combinations",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar expected = [\n    [1, 2],\n    [1, 3],\n    [2, 3]\n];\nchai_1.expect(utils.combinations(2, arr)).to.deep.equals(expected);",
                  "err": {},
                  "uuid": "94abaa30-9c24-41d6-a5f6-0b5a11b45bd2",
                  "parentUUID": "5354937f-0a0f-4fdc-bae5-579c5497c9b5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "12c41e3a-24f2-47a5-8d0f-9f7e35a8da67",
                "ca348be8-66f4-45bf-a115-cdf6490452cd",
                "94abaa30-9c24-41d6-a5f6-0b5a11b45bd2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "994f0d69-ac0d-4a49-8284-54442a170c75",
              "title": "allCombinations",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return [[]] if provided an empty array of elements",
                  "fullTitle": "utils allCombinations should return [[]] if provided an empty array of elements",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var allComb = utils.allCombinations([]);\nchai_1.expect(allComb).to.deep.equals([[]]);",
                  "err": {},
                  "uuid": "ca3bd829-9f1a-4a2f-a125-30aae0cbe58a",
                  "parentUUID": "994f0d69-ac0d-4a49-8284-54442a170c75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return all combinations of provided elements including empty and full sets",
                  "fullTitle": "utils allCombinations should return all combinations of provided elements including empty and full sets",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar expected = [[], [1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3]];\nvar allComb = utils.allCombinations(arr);\nchai_1.expect(allComb).to.deep.equals(expected);",
                  "err": {},
                  "uuid": "81786340-2458-48dd-b0ae-346e539baa46",
                  "parentUUID": "994f0d69-ac0d-4a49-8284-54442a170c75",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ca3bd829-9f1a-4a2f-a125-30aae0cbe58a",
                "81786340-2458-48dd-b0ae-346e539baa46"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7360242c-beac-4afa-a245-2e191af5cabf",
              "title": "cartesianProduct",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should compute cartesian product of 2 arrays",
                  "fullTitle": "utils cartesianProduct should compute cartesian product of 2 arrays",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr1 = [1, 2];\nvar arr2 = [3, 4];\nvar expected = [\n    [1, 3],\n    [1, 4],\n    [2, 3],\n    [2, 4]\n];\nchai_1.expect(utils.cartesianProduct(arr1, arr2)).to.deep.equals(expected);",
                  "err": {},
                  "uuid": "52ba0024-a4bd-4319-b3b7-02d8ae39b0d1",
                  "parentUUID": "7360242c-beac-4afa-a245-2e191af5cabf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52ba0024-a4bd-4319-b3b7-02d8ae39b0d1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c25cab0c-1849-45a2-9c40-39ee7a8155aa",
              "title": "factorial",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns 1 for 0!",
                  "fullTitle": "utils factorial returns 1 for 0!",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.factorial(0)).to.equal(1);",
                  "err": {},
                  "uuid": "9414f6e1-0159-4c10-b2e3-c3441e616e89",
                  "parentUUID": "c25cab0c-1849-45a2-9c40-39ee7a8155aa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns 6 for 3!",
                  "fullTitle": "utils factorial returns 6 for 3!",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.factorial(3)).to.equal(6);",
                  "err": {},
                  "uuid": "2bb78054-203f-4388-821f-743f899734a1",
                  "parentUUID": "c25cab0c-1849-45a2-9c40-39ee7a8155aa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9414f6e1-0159-4c10-b2e3-c3441e616e89",
                "2bb78054-203f-4388-821f-743f899734a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "reports/tests",
        "reportFilename": "index"
      },
      "version": "4.1.0"
    }
  }
}