{
  "stats": {
    "suites": 52,
    "tests": 135,
    "passes": 135,
    "pending": 0,
    "failures": 0,
    "start": "2020-10-09T12:18:27.478Z",
    "end": "2020-10-09T12:18:27.550Z",
    "duration": 72,
    "testsRegistered": 135,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e18ca7d5-09dc-4930-8969-f161435c2c73",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "964c38cd-d775-4939-8aba-9ab1c8fb1717",
          "title": "Bag",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
          "file": "/spec/bag/Bag.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not be affected by changes to the passed array of tokens",
              "fullTitle": "Bag should not be affected by changes to the passed array of tokens",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var someTokens = [tokens_1.Token.ZERO, tokens_1.Token.MINUS_ONE];\nvar bag = new bag_1.Bag(someTokens);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ZERO, tokens_1.Token.MINUS_ONE]);\nsomeTokens.push(tokens_1.Token.AUTOFAIL);\nchai_1.expect(someTokens).to.deep.equal([\n    tokens_1.Token.ZERO,\n    tokens_1.Token.MINUS_ONE,\n    tokens_1.Token.AUTOFAIL\n]);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ZERO, tokens_1.Token.MINUS_ONE]);",
              "err": {},
              "uuid": "cf71ef3a-4f57-4a07-b2ee-5116880d325f",
              "parentUUID": "964c38cd-d775-4939-8aba-9ab1c8fb1717",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "2a03ec3f-297a-4178-8b04-78ac41359202",
              "title": "getTokens",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
              "file": "/spec/bag/Bag.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "modifications to the returned array should not affect the Bag",
                  "fullTitle": "Bag getTokens modifications to the returned array should not affect the Bag",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nvar tokens = bag.getTokens();\ntokens.push(tokens_1.Token.TABLET);\nchai_1.expect(tokens).to.deep.equal([\n    tokens_1.Token.ELDER_SIGN,\n    tokens_1.Token.AUTOFAIL,\n    tokens_1.Token.TABLET\n]);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);",
                  "err": {},
                  "uuid": "11952382-f5f5-4b3c-ae4b-5df0ac2df9f9",
                  "parentUUID": "2a03ec3f-297a-4178-8b04-78ac41359202",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "11952382-f5f5-4b3c-ae4b-5df0ac2df9f9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "bfdd5719-7f21-44d0-8c6b-e0ba2c3e3aa8",
              "title": "addTokens",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
              "file": "/spec/bag/Bag.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new Bag",
                  "fullTitle": "Bag addTokens should return a new Bag",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN]);\nvar added = bag.addTokens([tokens_1.Token.AUTOFAIL]);\nchai_1.expect(added).not.to.equal(bag);",
                  "err": {},
                  "uuid": "299d136c-63e4-4eac-aa84-436a45128295",
                  "parentUUID": "bfdd5719-7f21-44d0-8c6b-e0ba2c3e3aa8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add the tokens",
                  "fullTitle": "Bag addTokens should add the tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN]);\nvar added = bag.addTokens([tokens_1.Token.AUTOFAIL, tokens_1.Token.TABLET]);\nchai_1.expect(added.getTokens()).to.deep.equal([\n    tokens_1.Token.ELDER_SIGN,\n    tokens_1.Token.AUTOFAIL,\n    tokens_1.Token.TABLET\n]);",
                  "err": {},
                  "uuid": "efc199da-5bd5-4718-8e5c-4bf5e110defd",
                  "parentUUID": "bfdd5719-7f21-44d0-8c6b-e0ba2c3e3aa8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should leave the original Bag untouched",
                  "fullTitle": "Bag addTokens should leave the original Bag untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN]);\nbag.addTokens([tokens_1.Token.AUTOFAIL]);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN]);",
                  "err": {},
                  "uuid": "20334f99-b783-414b-b56f-16c118c56c69",
                  "parentUUID": "bfdd5719-7f21-44d0-8c6b-e0ba2c3e3aa8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "299d136c-63e4-4eac-aa84-436a45128295",
                "efc199da-5bd5-4718-8e5c-4bf5e110defd",
                "20334f99-b783-414b-b56f-16c118c56c69"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "557c8077-84c3-4792-b822-34e55b3d5039",
              "title": "removeToken",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
              "file": "/spec/bag/Bag.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new Bag",
                  "fullTitle": "Bag removeToken should return a new Bag",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nvar removed = bag.removeToken(tokens_1.Token.AUTOFAIL);\nchai_1.expect(removed).not.to.equal(bag);",
                  "err": {},
                  "uuid": "1561d4ab-5c52-4343-a6dc-1f1846008e43",
                  "parentUUID": "557c8077-84c3-4792-b822-34e55b3d5039",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should remove the token",
                  "fullTitle": "Bag removeToken should remove the token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nvar removed = bag.removeToken(tokens_1.Token.AUTOFAIL);\nchai_1.expect(removed.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN]);",
                  "err": {},
                  "uuid": "6ee09f88-82cd-405d-9e59-dae1cb21c10f",
                  "parentUUID": "557c8077-84c3-4792-b822-34e55b3d5039",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should the original Bag untouched",
                  "fullTitle": "Bag removeToken should the original Bag untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nbag.removeToken(tokens_1.Token.AUTOFAIL);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);",
                  "err": {},
                  "uuid": "3047318c-aed5-4ace-8384-31ef6f9f5d5c",
                  "parentUUID": "557c8077-84c3-4792-b822-34e55b3d5039",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1561d4ab-5c52-4343-a6dc-1f1846008e43",
                "6ee09f88-82cd-405d-9e59-dae1cb21c10f",
                "3047318c-aed5-4ace-8384-31ef6f9f5d5c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "cf71ef3a-4f57-4a07-b2ee-5116880d325f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a97e4606-2a01-435d-831d-ceade7900793",
          "title": "cards",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
          "file": "/spec/cards.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "cards \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.MINUS_FOUR, new src_1.Modifier(-4)],\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);",
              "err": {},
              "uuid": "a8e77d0b-323a-470f-9f54-02f4ea1e53f3",
              "parentUUID": "a97e4606-2a01-435d-831d-ceade7900793",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "802507e2-b57f-4c19-880e-7337bc346d6d",
              "title": "success",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards success returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.success(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "123ceb0e-29f6-44a3-a024-e224911e9282",
                  "parentUUID": "802507e2-b57f-4c19-880e-7337bc346d6d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returned function determine success resolving all pulled tokens",
                  "fullTitle": "cards success returned function determine success resolving all pulled tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.success(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be\n    .false;\nchai_1.expect(src_1.success(3)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be\n    .true;",
                  "err": {},
                  "uuid": "1c4ac920-a489-410a-a32e-b199568e4072",
                  "parentUUID": "802507e2-b57f-4c19-880e-7337bc346d6d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "123ceb0e-29f6-44a3-a024-e224911e9282",
                "1c4ac920-a489-410a-a32e-b199568e4072"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f1941c32-64cf-450d-af4d-b90675c910fc",
              "title": "successChoosingBest",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards successChoosingBest returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.successChoosingBest(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "9b1f90c5-e64e-4486-bb6b-43a6e9e1a8c0",
                  "parentUUID": "f1941c32-64cf-450d-af4d-b90675c910fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty when applying the best token",
                  "fullTitle": "cards successChoosingBest returns true if greater than difficulty when applying the best token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.successChoosingBest(1)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be.true;",
                  "err": {},
                  "uuid": "813f904a-4cc9-41d4-8237-e72a9980b98e",
                  "parentUUID": "f1941c32-64cf-450d-af4d-b90675c910fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty when applying the best token",
                  "fullTitle": "cards successChoosingBest returns false if lesser than difficulty when applying the best token",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.successChoosingBest(0)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "3231d7a8-a79c-4c4a-95e1-960a02a07030",
                  "parentUUID": "f1941c32-64cf-450d-af4d-b90675c910fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should assume that redraw tokens where pulled",
                  "fullTitle": "cards successChoosingBest should assume that redraw tokens where pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.successChoosingBest(0)([src_1.Token.AUTOFAIL, src_1.Token.MINUS_FOUR, src_1.Token.BLESS], effects)).to.be.false;",
                  "err": {},
                  "uuid": "380e3ce2-ee81-4621-9917-ade9902076cd",
                  "parentUUID": "f1941c32-64cf-450d-af4d-b90675c910fc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9b1f90c5-e64e-4486-bb6b-43a6e9e1a8c0",
                "813f904a-4cc9-41d4-8237-e72a9980b98e",
                "3231d7a8-a79c-4c4a-95e1-960a02a07030",
                "380e3ce2-ee81-4621-9917-ade9902076cd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b01809ac-40a0-49eb-86d8-aaf71d0b9214",
              "title": "oliveMcBride",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBride returns a function",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBride(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "d1c13ad2-2de6-41a1-8665-f783bb96877c",
                  "parentUUID": "b01809ac-40a0-49eb-86d8-aaf71d0b9214",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if higher than difficulty with the 2 best tokens",
                  "fullTitle": "cards oliveMcBride returns true if higher than difficulty with the 2 best tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBride(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.true;",
                  "err": {},
                  "uuid": "808fb08b-1b55-49c4-b9f6-62a33a1b8321",
                  "parentUUID": "b01809ac-40a0-49eb-86d8-aaf71d0b9214",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty with the 2 best tokens",
                  "fullTitle": "cards oliveMcBride returns false if lesser than difficulty with the 2 best tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBride(0)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.false;",
                  "err": {},
                  "uuid": "67544556-74a9-4960-bedb-2cbf76b697c0",
                  "parentUUID": "b01809ac-40a0-49eb-86d8-aaf71d0b9214",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should assume that redraw tokens where pulled",
                  "fullTitle": "cards oliveMcBride should assume that redraw tokens where pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBride(-2)([src_1.Token.AUTOFAIL, src_1.Token.MINUS_FOUR, src_1.Token.BLESS, src_1.Token.ZERO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "161c37d2-ed7c-472c-b9ce-e2b07f6c3568",
                  "parentUUID": "b01809ac-40a0-49eb-86d8-aaf71d0b9214",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d1c13ad2-2de6-41a1-8665-f783bb96877c",
                "808fb08b-1b55-49c4-b9f6-62a33a1b8321",
                "67544556-74a9-4960-bedb-2cbf76b697c0",
                "161c37d2-ed7c-472c-b9ce-e2b07f6c3568"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5d0d80bd-5cfc-4a7b-9374-82c1fffe1321",
              "title": "oliveMcBrideWithSkull",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBrideWithSkull returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBrideWithSkull(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "d68f56b6-2cc1-4fbe-a5f1-51e16c3a3d50",
                  "parentUUID": "5d0d80bd-5cfc-4a7b-9374-82c1fffe1321",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if there is no Skull token in the tokens pulled",
                  "fullTitle": "cards oliveMcBrideWithSkull returns false if there is no Skull token in the tokens pulled",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(0)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "b811987b-73a3-4a15-8336-66cc4dcbf878",
                  "parentUUID": "5d0d80bd-5cfc-4a7b-9374-82c1fffe1321",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not modify the combination",
                  "fullTitle": "cards oliveMcBrideWithSkull should not modify the combination",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var myComb = [src_1.Token.SKULL, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO];\nsrc_1.oliveMcBrideWithSkull(2)(myComb, effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-1)]])));\nchai_1.expect(myComb).to.deep.equal([\n    src_1.Token.SKULL,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO\n]);",
                  "err": {},
                  "uuid": "16f65bf6-d5e1-445b-aa06-2136a80abc15",
                  "parentUUID": "5d0d80bd-5cfc-4a7b-9374-82c1fffe1321",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if there is a Skull token in the tokens pulled and if adding best of remaining tokens is still higher than difficulty",
                  "fullTitle": "cards oliveMcBrideWithSkull returns true if there is a Skull token in the tokens pulled and if adding best of remaining tokens is still higher than difficulty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(2)([src_1.Token.SKULL, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-1)]])))).to.be.true;",
                  "err": {},
                  "uuid": "b00f972c-a09e-492c-8542-364b9051436e",
                  "parentUUID": "5d0d80bd-5cfc-4a7b-9374-82c1fffe1321",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if there is a Skull token in the tokens pulled and if adding best of remaining tokens is lesser than difficulty",
                  "fullTitle": "cards oliveMcBrideWithSkull returns false if there is a Skull token in the tokens pulled and if adding best of remaining tokens is lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(1)([src_1.Token.SKULL, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-1)]])))).to.be.false;",
                  "err": {},
                  "uuid": "a2d3c95d-5d9d-485a-88c8-0d84d0477fc4",
                  "parentUUID": "5d0d80bd-5cfc-4a7b-9374-82c1fffe1321",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should assume that redraw tokens where pulled",
                  "fullTitle": "cards oliveMcBrideWithSkull should assume that redraw tokens where pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(3)([src_1.Token.AUTOFAIL, src_1.Token.SKULL, src_1.Token.BLESS, src_1.Token.MINUS_TWO], effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-4)]])))).to.be.false;",
                  "err": {},
                  "uuid": "27e6a4e4-c81c-4488-afbb-d7dc968b5d16",
                  "parentUUID": "5d0d80bd-5cfc-4a7b-9374-82c1fffe1321",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d68f56b6-2cc1-4fbe-a5f1-51e16c3a3d50",
                "b811987b-73a3-4a15-8336-66cc4dcbf878",
                "16f65bf6-d5e1-445b-aa06-2136a80abc15",
                "b00f972c-a09e-492c-8542-364b9051436e",
                "a2d3c95d-5d9d-485a-88c8-0d84d0477fc4",
                "27e6a4e4-c81c-4488-afbb-d7dc968b5d16"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4df25a08-d69f-4f61-b6c8-1628b7dbce9b",
              "title": "recallTheFuture",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards recallTheFuture returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.recallTheFuture(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "36ccad24-5e1e-4d61-b825-ed523da41354",
                  "parentUUID": "4df25a08-d69f-4f61-b6c8-1628b7dbce9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty",
                  "fullTitle": "cards recallTheFuture returns true if greater than difficulty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(0)([src_1.Token.ZERO], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.true;",
                  "err": {},
                  "uuid": "789c4af6-7a13-499a-b5c5-58af47a4b44a",
                  "parentUUID": "4df25a08-d69f-4f61-b6c8-1628b7dbce9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if lesser than difficulty but drew the token which has the most chances to be turned into success using the +2 bonus",
                  "fullTitle": "cards recallTheFuture returns true if lesser than difficulty but drew the token which has the most chances to be turned into success using the +2 bonus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.MINUS_ONE], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.true;",
                  "err": {},
                  "uuid": "ba3603b7-017d-40f7-b7ee-7a696da6b726",
                  "parentUUID": "4df25a08-d69f-4f61-b6c8-1628b7dbce9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty and did not drew the token which has the most chances to be turned into success using the +2 bonus",
                  "fullTitle": "cards recallTheFuture returns false if lesser than difficulty and did not drew the token which has the most chances to be turned into success using the +2 bonus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.ZERO], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.false;",
                  "err": {},
                  "uuid": "e1425f12-4b2b-443f-9620-88082479b248",
                  "parentUUID": "4df25a08-d69f-4f61-b6c8-1628b7dbce9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if still lesser than difficulty applying the +2 bonus",
                  "fullTitle": "cards recallTheFuture returns false if still lesser than difficulty applying the +2 bonus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-2)([src_1.Token.MINUS_ONE], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.false;",
                  "err": {},
                  "uuid": "099819a4-e395-4aa5-951a-4499895cf2db",
                  "parentUUID": "4df25a08-d69f-4f61-b6c8-1628b7dbce9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can handle the case where several tokens where drawn",
                  "fullTitle": "cards recallTheFuture can handle the case where several tokens where drawn",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE], effects, new src_1.Bag([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO\n]))).to.be.true;",
                  "err": {},
                  "uuid": "710d9047-cdec-4bcd-8f6c-15691070e290",
                  "parentUUID": "4df25a08-d69f-4f61-b6c8-1628b7dbce9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can handle redraw tokens",
                  "fullTitle": "cards recallTheFuture can handle redraw tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.MINUS_ONE, src_1.Token.CURSE], effects, new src_1.Bag([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.CURSE\n]))).to.be.false;",
                  "err": {},
                  "uuid": "8e249ddf-01ac-4601-8ecb-d655c60b24d8",
                  "parentUUID": "4df25a08-d69f-4f61-b6c8-1628b7dbce9b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "36ccad24-5e1e-4d61-b825-ed523da41354",
                "789c4af6-7a13-499a-b5c5-58af47a4b44a",
                "ba3603b7-017d-40f7-b7ee-7a696da6b726",
                "e1425f12-4b2b-443f-9620-88082479b248",
                "099819a4-e395-4aa5-951a-4499895cf2db",
                "710d9047-cdec-4bcd-8f6c-15691070e290",
                "8e249ddf-01ac-4601-8ecb-d655c60b24d8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "bda75f8c-4578-42bb-9031-63aea3ee0c14",
              "title": "darkProphecy",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards darkProphecy returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.darkProphecy(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "8160527b-f79b-4b0a-967b-680e41e653a7",
                  "parentUUID": "bda75f8c-4578-42bb-9031-63aea3ee0c14",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return true if greater than difficulty using the \"best\" bad token pulled",
                  "fullTitle": "cards darkProphecy return true if greater than difficulty using the \"best\" bad token pulled",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(2)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.CULTIST,\n    src_1.Token.ELDER_THING\n], effects.merge(new src_1.TokenEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n])))).to.be.true;",
                  "err": {},
                  "uuid": "8f250f49-66a9-4e2c-bec2-ec62f2617897",
                  "parentUUID": "bda75f8c-4578-42bb-9031-63aea3ee0c14",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return false if lesser than difficulty using the \"best\" bad token pulled",
                  "fullTitle": "cards darkProphecy return false if lesser than difficulty using the \"best\" bad token pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(1)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.CULTIST,\n    src_1.Token.ELDER_THING\n], effects.merge(new src_1.TokenEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n])))).to.be.false;",
                  "err": {},
                  "uuid": "19ddfc6e-228f-4818-a346-113bd7931dad",
                  "parentUUID": "bda75f8c-4578-42bb-9031-63aea3ee0c14",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return true if greater than difficulty using best token when no bad tokens were pulled",
                  "fullTitle": "cards darkProphecy return true if greater than difficulty using best token when no bad tokens were pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(0)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_TWO\n], effects)).to.be.true;",
                  "err": {},
                  "uuid": "7d08a9d3-4714-4aee-9a41-5c6fb08c45a4",
                  "parentUUID": "bda75f8c-4578-42bb-9031-63aea3ee0c14",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return false if lesser than difficulty using best token when no bad tokens were pulled",
                  "fullTitle": "cards darkProphecy return false if lesser than difficulty using best token when no bad tokens were pulled",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(-1)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_TWO\n], effects)).to.be.false;",
                  "err": {},
                  "uuid": "bbb72c59-bad3-4d52-8b08-ef0806bf5655",
                  "parentUUID": "bda75f8c-4578-42bb-9031-63aea3ee0c14",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens (assuming they were pulled)",
                  "fullTitle": "cards darkProphecy takes into account redraw tokens (assuming they were pulled)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(0)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.CURSE\n], effects)).to.be.false;",
                  "err": {},
                  "uuid": "deeeeb1f-ca7f-45c5-87bf-0221c603a534",
                  "parentUUID": "bda75f8c-4578-42bb-9031-63aea3ee0c14",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8160527b-f79b-4b0a-967b-680e41e653a7",
                "8f250f49-66a9-4e2c-bec2-ec62f2617897",
                "19ddfc6e-228f-4818-a346-113bd7931dad",
                "7d08a9d3-4714-4aee-9a41-5c6fb08c45a4",
                "bbb72c59-bad3-4d52-8b08-ef0806bf5655",
                "deeeeb1f-ca7f-45c5-87bf-0221c603a534"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6feb4a56-946c-4ac1-a418-33f9c1dd67aa",
              "title": "winchesterDoing1Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards winchesterDoing1Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.winchesterDoing1Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "3edd1bc6-28ab-4b40-a9c6-184654637eab",
                  "parentUUID": "6feb4a56-946c-4ac1-a418-33f9c1dd67aa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards winchesterDoing1Damage returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing1Damage(1)([src_1.Token.MINUS_ONE], effects)).to.be.true;\nchai_1.expect(src_1.winchesterDoing1Damage(2)([src_1.Token.MINUS_TWO], effects)).to.be.true;",
                  "err": {},
                  "uuid": "1671549c-17da-4853-8c07-7531d5bd0b3a",
                  "parentUUID": "6feb4a56-946c-4ac1-a418-33f9c1dd67aa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards winchesterDoing1Damage returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing1Damage(0)([src_1.Token.ELDER_SIGN], effects)).to.be\n    .false;\nchai_1.expect(src_1.winchesterDoing1Damage(0)([src_1.Token.ZERO], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(-1)([src_1.Token.PLUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "cad6f104-a342-483d-a7a3-3ca3328355ca",
                  "parentUUID": "6feb4a56-946c-4ac1-a418-33f9c1dd67aa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards winchesterDoing1Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing1Damage(-2)([src_1.Token.ELDER_SIGN], effects)).to.be\n    .false;\nchai_1.expect(src_1.winchesterDoing1Damage(-1)([src_1.Token.ZERO], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(-2)([src_1.Token.PLUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(0)([src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(1)([src_1.Token.MINUS_TWO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "c0762f0d-29a4-4bac-9a9a-027c14d69fb7",
                  "parentUUID": "6feb4a56-946c-4ac1-a418-33f9c1dd67aa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3edd1bc6-28ab-4b40-a9c6-184654637eab",
                "1671549c-17da-4853-8c07-7531d5bd0b3a",
                "cad6f104-a342-483d-a7a3-3ca3328355ca",
                "c0762f0d-29a4-4bac-9a9a-027c14d69fb7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5fe8717c-09dd-4255-b1b5-3f587a0a79e1",
              "title": "winchesterDoing3Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards winchesterDoing3Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.winchesterDoing3Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "7dfb0d66-dd7d-4403-9b5c-735761d2656a",
                  "parentUUID": "5fe8717c-09dd-4255-b1b5-3f587a0a79e1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards winchesterDoing3Damage returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing3Damage(0)([src_1.Token.ELDER_SIGN], effects)).to.be.true;\nchai_1.expect(src_1.winchesterDoing3Damage(0)([src_1.Token.ZERO], effects)).to.be.true;\nchai_1.expect(src_1.winchesterDoing3Damage(-1)([src_1.Token.PLUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "0302eb37-ec91-4ac0-94c1-ac8c3804a506",
                  "parentUUID": "5fe8717c-09dd-4255-b1b5-3f587a0a79e1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards winchesterDoing3Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing3Damage(-2)([src_1.Token.ELDER_SIGN], effects)).to.be\n    .false;\nchai_1.expect(src_1.winchesterDoing3Damage(-1)([src_1.Token.ZERO], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing3Damage(-2)([src_1.Token.PLUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "95508e28-fdbc-4ad8-ad0d-247463988a6f",
                  "parentUUID": "5fe8717c-09dd-4255-b1b5-3f587a0a79e1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards winchesterDoing3Damage returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing3Damage(1)([src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "b30d6876-3729-4e30-9548-5fef65478fb8",
                  "parentUUID": "5fe8717c-09dd-4255-b1b5-3f587a0a79e1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7dfb0d66-dd7d-4403-9b5c-735761d2656a",
                "0302eb37-ec91-4ac0-94c1-ac8c3804a506",
                "95508e28-fdbc-4ad8-ad0d-247463988a6f",
                "b30d6876-3729-4e30-9548-5fef65478fb8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "073c5c24-9c25-4afb-9092-75e392e80d14",
              "title": "oliveMcBrideAndWinchesterDoing1Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBrideAndWinchesterDoing1Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "61b2638f-345f-4e42-865c-a88c761d53c5",
                  "parentUUID": "073c5c24-9c25-4afb-9092-75e392e80d14",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(2)([src_1.Token.MINUS_TWO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "520ee93b-246f-4665-afc6-215597f312fa",
                  "parentUUID": "073c5c24-9c25-4afb-9092-75e392e80d14",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(0)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(0)([src_1.Token.PLUS_ONE, , src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "f956552b-21e9-4624-911f-022dc75e3389",
                  "parentUUID": "073c5c24-9c25-4afb-9092-75e392e80d14",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(-1)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(1)([src_1.Token.MINUS_TWO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "3853a3a4-0e8a-4664-b5d8-396ae5543a9b",
                  "parentUUID": "073c5c24-9c25-4afb-9092-75e392e80d14",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage takes into account redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "03b28dad-3234-412b-8c93-f8bede848f1c",
                  "parentUUID": "073c5c24-9c25-4afb-9092-75e392e80d14",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "61b2638f-345f-4e42-865c-a88c761d53c5",
                "520ee93b-246f-4665-afc6-215597f312fa",
                "f956552b-21e9-4624-911f-022dc75e3389",
                "3853a3a4-0e8a-4664-b5d8-396ae5543a9b",
                "03b28dad-3234-412b-8c93-f8bede848f1c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b7002f7e-f752-4929-86ad-77b240f7bdf4",
              "title": "oliveMcBrideAndWinchesterDoing3Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBrideAndWinchesterDoing3Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "85744892-8e4f-4741-a89a-1af5ee3ba353",
                  "parentUUID": "b7002f7e-f752-4929-86ad-77b240f7bdf4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(0)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(0)([src_1.Token.PLUS_ONE, , src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "4f4fe4d8-599c-4971-889b-0c18dc4e8295",
                  "parentUUID": "b7002f7e-f752-4929-86ad-77b240f7bdf4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(-1)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(0)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(-1)([src_1.Token.PLUS_ONE, , src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "0f3bfbd8-c8ba-4294-80ea-83a934483495",
                  "parentUUID": "b7002f7e-f752-4929-86ad-77b240f7bdf4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "60494e09-9b09-41ff-ac74-e82dcb11d73d",
                  "parentUUID": "b7002f7e-f752-4929-86ad-77b240f7bdf4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage takes into account redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "5699d21c-7a96-40a1-a575-d587d5b68178",
                  "parentUUID": "b7002f7e-f752-4929-86ad-77b240f7bdf4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "85744892-8e4f-4741-a89a-1af5ee3ba353",
                "4f4fe4d8-599c-4971-889b-0c18dc4e8295",
                "0f3bfbd8-c8ba-4294-80ea-83a934483495",
                "60494e09-9b09-41ff-ac74-e82dcb11d73d",
                "5699d21c-7a96-40a1-a575-d587d5b68178"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "05ee9f3d-0286-47f3-b5ac-5a1221f1fe2c",
              "title": "jacqueline",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards jacqueline returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.jacqueline(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "e616782d-eea6-4fef-81e3-2cba129527bc",
                  "parentUUID": "05ee9f3d-0286-47f3-b5ac-5a1221f1fe2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty when cancelling 2 non-tentacle tokens",
                  "fullTitle": "cards jacqueline returns true if greater than difficulty when cancelling 2 non-tentacle tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(1)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "12987a9a-2512-4863-8fde-7d9b133fde7a",
                  "parentUUID": "05ee9f3d-0286-47f3-b5ac-5a1221f1fe2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty when cancelling tentacle",
                  "fullTitle": "cards jacqueline returns true if greater than difficulty when cancelling tentacle",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.true;",
                  "err": {},
                  "uuid": "17c3bf4c-67e7-46e5-ad46-4030d384a5fe",
                  "parentUUID": "05ee9f3d-0286-47f3-b5ac-5a1221f1fe2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty when cancelling 2 non-tentacle tokens",
                  "fullTitle": "cards jacqueline returns false if lesser than difficulty when cancelling 2 non-tentacle tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(0)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "b6d83536-ad94-430c-828c-a42b1f16650d",
                  "parentUUID": "05ee9f3d-0286-47f3-b5ac-5a1221f1fe2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty when cancelling tentacle",
                  "fullTitle": "cards jacqueline returns false if lesser than difficulty when cancelling tentacle",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(1)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.false;",
                  "err": {},
                  "uuid": "f348b243-2c2e-43d2-ad81-6d8978e6ef2f",
                  "parentUUID": "05ee9f3d-0286-47f3-b5ac-5a1221f1fe2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens when ignoring 2 tokens",
                  "fullTitle": "cards jacqueline takes into account redraw tokens when ignoring 2 tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "8cc40237-329e-48ac-82b6-e447fa82a425",
                  "parentUUID": "05ee9f3d-0286-47f3-b5ac-5a1221f1fe2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens when cancelling tentacle",
                  "fullTitle": "cards jacqueline takes into account redraw tokens when cancelling tentacle",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "d0513e58-3faf-478b-a3de-abefafc6a8a8",
                  "parentUUID": "05ee9f3d-0286-47f3-b5ac-5a1221f1fe2c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e616782d-eea6-4fef-81e3-2cba129527bc",
                "12987a9a-2512-4863-8fde-7d9b133fde7a",
                "17c3bf4c-67e7-46e5-ad46-4030d384a5fe",
                "b6d83536-ad94-430c-828c-a42b1f16650d",
                "f348b243-2c2e-43d2-ad81-6d8978e6ef2f",
                "8cc40237-329e-48ac-82b6-e447fa82a425",
                "d0513e58-3faf-478b-a3de-abefafc6a8a8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ec8bf5b7-43e4-4506-be33-a0f2ec753041",
          "title": "exports",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/exports.spec.ts",
          "file": "/spec/exports.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "exports the `odds` function",
              "fullTitle": "exports exports the `odds` function",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai_1.expect(ArkhamOdds.odds).to.exist;",
              "err": {},
              "uuid": "4717a417-4fc3-4b38-8333-7e91c7a23969",
              "parentUUID": "ec8bf5b7-43e4-4506-be33-a0f2ec753041",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4717a417-4fc3-4b38-8333-7e91c7a23969"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "951d77c6-864e-4fdd-804b-5d5549142ffa",
          "title": "Odds functions",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
          "file": "/spec/index.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Odds functions \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-1, true)]\n]);",
              "err": {},
              "uuid": "1bbba15d-f78e-4779-b6fa-4c4038a00839",
              "parentUUID": "951d77c6-864e-4fdd-804b-5d5549142ffa",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2a61660d-2a0f-4252-a455-72f6d0bc33b9",
              "title": "odds",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
              "file": "/spec/index.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "fullTitle": "Odds functions odds returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.odds(1, bag, effects, src_1.success(0));\nchai_1.expect(oddsOfSuccess).to.equal(0.5);",
                  "err": {},
                  "uuid": "9e3c6b63-64be-4c45-b51a-001d8a8aca03",
                  "parentUUID": "2a61660d-2a0f-4252-a455-72f6d0bc33b9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can compute odds even when there are no successful combinations",
                  "fullTitle": "Odds functions odds can compute odds even when there are no successful combinations",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.odds(1, bag, effects, src_1.success(-4));\nchai_1.expect(oddsOfSuccess).to.equal(0);",
                  "err": {},
                  "uuid": "5e5cce18-d172-4eed-bd4c-f88d2f5ac7aa",
                  "parentUUID": "2a61660d-2a0f-4252-a455-72f6d0bc33b9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account tokens with a redraw effect",
                  "fullTitle": "Odds functions odds takes into account tokens with a redraw effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.CULTIST]);\nvar oddsOfSuccess = src_1.odds(1, bag, effects, src_1.success(-1));\n/* Possible draws are :\n * - +1 with a probability of 1/3\n * - -1 with a probability of 1/3\n * - Cultist and +1 with a probability of 1/6 (1/3 x 1/2)\n * - Cultist and -1 with a probability of 1/6 (1/3 x 1/2)\n * If testing at -1, only +1 result in a success.\n */\nchai_1.expect(oddsOfSuccess).to.be.closeTo(1 / 3, PRECISION);",
                  "err": {},
                  "uuid": "27634472-d2b8-4455-801e-9617e4cdf714",
                  "parentUUID": "2a61660d-2a0f-4252-a455-72f6d0bc33b9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account tokens with a redraw effect when pulling multiple tokens",
                  "fullTitle": "Odds functions odds takes into account tokens with a redraw effect when pulling multiple tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.CULTIST\n]);\n/* Possible draws are in the table below\n *\n * | 1st pull | 2nd pull | 3rd pull | Result | Probability |\n * | +1       | -1       |          | +0     | 1/12        |\n * | +1       | -2       |          | -1     | 1/12        |\n * | +1       | Cultist  | -1       | -1     | 1/24        |\n * | +1       | Cultist  | -2       | -2     | 1/24        |\n * | -1       | +1       |          | +0     | 1/12        |\n * | -1       | -2       |          | -3     | 1/12        |\n * | -1       | Cultist  | +1       | -1     | 1/24        |\n * | -1       | Cultist  | -2       | -4     | 1/24        |\n * | -2       | +1       |          | -1     | 1/12        |\n * | -2       | -1       |          | -3     | 1/12        |\n * | -2       | Cultist  | +1       | -2     | 1/24        |\n * | -2       | Cultist  | -1       | -4     | 1/24        |\n * | Cultist  | +1       | -1       | -1     | 1/24        |\n * | Cultist  | +1       | -2       | -2     | 1/24        |\n * | Cultist  | -1       | +1       | -1     | 1/24        |\n * | Cultist  | -1       | -2       | -4     | 1/24        |\n * | Cultist  | -2       | +1       | -2     | 1/24        |\n * | Cultist  | -2       | -1       | -4     | 1/24        |\n *\n * Odds of success depending on difficulty is then :\n *\n * | Result | Probability |\n * | -4     | 4/24        |\n * | -3     | 4/24        |\n * | -2     | 4/24        |\n * | -1     | 8/24        |\n * | 0      | 4/24        |\n */\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(0))).to.be.closeTo(4 / 24, PRECISION, \"when equal\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(1))).to.be.closeTo(12 / 24, // 4 / 24 + 8 / 24\nPRECISION, \"when over by 1\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(2))).to.be.closeTo(16 / 24, // 4 / 24 + 8 / 24 + 4 / 24\nPRECISION, \"when over by 2\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(3))).to.closeTo(20 / 24, // 4 / 24 + 8 / 24 + 4 / 24 + 4 / 24\nPRECISION, \"when over by 3\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(4))).to.be.closeTo(1, PRECISION, \"when over by 4\");",
                  "err": {},
                  "uuid": "b8ed354d-cd71-4ffa-8105-9a9a6e58a48d",
                  "parentUUID": "2a61660d-2a0f-4252-a455-72f6d0bc33b9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9e3c6b63-64be-4c45-b51a-001d8a8aca03",
                "5e5cce18-d172-4eed-bd4c-f88d2f5ac7aa",
                "27634472-d2b8-4455-801e-9617e4cdf714",
                "b8ed354d-cd71-4ffa-8105-9a9a6e58a48d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "bc7d503d-8966-423e-a8fb-e5986c529bde",
              "title": "oddsWithRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
              "file": "/spec/index.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "fullTitle": "Odds functions oddsWithRedraw returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.oddsWithRedraw(1, bag, effects, src_1.success(0));\nchai_1.expect(oddsOfSuccess).to.equal(0.5);",
                  "err": {},
                  "uuid": "f1c91142-a51f-4077-8231-348ce1970506",
                  "parentUUID": "bc7d503d-8966-423e-a8fb-e5986c529bde",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns 0.75 when pulling 2 tokens (putting back first token before second draw) if half the tokens results in a success",
                  "fullTitle": "Odds functions oddsWithRedraw returns 0.75 when pulling 2 tokens (putting back first token before second draw) if half the tokens results in a success",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.oddsWithRedraw(2, bag, effects, src_1.successChoosingBest(0));\nchai_1.expect(oddsOfSuccess).to.equal(0.75);",
                  "err": {},
                  "uuid": "7bd84d1a-76c0-4a91-8549-54e1523af6b4",
                  "parentUUID": "bc7d503d-8966-423e-a8fb-e5986c529bde",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f1c91142-a51f-4077-8231-348ce1970506",
                "7bd84d1a-76c0-4a91-8549-54e1523af6b4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "695b87dd-9d95-4423-bfb3-2f1f0e8bafef",
          "title": "Precise calculations with fraction",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/precise_calculations.spec.ts",
          "file": "/spec/precise_calculations.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "fractions with same numerator and denominator are equal",
              "fullTitle": "Precise calculations with fraction fractions with same numerator and denominator are equal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var frac1 = new Fraction_1.Fraction(1, 3);\nvar frac2 = new Fraction_1.Fraction(1, 3);\nchai_1.expect(frac1.sameAs(frac2)).to.be.true;",
              "err": {},
              "uuid": "180a2ca9-2607-4bec-947b-6ab42c322c93",
              "parentUUID": "695b87dd-9d95-4423-bfb3-2f1f0e8bafef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "fractions with same numerator and different denominator are not equal",
              "fullTitle": "Precise calculations with fraction fractions with same numerator and different denominator are not equal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var frac1 = new Fraction_1.Fraction(1, 3);\nvar frac2 = new Fraction_1.Fraction(1, 4);\nchai_1.expect(frac1.sameAs(frac2)).to.be.false;",
              "err": {},
              "uuid": "4c11d45b-4e96-41c9-af62-252cfd7d8d73",
              "parentUUID": "695b87dd-9d95-4423-bfb3-2f1f0e8bafef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "fractions reducing to the same fraction are equal",
              "fullTitle": "Precise calculations with fraction fractions reducing to the same fraction are equal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var frac1 = new Fraction_1.Fraction(1, 2);\nvar frac2 = new Fraction_1.Fraction(2, 4);\nchai_1.expect(frac1.sameAs(frac2)).to.be.true;",
              "err": {},
              "uuid": "bd6efc83-97fb-4a71-aa5d-436da9888db0",
              "parentUUID": "695b87dd-9d95-4423-bfb3-2f1f0e8bafef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can add fractions",
              "fullTitle": "Precise calculations with fraction can add fractions",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var frac1 = new Fraction_1.Fraction(1, 3);\nvar frac2 = new Fraction_1.Fraction(1, 4);\nvar expected = new Fraction_1.Fraction(7, 12);\nchai_1.expect(frac1.add(frac2).sameAs(expected)).to.be.true;",
              "err": {},
              "uuid": "207209d1-ef1c-4075-88fe-b27fb37e076b",
              "parentUUID": "695b87dd-9d95-4423-bfb3-2f1f0e8bafef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can compute to float",
              "fullTitle": "Precise calculations with fraction can compute to float",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var frac = new Fraction_1.Fraction(1, 2);\nchai_1.expect(frac.valueOf()).to.equal(0.5);",
              "err": {},
              "uuid": "539dcdcf-e78e-4915-acef-22e441217b59",
              "parentUUID": "695b87dd-9d95-4423-bfb3-2f1f0e8bafef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "180a2ca9-2607-4bec-947b-6ab42c322c93",
            "4c11d45b-4e96-41c9-af62-252cfd7d8d73",
            "bd6efc83-97fb-4a71-aa5d-436da9888db0",
            "207209d1-ef1c-4075-88fe-b27fb37e076b",
            "539dcdcf-e78e-4915-acef-22e441217b59"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6717525c-a83b-4fce-becf-5a2be97f4954",
          "title": "Autofail",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
          "file": "/spec/tokens/Autofail.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "78af1ab9-5b1a-4b96-8afe-e086d7496b8d",
              "title": "getOutcome",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
              "file": "/spec/tokens/Autofail.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "outcome is of type AUTOFAIL",
                  "fullTitle": "Autofail getOutcome outcome is of type AUTOFAIL",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autofail().getOutcome()).to.equal(src_1.TokenEffectType.AUTOFAIL);",
                  "err": {},
                  "uuid": "6c73360e-005f-49da-a116-787d8be079f8",
                  "parentUUID": "78af1ab9-5b1a-4b96-8afe-e086d7496b8d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6c73360e-005f-49da-a116-787d8be079f8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5bcecc12-2eb9-4aa3-959a-7683627b438c",
              "title": "isRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
              "file": "/spec/tokens/Autofail.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is not a redraw token",
                  "fullTitle": "Autofail isRedraw is not a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autofail().isRedraw()).to.equal(false);",
                  "err": {},
                  "uuid": "9a6132f0-e7b6-4213-b746-0dad39b472a4",
                  "parentUUID": "5bcecc12-2eb9-4aa3-959a-7683627b438c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9a6132f0-e7b6-4213-b746-0dad39b472a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ab49ea9d-77ae-4acf-9f68-730332627064",
              "title": "sameAs",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
              "file": "/spec/tokens/Autofail.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when compared to another Auofail",
                  "fullTitle": "Autofail sameAs is true when compared to another Auofail",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Autofail(), new src_1.Autofail()], fail1 = _a[0], fail2 = _a[1];\nchai_1.expect(fail1.sameAs(fail2)).to.be.true;",
                  "err": {},
                  "uuid": "2003b389-5aca-43a9-98c6-836ac23891ce",
                  "parentUUID": "ab49ea9d-77ae-4acf-9f68-730332627064",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when compared to another type of effect",
                  "fullTitle": "Autofail sameAs is false when compared to another type of effect",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var fail = new src_1.Autofail();\nchai_1.expect(fail.sameAs(new src_1.Modifier(-1))).to.be.false;\nchai_1.expect(fail.sameAs(new src_1.Autosuccess())).to.be.false;",
                  "err": {},
                  "uuid": "534622b2-9390-4167-83b4-a8ae8128d999",
                  "parentUUID": "ab49ea9d-77ae-4acf-9f68-730332627064",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2003b389-5aca-43a9-98c6-836ac23891ce",
                "534622b2-9390-4167-83b4-a8ae8128d999"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d75a13c1-d16b-4923-b9c2-19f16b170baa",
          "title": "Autofail",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
          "file": "/spec/tokens/Autosuccess.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ecd7380e-a8fd-48e9-b48a-f306201da042",
              "title": "getOutcome",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
              "file": "/spec/tokens/Autosuccess.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "outcome is of type AUTOSUCCESS",
                  "fullTitle": "Autofail getOutcome outcome is of type AUTOSUCCESS",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autosuccess().getOutcome()).to.equal(src_1.TokenEffectType.AUTOSUCCESS);",
                  "err": {},
                  "uuid": "3bf4ad32-7669-485f-9466-e438b0cf731b",
                  "parentUUID": "ecd7380e-a8fd-48e9-b48a-f306201da042",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3bf4ad32-7669-485f-9466-e438b0cf731b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b49c9e0f-c0f4-47ad-8b64-9e9e58048920",
              "title": "isRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
              "file": "/spec/tokens/Autosuccess.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is not a redraw token",
                  "fullTitle": "Autofail isRedraw is not a redraw token",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autosuccess().isRedraw()).to.equal(false);",
                  "err": {},
                  "uuid": "b8366e3e-ec30-4662-b844-278a8b3aba84",
                  "parentUUID": "b49c9e0f-c0f4-47ad-8b64-9e9e58048920",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b8366e3e-ec30-4662-b844-278a8b3aba84"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e1d5ca84-c21b-49c2-80d1-f889dc7769fe",
              "title": "sameAs",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
              "file": "/spec/tokens/Autosuccess.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when compared to another Auofail",
                  "fullTitle": "Autofail sameAs is true when compared to another Auofail",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Autosuccess(), new src_1.Autosuccess()], succ1 = _a[0], succ2 = _a[1];\nchai_1.expect(succ1.sameAs(succ2)).to.be.true;",
                  "err": {},
                  "uuid": "4a453445-9dce-400f-a19d-0fd3ca099be3",
                  "parentUUID": "e1d5ca84-c21b-49c2-80d1-f889dc7769fe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when compared to another type of effect",
                  "fullTitle": "Autofail sameAs is false when compared to another type of effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var succ = new src_1.Autosuccess();\nchai_1.expect(succ.sameAs(new src_1.Modifier(-1))).to.be.false;\nchai_1.expect(succ.sameAs(new src_1.Autofail())).to.be.false;",
                  "err": {},
                  "uuid": "1221349d-a4ba-4cf5-8ead-3dac0052203e",
                  "parentUUID": "e1d5ca84-c21b-49c2-80d1-f889dc7769fe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4a453445-9dce-400f-a19d-0fd3ca099be3",
                "1221349d-a4ba-4cf5-8ead-3dac0052203e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e7e65390-c664-4599-88bb-b21c52c58688",
          "title": "Modifier",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
          "file": "/spec/tokens/Modifier.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8645470a-b3e0-41ad-a2ea-d9be94a6222a",
              "title": "getOutcome",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
              "file": "/spec/tokens/Modifier.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "outcome is of type MODIFIER",
                  "fullTitle": "Modifier getOutcome outcome is of type MODIFIER",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Modifier(0).getOutcome()).to.equal(src_1.TokenEffectType.MODIFIER);",
                  "err": {},
                  "uuid": "e38b90fc-010f-435c-8a2b-3cf99d4fef0f",
                  "parentUUID": "8645470a-b3e0-41ad-a2ea-d9be94a6222a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e38b90fc-010f-435c-8a2b-3cf99d4fef0f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "08eb6529-a24b-4298-b2b7-18f58352bce8",
              "title": "isRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
              "file": "/spec/tokens/Modifier.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if it is a redraw token",
                  "fullTitle": "Modifier isRedraw returns true if it is a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Modifier(0, true).isRedraw()).to.equal(true);",
                  "err": {},
                  "uuid": "027f3698-9529-4d44-aee7-9a013a1700ad",
                  "parentUUID": "08eb6529-a24b-4298-b2b7-18f58352bce8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if it is not a redraw token",
                  "fullTitle": "Modifier isRedraw returns false if it is not a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Modifier(0).isRedraw()).to.equal(false);",
                  "err": {},
                  "uuid": "6be2b839-1ca2-4b45-a481-69f359b20049",
                  "parentUUID": "08eb6529-a24b-4298-b2b7-18f58352bce8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "027f3698-9529-4d44-aee7-9a013a1700ad",
                "6be2b839-1ca2-4b45-a481-69f359b20049"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5e861bbd-0fe9-49b4-b601-8f1717fa0745",
              "title": "sameAs",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
              "file": "/spec/tokens/Modifier.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when representing a modifier with same value and redraw effect",
                  "fullTitle": "Modifier sameAs is true when representing a modifier with same value and redraw effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Modifier(1), new src_1.Modifier(1)], mod1 = _a[0], mod2 = _a[1];\nchai_1.expect(mod1.sameAs(mod2)).to.be.true;",
                  "err": {},
                  "uuid": "2881dc7c-0fe6-4463-b0c1-3e4c132bd045",
                  "parentUUID": "5e861bbd-0fe9-49b4-b601-8f1717fa0745",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when representing a modifier with different value",
                  "fullTitle": "Modifier sameAs is false when representing a modifier with different value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Modifier(1), new src_1.Modifier(2)], mod1 = _a[0], mod2 = _a[1];\nchai_1.expect(mod1.sameAs(mod2)).to.be.false;",
                  "err": {},
                  "uuid": "82a0e1c8-431b-45d2-860a-b4eacc3b1fe7",
                  "parentUUID": "5e861bbd-0fe9-49b4-b601-8f1717fa0745",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when representing a modifier with same value but different redraw effect",
                  "fullTitle": "Modifier sameAs is false when representing a modifier with same value but different redraw effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Modifier(1), new src_1.Modifier(1, true)], mod1 = _a[0], mod2 = _a[1];\nchai_1.expect(mod1.sameAs(mod2)).to.be.false;",
                  "err": {},
                  "uuid": "0ff41f4f-a989-4dc1-906a-fecf98a1dea1",
                  "parentUUID": "5e861bbd-0fe9-49b4-b601-8f1717fa0745",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when compared to another type of effect",
                  "fullTitle": "Modifier sameAs is false when compared to another type of effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mod1 = new src_1.Modifier(1);\nchai_1.expect(mod1.sameAs(new src_1.Autofail())).to.be.false;\nchai_1.expect(mod1.sameAs(new src_1.Autosuccess())).to.be.false;",
                  "err": {},
                  "uuid": "9d49c71b-d9c8-4a0a-a792-659b7d2ae17a",
                  "parentUUID": "5e861bbd-0fe9-49b4-b601-8f1717fa0745",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2881dc7c-0fe6-4463-b0c1-3e4c132bd045",
                "82a0e1c8-431b-45d2-860a-b4eacc3b1fe7",
                "0ff41f4f-a989-4dc1-906a-fecf98a1dea1",
                "9d49c71b-d9c8-4a0a-a792-659b7d2ae17a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7700756e-f968-42d2-b1c0-68163ef54a83",
          "title": "TokenEffects",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
          "file": "/spec/tokens/TokenEffects.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "can be created from mapping",
              "fullTitle": "TokenEffects can be created from mapping",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nchai_1.expect(effects.getEffect(src_1.Token.ELDER_SIGN)).to.exist;\nchai_1.expect(effects.getEffect(src_1.Token.AUTOFAIL)).to.not.exist;",
              "err": {},
              "uuid": "c16a6746-c1b4-4bfd-9f9a-08b115bc7725",
              "parentUUID": "7700756e-f968-42d2-b1c0-68163ef54a83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "is not affected by changes to provided mapping",
              "fullTitle": "TokenEffects is not affected by changes to provided mapping",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mapping = [\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n];\nvar effects = new src_1.TokenEffects(mapping);\nchai_1.expect(effects.getEffect(src_1.Token.AUTOFAIL)).to.not.exist;\nmapping.push([src_1.Token.AUTOFAIL, new src_1.Autofail()]);\nchai_1.expect(effects.getEffect(src_1.Token.AUTOFAIL)).to.not.exist;",
              "err": {},
              "uuid": "cd05b1ee-eac3-44e8-9f2a-e20193cd0baa",
              "parentUUID": "7700756e-f968-42d2-b1c0-68163ef54a83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can be created empty",
              "fullTitle": "TokenEffects can be created empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var effects = new src_1.TokenEffects();\nchai_1.expect(effects.getEffect(src_1.Token.ELDER_SIGN)).to.not.exist;",
              "err": {},
              "uuid": "851edd9f-cde0-4b24-9401-ee3f2f29dfe2",
              "parentUUID": "7700756e-f968-42d2-b1c0-68163ef54a83",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "027474e0-4a70-40d9-99fe-168ca66719b2",
              "title": "setEffect",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new TokenEffects",
                  "fullTitle": "TokenEffects setEffect should return a new TokenEffects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffect(src_1.Token.CULTIST, new src_1.Autofail());\nchai_1.expect(modifiedEffects).to.not.equal(effects);",
                  "err": {},
                  "uuid": "8ea5f039-f7cb-4aae-9e9c-a72a6f4c3d5d",
                  "parentUUID": "027474e0-4a70-40d9-99fe-168ca66719b2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set the new effect",
                  "fullTitle": "TokenEffects setEffect should set the new effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffect(src_1.Token.CULTIST, new src_1.Autofail());\nchai_1.expect(modifiedEffects.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Autofail())).to\n    .be.true;",
                  "err": {},
                  "uuid": "ce2fba37-e603-4c8a-a1e3-b597532c219f",
                  "parentUUID": "027474e0-4a70-40d9-99fe-168ca66719b2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should leave the original effects untouched",
                  "fullTitle": "TokenEffects setEffect should leave the original effects untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\neffects.setEffect(src_1.Token.CULTIST, new src_1.Autofail());\nchai_1.expect(effects.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Modifier(-2))).to.be\n    .true;",
                  "err": {},
                  "uuid": "051e8cb5-8b59-4d40-ae3a-090078633334",
                  "parentUUID": "027474e0-4a70-40d9-99fe-168ca66719b2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8ea5f039-f7cb-4aae-9e9c-a72a6f4c3d5d",
                "ce2fba37-e603-4c8a-a1e3-b597532c219f",
                "051e8cb5-8b59-4d40-ae3a-090078633334"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6d4aa46a-70da-4299-b97f-93083a19b759",
              "title": "setEffects",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new TokenEffects",
                  "fullTitle": "TokenEffects setEffects should return a new TokenEffects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffects([\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()]\n]);\nchai_1.expect(modifiedEffects).to.not.equal(effects);",
                  "err": {},
                  "uuid": "7d93194d-e0ac-4d85-8d1e-08b39829dc9a",
                  "parentUUID": "6d4aa46a-70da-4299-b97f-93083a19b759",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set the new effects",
                  "fullTitle": "TokenEffects setEffects should set the new effects",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffects([\n    [src_1.Token.TABLET, new src_1.Modifier(-3)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n]);\nchai_1.expect(modifiedEffects.getEffect(src_1.Token.TABLET).sameAs(new src_1.Modifier(-3)))\n    .to.be.true;\nchai_1.expect(modifiedEffects.getEffect(src_1.Token.ELDER_THING).sameAs(new src_1.Modifier(-4))).to.be.true;",
                  "err": {},
                  "uuid": "2fad7b31-e1dd-4e52-88ee-eba74d2a4008",
                  "parentUUID": "6d4aa46a-70da-4299-b97f-93083a19b759",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should leave the original effects untouched",
                  "fullTitle": "TokenEffects setEffects should leave the original effects untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\neffects.setEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-3)],\n    [src_1.Token.TABLET, new src_1.Modifier(-4)]\n]);\nchai_1.expect(effects.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Modifier(-2))).to.be\n    .true;",
                  "err": {},
                  "uuid": "d23f7ea2-a647-47df-9fcf-018fdea66cb1",
                  "parentUUID": "6d4aa46a-70da-4299-b97f-93083a19b759",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d93194d-e0ac-4d85-8d1e-08b39829dc9a",
                "2fad7b31-e1dd-4e52-88ee-eba74d2a4008",
                "d23f7ea2-a647-47df-9fcf-018fdea66cb1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "42794b74-a058-48cf-8341-d0d6d0e22fd9",
              "title": "merge",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new TokenEffects",
                  "fullTitle": "TokenEffects merge should return a new TokenEffects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects1 = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar effects2 = new src_1.TokenEffects([\n    [src_1.Token.TABLET, new src_1.Modifier(-3)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n]);\nvar merged = effects1.merge(effects2);\nchai_1.expect(merged).to.not.equal(effects1);\nchai_1.expect(merged).to.not.equal(effects2);",
                  "err": {},
                  "uuid": "5f5e85bd-13fa-422d-bd7c-450c7e6413ae",
                  "parentUUID": "42794b74-a058-48cf-8341-d0d6d0e22fd9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should merge effects",
                  "fullTitle": "TokenEffects merge should merge effects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects1 = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar effects2 = new src_1.TokenEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-3)],\n    [src_1.Token.TABLET, new src_1.Modifier(-4)]\n]);\nvar merged = effects1.merge(effects2);\nchai_1.expect(merged.getEffect(src_1.Token.ELDER_SIGN).sameAs(new src_1.Modifier(1))).to.be\n    .true;\nchai_1.expect(merged.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Modifier(-3))).to.be\n    .true;\nchai_1.expect(merged.getEffect(src_1.Token.TABLET).sameAs(new src_1.Modifier(-4))).to.be\n    .true;",
                  "err": {},
                  "uuid": "6fefdc1f-1760-4f66-adef-b1b8bc00577d",
                  "parentUUID": "42794b74-a058-48cf-8341-d0d6d0e22fd9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f5e85bd-13fa-422d-bd7c-450c7e6413ae",
                "6fefdc1f-1760-4f66-adef-b1b8bc00577d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0bd0c9f7-92b8-4e38-9a3e-19eda7133d53",
              "title": "isTokenAutoSuccess",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when token is autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoSuccess is true when token is autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Autosuccess()]]);\nchai_1.expect(effects.isTokenAutoSuccess(src_1.Token.ELDER_SIGN)).to.be.true;",
                  "err": {},
                  "uuid": "6cb2ca88-cc6f-49e7-8372-12426ef644fc",
                  "parentUUID": "0bd0c9f7-92b8-4e38-9a3e-19eda7133d53",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when token is not autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoSuccess is false when token is not autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Modifier(1)]]);\nchai_1.expect(effects.isTokenAutoSuccess(src_1.Token.ELDER_SIGN)).to.be.false;",
                  "err": {},
                  "uuid": "6265f71b-e4b0-4f01-9c16-7e28ee7b4237",
                  "parentUUID": "0bd0c9f7-92b8-4e38-9a3e-19eda7133d53",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6cb2ca88-cc6f-49e7-8372-12426ef644fc",
                "6265f71b-e4b0-4f01-9c16-7e28ee7b4237"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e16d243c-9374-48a6-8d41-1c71d08e435f",
              "title": "isTokenAutoFail",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when token is autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoFail is true when token is autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.AUTOFAIL, new src_1.Autofail()]]);\nchai_1.expect(effects.isTokenAutoFail(src_1.Token.AUTOFAIL)).to.be.true;",
                  "err": {},
                  "uuid": "cf9d2674-78d6-4276-93e8-d206010845f4",
                  "parentUUID": "e16d243c-9374-48a6-8d41-1c71d08e435f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when token is not autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoFail is false when token is not autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Modifier(1)]]);\nchai_1.expect(effects.isTokenAutoFail(src_1.Token.ELDER_SIGN)).to.be.false;",
                  "err": {},
                  "uuid": "c764bcc1-873e-4863-b413-5576e48400a9",
                  "parentUUID": "e16d243c-9374-48a6-8d41-1c71d08e435f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cf9d2674-78d6-4276-93e8-d206010845f4",
                "c764bcc1-873e-4863-b413-5576e48400a9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "70252c1e-e45d-49d5-9251-299e64086ce4",
              "title": "getTokenModifier",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns the token modifier if the token is a modifier token",
                  "fullTitle": "TokenEffects getTokenModifier returns the token modifier if the token is a modifier token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Modifier(2)]]);\nchai_1.expect(effects.getTokenModifier(src_1.Token.ELDER_SIGN)).to.equal(2);",
                  "err": {},
                  "uuid": "212a0216-12fd-4cb8-8691-5449fdf689b4",
                  "parentUUID": "70252c1e-e45d-49d5-9251-299e64086ce4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns an error if the token effect is not a modifier token",
                  "fullTitle": "TokenEffects getTokenModifier returns an error if the token effect is not a modifier token",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Autosuccess()]]);\nchai_1.expect(function () {\n    effects.getTokenModifier(src_1.Token.ELDER_SIGN);\n}).to.throw();",
                  "err": {},
                  "uuid": "7628401a-d11c-4d61-98f6-294a0e3e5856",
                  "parentUUID": "70252c1e-e45d-49d5-9251-299e64086ce4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "212a0216-12fd-4cb8-8691-5449fdf689b4",
                "7628401a-d11c-4d61-98f6-294a0e3e5856"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "30ff7d1a-96aa-4a5f-908a-56c05e9b8308",
              "title": "sortByBestOutcomeDesc",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Autosuccess comes first",
                  "fullTitle": "TokenEffects sortByBestOutcomeDesc Autosuccess comes first",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Autosuccess()],\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)]\n]);\nvar tokens = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ELDER_SIGN,\n    src_1.Token.PLUS_ONE\n];\nchai_1.expect(effects.sortByBestOutcomeDesc(tokens)[0]).to.equal(src_1.Token.ELDER_SIGN);",
                  "err": {},
                  "uuid": "1ad4ec5c-5685-4746-8eee-c3974e1d4de5",
                  "parentUUID": "30ff7d1a-96aa-4a5f-908a-56c05e9b8308",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Autofail comes last",
                  "fullTitle": "TokenEffects sortByBestOutcomeDesc Autofail comes last",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()]\n]);\nvar tokens = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.AUTOFAIL,\n    src_1.Token.PLUS_ONE\n];\nchai_1.expect(effects.sortByBestOutcomeDesc(tokens)[tokens.length - 1]).to.equal(src_1.Token.AUTOFAIL);",
                  "err": {},
                  "uuid": "ed3571f0-3465-4829-b20b-1b5548f8a557",
                  "parentUUID": "30ff7d1a-96aa-4a5f-908a-56c05e9b8308",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Modifier tokens are sorted by their modifier value from highest to lowest",
                  "fullTitle": "TokenEffects sortByBestOutcomeDesc Modifier tokens are sorted by their modifier value from highest to lowest",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.MINUS_FIVE, new src_1.Modifier(-5)]\n]);\nvar tokens = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_FIVE,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_TWO\n];\nvar sorted = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.MINUS_FIVE\n];\nchai_1.expect(effects.sortByBestOutcomeDesc(tokens)).to.deep.equal(sorted);",
                  "err": {},
                  "uuid": "a1ff12a3-9828-4a28-88d0-df3a4db76176",
                  "parentUUID": "30ff7d1a-96aa-4a5f-908a-56c05e9b8308",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ad4ec5c-5685-4746-8eee-c3974e1d4de5",
                "ed3571f0-3465-4829-b20b-1b5548f8a557",
                "a1ff12a3-9828-4a28-88d0-df3a4db76176"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ab708ec6-3139-43b6-a12b-2b28a1445980",
              "title": "isSuccess",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "TokenEffects isSuccess \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sharedEffects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Autosuccess()],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()]\n]);",
                  "err": {},
                  "uuid": "e365e890-8ded-4c8a-a224-a37393b6798e",
                  "parentUUID": "ab708ec6-3139-43b6-a12b-2b28a1445980",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "0f081fe4-bc88-4087-ae42-18f9a178906f",
                  "title": "with a single token",
                  "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
                  "file": "/spec/tokens/TokenEffects.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns true whatever the difficulty if the token is an autosuccess",
                      "fullTitle": "TokenEffects isSuccess with a single token returns true whatever the difficulty if the token is an autosuccess",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN], 3)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN], -3)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN], -20)).to.be.true;",
                      "err": {},
                      "uuid": "b4c881af-2d6b-450f-8e4a-77886d008b5d",
                      "parentUUID": "0f081fe4-bc88-4087-ae42-18f9a178906f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false whatever the difficulty if the token is an autofail",
                      "fullTitle": "TokenEffects isSuccess with a single token returns false whatever the difficulty if the token is an autofail",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL], 3)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL], -3)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL], -20)).to.be.false;",
                      "err": {},
                      "uuid": "da6c7bae-11f2-4b05-99c1-c0e12d3c528a",
                      "parentUUID": "0f081fe4-bc88-4087-ae42-18f9a178906f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns true if the sum of (skill - difficulty) and modifier value is greater than or equal to 0",
                      "fullTitle": "TokenEffects isSuccess with a single token returns true if the sum of (skill - difficulty) and modifier value is greater than or equal to 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], 3)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], 1)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_TWO], 2)).to.be.true;",
                      "err": {},
                      "uuid": "c627fdc2-69a6-45c2-a06f-7d8f123d3e35",
                      "parentUUID": "0f081fe4-bc88-4087-ae42-18f9a178906f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false if the sum of (skill - difficulty) and modifier value is lesser than 0",
                      "fullTitle": "TokenEffects isSuccess with a single token returns false if the sum of (skill - difficulty) and modifier value is lesser than 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], -3)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], 0)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_TWO], 1)).to.be.false;",
                      "err": {},
                      "uuid": "a8fb0bbb-011e-4d38-ad80-0b00d4ac610d",
                      "parentUUID": "0f081fe4-bc88-4087-ae42-18f9a178906f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b4c881af-2d6b-450f-8e4a-77886d008b5d",
                    "da6c7bae-11f2-4b05-99c1-c0e12d3c528a",
                    "c627fdc2-69a6-45c2-a06f-7d8f123d3e35",
                    "a8fb0bbb-011e-4d38-ad80-0b00d4ac610d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "3f5e71a0-15a8-4811-b674-8e373b741766",
                  "title": "with multiple tokens",
                  "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
                  "file": "/spec/tokens/TokenEffects.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns true when 1 of the tokens is an autosuccess and there are no autofail",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns true when 1 of the tokens is an autosuccess and there are no autofail",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_TWO], -8))\n    .to.be.true;",
                      "err": {},
                      "uuid": "a5e727cc-f8ac-42b8-8a2f-0bab4ffdd172",
                      "parentUUID": "3f5e71a0-15a8-4811-b674-8e373b741766",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns true when 1 of the tokens is an autofail",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns true when 1 of the tokens is an autofail",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL, src_1.Token.MINUS_TWO], 10))\n    .to.be.false;",
                      "err": {},
                      "uuid": "1c427252-85e6-4033-a94b-a689a07949c0",
                      "parentUUID": "3f5e71a0-15a8-4811-b674-8e373b741766",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false when there are both an autosuccess and an autofail among the tokens",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns false when there are both an autosuccess and an autofail among the tokens",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_TWO, src_1.Token.AUTOFAIL], 10)).to.be.false;",
                      "err": {},
                      "uuid": "a36bba45-f4d4-4eb8-95d5-77c38f3219df",
                      "parentUUID": "3f5e71a0-15a8-4811-b674-8e373b741766",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns true if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns true if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], 6)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.MINUS_ONE], 4)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_TWO, src_1.Token.MINUS_TWO, src_1.Token.MINUS_TWO], 6)).to.be.true;",
                      "err": {},
                      "uuid": "f737947a-b03d-4801-bd84-a442ab79212e",
                      "parentUUID": "3f5e71a0-15a8-4811-b674-8e373b741766",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns false if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], 0)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], 2)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], 3)).to.be.false;",
                      "err": {},
                      "uuid": "3b2c4534-e3c3-4b03-8a9e-065dc44c73c3",
                      "parentUUID": "3f5e71a0-15a8-4811-b674-8e373b741766",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a5e727cc-f8ac-42b8-8a2f-0bab4ffdd172",
                    "1c427252-85e6-4033-a94b-a689a07949c0",
                    "a36bba45-f4d4-4eb8-95d5-77c38f3219df",
                    "f737947a-b03d-4801-bd84-a442ab79212e",
                    "3b2c4534-e3c3-4b03-8a9e-065dc44c73c3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d0b7bbcb-272f-46b2-b3ff-6efcc435b2cb",
              "title": "separateRedrawTokens",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "separates redraw tokens from non-redraw tokens",
                  "fullTitle": "TokenEffects separateRedrawTokens separates redraw tokens from non-redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);\nvar _a = effects.separateRedrawTokens([\n    src_1.Token.ZERO,\n    src_1.Token.BLESS,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.CURSE,\n    src_1.Token.ZERO\n]), nonRedrawTokens = _a.nonRedrawTokens, redrawTokens = _a.redrawTokens;\nchai_1.expect(nonRedrawTokens).to.deep.equal([\n    src_1.Token.ZERO,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.ZERO\n]);\nchai_1.expect(redrawTokens).to.deep.equal([src_1.Token.BLESS, src_1.Token.CURSE]);",
                  "err": {},
                  "uuid": "1cee1aaa-2d66-4249-b5da-1148c0201018",
                  "parentUUID": "d0b7bbcb-272f-46b2-b3ff-6efcc435b2cb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "separates redraw tokens from non-redraw tokens when there are no redraw tokens",
                  "fullTitle": "TokenEffects separateRedrawTokens separates redraw tokens from non-redraw tokens when there are no redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);\nvar _a = effects.separateRedrawTokens([\n    src_1.Token.ZERO,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.ZERO\n]), nonRedrawTokens = _a.nonRedrawTokens, redrawTokens = _a.redrawTokens;\nchai_1.expect(nonRedrawTokens).to.deep.equal([\n    src_1.Token.ZERO,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.ZERO\n]);\nchai_1.expect(redrawTokens).to.deep.equal([]);",
                  "err": {},
                  "uuid": "5b925802-8987-4077-98a7-e62b5a03b51b",
                  "parentUUID": "d0b7bbcb-272f-46b2-b3ff-6efcc435b2cb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "separates redraw tokens from non-redraw tokens when there are no non-redraw tokens",
                  "fullTitle": "TokenEffects separateRedrawTokens separates redraw tokens from non-redraw tokens when there are no non-redraw tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);\nvar _a = effects.separateRedrawTokens([\n    src_1.Token.BLESS,\n    src_1.Token.CURSE\n]), nonRedrawTokens = _a.nonRedrawTokens, redrawTokens = _a.redrawTokens;\nchai_1.expect(nonRedrawTokens).to.deep.equal([]);\nchai_1.expect(redrawTokens).to.deep.equal([src_1.Token.BLESS, src_1.Token.CURSE]);",
                  "err": {},
                  "uuid": "68d89e15-dada-4436-8c80-3cb8dadabc64",
                  "parentUUID": "d0b7bbcb-272f-46b2-b3ff-6efcc435b2cb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "leaves the original token array untouched",
                  "fullTitle": "TokenEffects separateRedrawTokens leaves the original token array untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)]\n]);\nvar tokens = [src_1.Token.BLESS, src_1.Token.PLUS_ONE];\neffects.separateRedrawTokens(tokens);\nchai_1.expect(tokens).to.deep.equal([src_1.Token.BLESS, src_1.Token.PLUS_ONE]);",
                  "err": {},
                  "uuid": "3e78e821-5b9c-48b9-8b4d-98238e37c81e",
                  "parentUUID": "d0b7bbcb-272f-46b2-b3ff-6efcc435b2cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1cee1aaa-2d66-4249-b5da-1148c0201018",
                "5b925802-8987-4077-98a7-e62b5a03b51b",
                "68d89e15-dada-4436-8c80-3cb8dadabc64",
                "3e78e821-5b9c-48b9-8b4d-98238e37c81e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "c16a6746-c1b4-4bfd-9f9a-08b115bc7725",
            "cd05b1ee-eac3-44e8-9f2a-e20193cd0baa",
            "851edd9f-cde0-4b24-9401-ee3f2f29dfe2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0a71c62d-5791-4880-8c9e-370631eff819",
          "title": "utils",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
          "file": "/spec/utils.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "433feeb4-95ba-45b1-81d7-45beb2cb727d",
              "title": "removeFirst",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should remove the first occurrence",
                  "fullTitle": "utils removeFirst should remove the first occurrence",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar removed = utils.removeFirst(arr, 2);\nchai_1.expect(removed).to.deep.equal([1, 3]);",
                  "err": {},
                  "uuid": "a811858a-ae3e-4d72-9831-d151bf8f2234",
                  "parentUUID": "433feeb4-95ba-45b1-81d7-45beb2cb727d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not remove other occurrences",
                  "fullTitle": "utils removeFirst should not remove other occurrences",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 2, 2, 3];\nvar removed = utils.removeFirst(arr, 2);\nchai_1.expect(removed).to.deep.equal([1, 2, 2, 3]);",
                  "err": {},
                  "uuid": "31a3afc5-b500-409c-b9a7-05ee717a0023",
                  "parentUUID": "433feeb4-95ba-45b1-81d7-45beb2cb727d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not modify the original array",
                  "fullTitle": "utils removeFirst should not modify the original array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nutils.removeFirst(arr, 2);\nchai_1.expect(arr).to.deep.equal([1, 2, 3]);",
                  "err": {},
                  "uuid": "4fc657c8-e807-488c-a420-929211851c9b",
                  "parentUUID": "433feeb4-95ba-45b1-81d7-45beb2cb727d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should do nothing if the array does not contain the element",
                  "fullTitle": "utils removeFirst should do nothing if the array does not contain the element",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar removed = utils.removeFirst(arr, 4);\nchai_1.expect(arr).to.deep.equal([1, 2, 3]);\nchai_1.expect(removed).to.deep.equal([1, 2, 3]);\nchai_1.expect(arr).to.not.equal(removed);",
                  "err": {},
                  "uuid": "f3d7f7a7-3a54-4da5-887f-64e2d60f9bf2",
                  "parentUUID": "433feeb4-95ba-45b1-81d7-45beb2cb727d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a811858a-ae3e-4d72-9831-d151bf8f2234",
                "31a3afc5-b500-409c-b9a7-05ee717a0023",
                "4fc657c8-e807-488c-a420-929211851c9b",
                "f3d7f7a7-3a54-4da5-887f-64e2d60f9bf2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "896cd5f1-b68c-44d2-b059-6cf1fc4429ca",
              "title": "flatten",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "flattens an array",
                  "fullTitle": "utils flatten flattens an array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.flatten([[], [1], [2]])).to.deep.equal([1, 2]);",
                  "err": {},
                  "uuid": "540a860a-d5a4-4bbc-8f38-714b23055955",
                  "parentUUID": "896cd5f1-b68c-44d2-b059-6cf1fc4429ca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "540a860a-d5a4-4bbc-8f38-714b23055955"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "57305c4f-29b6-44fb-a28f-3cd0f9f54a22",
              "title": "combinations",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an empty array if K > N",
                  "fullTitle": "utils combinations should return an empty array if K > N",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar comb = utils.combinations(4, arr);\nchai_1.expect(comb).to.deep.equals([]);",
                  "err": {},
                  "uuid": "6bba1eba-4280-4d50-9627-13a5b15dbfc7",
                  "parentUUID": "57305c4f-29b6-44fb-a28f-3cd0f9f54a22",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return [[]] if K <= 0",
                  "fullTitle": "utils combinations should return [[]] if K <= 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nchai_1.expect(utils.combinations(0, arr)).to.deep.equals([[]]);\nchai_1.expect(utils.combinations(-5, arr)).to.deep.equals([[]]);",
                  "err": {},
                  "uuid": "cd589306-64dd-4744-9d3f-8e3e4c3d5578",
                  "parentUUID": "57305c4f-29b6-44fb-a28f-3cd0f9f54a22",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the combinations",
                  "fullTitle": "utils combinations should return the combinations",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar expected = [\n    [1, 2],\n    [1, 3],\n    [2, 3]\n];\nchai_1.expect(utils.combinations(2, arr)).to.deep.equals(expected);",
                  "err": {},
                  "uuid": "5544adec-6b8d-409a-a736-e7b0d4a61017",
                  "parentUUID": "57305c4f-29b6-44fb-a28f-3cd0f9f54a22",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6bba1eba-4280-4d50-9627-13a5b15dbfc7",
                "cd589306-64dd-4744-9d3f-8e3e4c3d5578",
                "5544adec-6b8d-409a-a736-e7b0d4a61017"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fb6644ec-a944-4f48-a6c5-25f3488b1db8",
              "title": "allCombinations",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return [[]] if provided an empty array of elements",
                  "fullTitle": "utils allCombinations should return [[]] if provided an empty array of elements",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var allComb = utils.allCombinations([]);\nchai_1.expect(allComb).to.deep.equals([[]]);",
                  "err": {},
                  "uuid": "6be9c9bd-aa46-4144-a705-da5384da069b",
                  "parentUUID": "fb6644ec-a944-4f48-a6c5-25f3488b1db8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return all combinations of provided elements including empty and full sets",
                  "fullTitle": "utils allCombinations should return all combinations of provided elements including empty and full sets",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar expected = [[], [1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3]];\nvar allComb = utils.allCombinations(arr);\nchai_1.expect(allComb).to.deep.equals(expected);",
                  "err": {},
                  "uuid": "463fa6ee-f1e5-414b-aa8b-a5e0c7c18cec",
                  "parentUUID": "fb6644ec-a944-4f48-a6c5-25f3488b1db8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6be9c9bd-aa46-4144-a705-da5384da069b",
                "463fa6ee-f1e5-414b-aa8b-a5e0c7c18cec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ea9260a0-1310-420d-bcdf-df79304dab25",
              "title": "cartesianProduct",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should compute cartesian product of 2 arrays",
                  "fullTitle": "utils cartesianProduct should compute cartesian product of 2 arrays",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr1 = [1, 2];\nvar arr2 = [3, 4];\nvar expected = [\n    [1, 3],\n    [1, 4],\n    [2, 3],\n    [2, 4]\n];\nchai_1.expect(utils.cartesianProduct(arr1, arr2)).to.deep.equals(expected);",
                  "err": {},
                  "uuid": "ad979d59-22ab-4ac8-bfac-e08d1f13b00f",
                  "parentUUID": "ea9260a0-1310-420d-bcdf-df79304dab25",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ad979d59-22ab-4ac8-bfac-e08d1f13b00f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d1c93df9-9407-419c-9e55-b491a2c51184",
              "title": "factorial",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns 1 for 0!",
                  "fullTitle": "utils factorial returns 1 for 0!",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.factorial(0)).to.equal(1);",
                  "err": {},
                  "uuid": "de6459fb-fa49-478d-b043-ba60a5a076dd",
                  "parentUUID": "d1c93df9-9407-419c-9e55-b491a2c51184",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns 6 for 3!",
                  "fullTitle": "utils factorial returns 6 for 3!",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.factorial(3)).to.equal(6);",
                  "err": {},
                  "uuid": "e0b28f26-6c87-4e5a-84cc-3b8bd6526121",
                  "parentUUID": "d1c93df9-9407-419c-9e55-b491a2c51184",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "de6459fb-fa49-478d-b043-ba60a5a076dd",
                "e0b28f26-6c87-4e5a-84cc-3b8bd6526121"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "reports/tests",
        "reportFilename": "index"
      },
      "version": "4.1.0"
    }
  }
}