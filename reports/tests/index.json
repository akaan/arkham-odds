{
  "stats": {
    "suites": 51,
    "tests": 130,
    "passes": 130,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-15T11:50:18.206Z",
    "end": "2020-05-15T11:50:18.259Z",
    "duration": 53,
    "testsRegistered": 130,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9b9040ad-79ae-4c6c-93f4-18937ea37f09",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e4fcab0d-4bbd-4710-8f67-cd8b26bb7bc3",
          "title": "Bag",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
          "file": "/spec/bag/Bag.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not be affected by changes to the passed array of tokens",
              "fullTitle": "Bag should not be affected by changes to the passed array of tokens",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var someTokens = [tokens_1.Token.ZERO, tokens_1.Token.MINUS_ONE];\nvar bag = new bag_1.Bag(someTokens);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ZERO, tokens_1.Token.MINUS_ONE]);\nsomeTokens.push(tokens_1.Token.AUTOFAIL);\nchai_1.expect(someTokens).to.deep.equal([\n    tokens_1.Token.ZERO,\n    tokens_1.Token.MINUS_ONE,\n    tokens_1.Token.AUTOFAIL\n]);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ZERO, tokens_1.Token.MINUS_ONE]);",
              "err": {},
              "uuid": "6ffec7d2-6b18-4ec9-ac77-4ed49524b530",
              "parentUUID": "e4fcab0d-4bbd-4710-8f67-cd8b26bb7bc3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "58834387-13af-492f-8dd3-7d912a5d7c44",
              "title": "getTokens",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
              "file": "/spec/bag/Bag.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "modifications to the returned array should not affect the Bag",
                  "fullTitle": "Bag getTokens modifications to the returned array should not affect the Bag",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nvar tokens = bag.getTokens();\ntokens.push(tokens_1.Token.TABLET);\nchai_1.expect(tokens).to.deep.equal([\n    tokens_1.Token.ELDER_SIGN,\n    tokens_1.Token.AUTOFAIL,\n    tokens_1.Token.TABLET\n]);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);",
                  "err": {},
                  "uuid": "70650d07-9256-4d09-aeb3-fd7f3183ace6",
                  "parentUUID": "58834387-13af-492f-8dd3-7d912a5d7c44",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "70650d07-9256-4d09-aeb3-fd7f3183ace6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "14dacf76-7e58-46fb-b1ac-165a00d6040c",
              "title": "addTokens",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
              "file": "/spec/bag/Bag.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new Bag",
                  "fullTitle": "Bag addTokens should return a new Bag",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN]);\nvar added = bag.addTokens([tokens_1.Token.AUTOFAIL]);\nchai_1.expect(added).not.to.equal(bag);",
                  "err": {},
                  "uuid": "91a50d9c-d500-414c-8c14-c557f4a9ca84",
                  "parentUUID": "14dacf76-7e58-46fb-b1ac-165a00d6040c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add the tokens",
                  "fullTitle": "Bag addTokens should add the tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN]);\nvar added = bag.addTokens([tokens_1.Token.AUTOFAIL, tokens_1.Token.TABLET]);\nchai_1.expect(added.getTokens()).to.deep.equal([\n    tokens_1.Token.ELDER_SIGN,\n    tokens_1.Token.AUTOFAIL,\n    tokens_1.Token.TABLET\n]);",
                  "err": {},
                  "uuid": "031c6137-e354-4a7b-a38c-a961db66e491",
                  "parentUUID": "14dacf76-7e58-46fb-b1ac-165a00d6040c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should leave the original Bag untouched",
                  "fullTitle": "Bag addTokens should leave the original Bag untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN]);\nbag.addTokens([tokens_1.Token.AUTOFAIL]);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN]);",
                  "err": {},
                  "uuid": "f56dc9c9-4864-4687-bd82-77a4784b3566",
                  "parentUUID": "14dacf76-7e58-46fb-b1ac-165a00d6040c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "91a50d9c-d500-414c-8c14-c557f4a9ca84",
                "031c6137-e354-4a7b-a38c-a961db66e491",
                "f56dc9c9-4864-4687-bd82-77a4784b3566"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e24117f7-87ed-45bd-ae42-fd251beb8aed",
              "title": "removeToken",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
              "file": "/spec/bag/Bag.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new Bag",
                  "fullTitle": "Bag removeToken should return a new Bag",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nvar removed = bag.removeToken(tokens_1.Token.AUTOFAIL);\nchai_1.expect(removed).not.to.equal(bag);",
                  "err": {},
                  "uuid": "9eacc175-c044-4608-abbd-d3f41c1848c0",
                  "parentUUID": "e24117f7-87ed-45bd-ae42-fd251beb8aed",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should remove the token",
                  "fullTitle": "Bag removeToken should remove the token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nvar removed = bag.removeToken(tokens_1.Token.AUTOFAIL);\nchai_1.expect(removed.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN]);",
                  "err": {},
                  "uuid": "743f3e8e-01a6-43ed-a4d7-5267503a6209",
                  "parentUUID": "e24117f7-87ed-45bd-ae42-fd251beb8aed",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should the original Bag untouched",
                  "fullTitle": "Bag removeToken should the original Bag untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nbag.removeToken(tokens_1.Token.AUTOFAIL);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);",
                  "err": {},
                  "uuid": "e1d5a50a-9d34-45dc-970a-6ee8116cedde",
                  "parentUUID": "e24117f7-87ed-45bd-ae42-fd251beb8aed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9eacc175-c044-4608-abbd-d3f41c1848c0",
                "743f3e8e-01a6-43ed-a4d7-5267503a6209",
                "e1d5a50a-9d34-45dc-970a-6ee8116cedde"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "6ffec7d2-6b18-4ec9-ac77-4ed49524b530"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "28ca1e83-66bf-481c-83f0-d16185faecb1",
          "title": "cards",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
          "file": "/spec/cards.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "cards \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.MINUS_FOUR, new src_1.Modifier(-4)],\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);",
              "err": {},
              "uuid": "65a58b1c-a314-4ba2-a798-19f4f7e1fb44",
              "parentUUID": "28ca1e83-66bf-481c-83f0-d16185faecb1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c5b1a75b-b453-4692-af4a-fe5cf73f5eef",
              "title": "success",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards success returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.success(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "8253df7f-aa0d-4c30-b89d-d4367be4df55",
                  "parentUUID": "c5b1a75b-b453-4692-af4a-fe5cf73f5eef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returned function determine success resolving all pulled tokens",
                  "fullTitle": "cards success returned function determine success resolving all pulled tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.success(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be\n    .false;\nchai_1.expect(src_1.success(3)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be\n    .true;",
                  "err": {},
                  "uuid": "4db7870f-46c7-4060-9084-04afcf8fd367",
                  "parentUUID": "c5b1a75b-b453-4692-af4a-fe5cf73f5eef",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8253df7f-aa0d-4c30-b89d-d4367be4df55",
                "4db7870f-46c7-4060-9084-04afcf8fd367"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5e8b993c-8bc4-4b79-bca8-a1f03b1a464e",
              "title": "successChoosingBest",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards successChoosingBest returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.successChoosingBest(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "e28b273e-1829-4bda-b8eb-876d0f44b0cd",
                  "parentUUID": "5e8b993c-8bc4-4b79-bca8-a1f03b1a464e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty when applying the best token",
                  "fullTitle": "cards successChoosingBest returns true if greater than difficulty when applying the best token",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.successChoosingBest(1)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be.true;",
                  "err": {},
                  "uuid": "daeaf0a5-0b7d-4382-8213-a6620debc821",
                  "parentUUID": "5e8b993c-8bc4-4b79-bca8-a1f03b1a464e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty when applying the best token",
                  "fullTitle": "cards successChoosingBest returns false if lesser than difficulty when applying the best token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.successChoosingBest(0)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "e1e54287-74d2-43e6-beeb-56ad1e59fd04",
                  "parentUUID": "5e8b993c-8bc4-4b79-bca8-a1f03b1a464e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should assume that redraw tokens where pulled",
                  "fullTitle": "cards successChoosingBest should assume that redraw tokens where pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.successChoosingBest(0)([src_1.Token.AUTOFAIL, src_1.Token.MINUS_FOUR, src_1.Token.BLESS], effects)).to.be.false;",
                  "err": {},
                  "uuid": "cc12f3fd-3416-49a0-9ee1-90ad1c8dd34b",
                  "parentUUID": "5e8b993c-8bc4-4b79-bca8-a1f03b1a464e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e28b273e-1829-4bda-b8eb-876d0f44b0cd",
                "daeaf0a5-0b7d-4382-8213-a6620debc821",
                "e1e54287-74d2-43e6-beeb-56ad1e59fd04",
                "cc12f3fd-3416-49a0-9ee1-90ad1c8dd34b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b80d5059-3930-481d-ba1b-7c2c79660a3c",
              "title": "oliveMcBride",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBride returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBride(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "1cd79b26-bfea-400e-aafd-6723d1870cdf",
                  "parentUUID": "b80d5059-3930-481d-ba1b-7c2c79660a3c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if higher than difficulty with the 2 best tokens",
                  "fullTitle": "cards oliveMcBride returns true if higher than difficulty with the 2 best tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBride(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.true;",
                  "err": {},
                  "uuid": "13e65fc1-a681-4749-9282-8ac218ac2bf8",
                  "parentUUID": "b80d5059-3930-481d-ba1b-7c2c79660a3c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty with the 2 best tokens",
                  "fullTitle": "cards oliveMcBride returns false if lesser than difficulty with the 2 best tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBride(0)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.false;",
                  "err": {},
                  "uuid": "07d2accc-1599-4fe1-8588-d4dd409ea0b0",
                  "parentUUID": "b80d5059-3930-481d-ba1b-7c2c79660a3c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should assume that redraw tokens where pulled",
                  "fullTitle": "cards oliveMcBride should assume that redraw tokens where pulled",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBride(-2)([src_1.Token.AUTOFAIL, src_1.Token.MINUS_FOUR, src_1.Token.BLESS, src_1.Token.ZERO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "a703b1fa-5e32-4091-8d8b-18ba4a9f66c7",
                  "parentUUID": "b80d5059-3930-481d-ba1b-7c2c79660a3c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1cd79b26-bfea-400e-aafd-6723d1870cdf",
                "13e65fc1-a681-4749-9282-8ac218ac2bf8",
                "07d2accc-1599-4fe1-8588-d4dd409ea0b0",
                "a703b1fa-5e32-4091-8d8b-18ba4a9f66c7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "889c2c02-907d-4eb3-a71c-5410f4bca260",
              "title": "oliveMcBrideWithSkull",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBrideWithSkull returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBrideWithSkull(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "56c5cd60-fa9e-48ba-bc93-230130ea9767",
                  "parentUUID": "889c2c02-907d-4eb3-a71c-5410f4bca260",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if there is no Skull token in the tokens pulled",
                  "fullTitle": "cards oliveMcBrideWithSkull returns false if there is no Skull token in the tokens pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(0)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "341475b9-cf94-4091-b112-d642549238c7",
                  "parentUUID": "889c2c02-907d-4eb3-a71c-5410f4bca260",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not modify the combination",
                  "fullTitle": "cards oliveMcBrideWithSkull should not modify the combination",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var myComb = [src_1.Token.SKULL, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO];\nsrc_1.oliveMcBrideWithSkull(2)(myComb, effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-1)]])));\nchai_1.expect(myComb).to.deep.equal([\n    src_1.Token.SKULL,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO\n]);",
                  "err": {},
                  "uuid": "ac87b083-1493-4e05-b1bf-3edd522de14d",
                  "parentUUID": "889c2c02-907d-4eb3-a71c-5410f4bca260",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if there is a Skull token in the tokens pulled and if adding best of remaining tokens is still higher than difficulty",
                  "fullTitle": "cards oliveMcBrideWithSkull returns true if there is a Skull token in the tokens pulled and if adding best of remaining tokens is still higher than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(2)([src_1.Token.SKULL, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-1)]])))).to.be.true;",
                  "err": {},
                  "uuid": "1a3c4550-467f-453b-9f0e-98aaf8fd1982",
                  "parentUUID": "889c2c02-907d-4eb3-a71c-5410f4bca260",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if there is a Skull token in the tokens pulled and if adding best of remaining tokens is lesser than difficulty",
                  "fullTitle": "cards oliveMcBrideWithSkull returns false if there is a Skull token in the tokens pulled and if adding best of remaining tokens is lesser than difficulty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(1)([src_1.Token.SKULL, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-1)]])))).to.be.false;",
                  "err": {},
                  "uuid": "707f76a3-65f2-4ec1-a262-5971e7c484de",
                  "parentUUID": "889c2c02-907d-4eb3-a71c-5410f4bca260",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should assume that redraw tokens where pulled",
                  "fullTitle": "cards oliveMcBrideWithSkull should assume that redraw tokens where pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(3)([src_1.Token.AUTOFAIL, src_1.Token.SKULL, src_1.Token.BLESS, src_1.Token.MINUS_TWO], effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-4)]])))).to.be.false;",
                  "err": {},
                  "uuid": "df8dab43-682d-40ca-b61a-65d8d0ce59f5",
                  "parentUUID": "889c2c02-907d-4eb3-a71c-5410f4bca260",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "56c5cd60-fa9e-48ba-bc93-230130ea9767",
                "341475b9-cf94-4091-b112-d642549238c7",
                "ac87b083-1493-4e05-b1bf-3edd522de14d",
                "1a3c4550-467f-453b-9f0e-98aaf8fd1982",
                "707f76a3-65f2-4ec1-a262-5971e7c484de",
                "df8dab43-682d-40ca-b61a-65d8d0ce59f5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9641386e-1e3d-49ee-9ecb-c9d32f147ff0",
              "title": "recallTheFuture",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards recallTheFuture returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.recallTheFuture(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "53c9644d-f6a1-49c9-9560-463e2c695c7a",
                  "parentUUID": "9641386e-1e3d-49ee-9ecb-c9d32f147ff0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty",
                  "fullTitle": "cards recallTheFuture returns true if greater than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(0)([src_1.Token.ZERO], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.true;",
                  "err": {},
                  "uuid": "cc5f9a30-d80b-4397-be60-b568809b1e4a",
                  "parentUUID": "9641386e-1e3d-49ee-9ecb-c9d32f147ff0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if lesser than difficulty but drew the token which has the most chances to be turned into success using the +2 bonus",
                  "fullTitle": "cards recallTheFuture returns true if lesser than difficulty but drew the token which has the most chances to be turned into success using the +2 bonus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.MINUS_ONE], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.true;",
                  "err": {},
                  "uuid": "d194970c-06b5-4abf-909b-2f8ad09c948d",
                  "parentUUID": "9641386e-1e3d-49ee-9ecb-c9d32f147ff0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty and did not drew the token which has the most chances to be turned into success using the +2 bonus",
                  "fullTitle": "cards recallTheFuture returns false if lesser than difficulty and did not drew the token which has the most chances to be turned into success using the +2 bonus",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.ZERO], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.false;",
                  "err": {},
                  "uuid": "08d4e16a-497a-4da5-a2fb-c4832a2eb050",
                  "parentUUID": "9641386e-1e3d-49ee-9ecb-c9d32f147ff0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if still lesser than difficulty applying the +2 bonus",
                  "fullTitle": "cards recallTheFuture returns false if still lesser than difficulty applying the +2 bonus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-2)([src_1.Token.MINUS_ONE], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.false;",
                  "err": {},
                  "uuid": "d998390d-3286-47ea-9a4f-ae9bf720411e",
                  "parentUUID": "9641386e-1e3d-49ee-9ecb-c9d32f147ff0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can handle the case where several tokens where drawn",
                  "fullTitle": "cards recallTheFuture can handle the case where several tokens where drawn",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE], effects, new src_1.Bag([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO\n]))).to.be.true;",
                  "err": {},
                  "uuid": "a2ff8e48-3e59-4d1c-9959-ed2cc9fab6ea",
                  "parentUUID": "9641386e-1e3d-49ee-9ecb-c9d32f147ff0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can handle redraw tokens",
                  "fullTitle": "cards recallTheFuture can handle redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.MINUS_ONE, src_1.Token.CURSE], effects, new src_1.Bag([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.CURSE\n]))).to.be.false;",
                  "err": {},
                  "uuid": "662e8606-387c-4cfa-8a3f-e49f489f21a7",
                  "parentUUID": "9641386e-1e3d-49ee-9ecb-c9d32f147ff0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "53c9644d-f6a1-49c9-9560-463e2c695c7a",
                "cc5f9a30-d80b-4397-be60-b568809b1e4a",
                "d194970c-06b5-4abf-909b-2f8ad09c948d",
                "08d4e16a-497a-4da5-a2fb-c4832a2eb050",
                "d998390d-3286-47ea-9a4f-ae9bf720411e",
                "a2ff8e48-3e59-4d1c-9959-ed2cc9fab6ea",
                "662e8606-387c-4cfa-8a3f-e49f489f21a7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "15fc307c-fe1a-485f-bfad-b01e0c210ca3",
              "title": "darkProphecy",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards darkProphecy returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.darkProphecy(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "42feb838-4d07-4083-953c-a3779decfa13",
                  "parentUUID": "15fc307c-fe1a-485f-bfad-b01e0c210ca3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return true if greater than difficulty using the \"best\" bad token pulled",
                  "fullTitle": "cards darkProphecy return true if greater than difficulty using the \"best\" bad token pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(2)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.CULTIST,\n    src_1.Token.ELDER_THING\n], effects.merge(new src_1.TokenEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n])))).to.be.true;",
                  "err": {},
                  "uuid": "2a44a153-8233-4792-909b-418e8fd621cc",
                  "parentUUID": "15fc307c-fe1a-485f-bfad-b01e0c210ca3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return false if lesser than difficulty using the \"best\" bad token pulled",
                  "fullTitle": "cards darkProphecy return false if lesser than difficulty using the \"best\" bad token pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(1)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.CULTIST,\n    src_1.Token.ELDER_THING\n], effects.merge(new src_1.TokenEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n])))).to.be.false;",
                  "err": {},
                  "uuid": "90f93709-055d-4b88-a7b9-a9ff9cf7aba4",
                  "parentUUID": "15fc307c-fe1a-485f-bfad-b01e0c210ca3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return true if greater than difficulty using best token when no bad tokens were pulled",
                  "fullTitle": "cards darkProphecy return true if greater than difficulty using best token when no bad tokens were pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(0)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_TWO\n], effects)).to.be.true;",
                  "err": {},
                  "uuid": "42ecc12d-1536-49d5-b901-d2f8eb6594cb",
                  "parentUUID": "15fc307c-fe1a-485f-bfad-b01e0c210ca3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return false if lesser than difficulty using best token when no bad tokens were pulled",
                  "fullTitle": "cards darkProphecy return false if lesser than difficulty using best token when no bad tokens were pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(-1)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_TWO\n], effects)).to.be.false;",
                  "err": {},
                  "uuid": "8c819d82-e790-490f-9353-9fcf7c1d1e5f",
                  "parentUUID": "15fc307c-fe1a-485f-bfad-b01e0c210ca3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens (assuming they were pulled)",
                  "fullTitle": "cards darkProphecy takes into account redraw tokens (assuming they were pulled)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(0)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.CURSE\n], effects)).to.be.false;",
                  "err": {},
                  "uuid": "7a3b5daf-dd3d-4b7b-bee9-8dffd3c07d55",
                  "parentUUID": "15fc307c-fe1a-485f-bfad-b01e0c210ca3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "42feb838-4d07-4083-953c-a3779decfa13",
                "2a44a153-8233-4792-909b-418e8fd621cc",
                "90f93709-055d-4b88-a7b9-a9ff9cf7aba4",
                "42ecc12d-1536-49d5-b901-d2f8eb6594cb",
                "8c819d82-e790-490f-9353-9fcf7c1d1e5f",
                "7a3b5daf-dd3d-4b7b-bee9-8dffd3c07d55"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2289b90d-91bd-4c31-b80f-44996f316005",
              "title": "winchesterDoing1Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards winchesterDoing1Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.winchesterDoing1Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "64e15a63-6043-4ce2-91d2-dcc52e443c9b",
                  "parentUUID": "2289b90d-91bd-4c31-b80f-44996f316005",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards winchesterDoing1Damage returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing1Damage(1)([src_1.Token.MINUS_ONE], effects)).to.be.true;\nchai_1.expect(src_1.winchesterDoing1Damage(2)([src_1.Token.MINUS_TWO], effects)).to.be.true;",
                  "err": {},
                  "uuid": "d1721239-b9f1-419f-8194-ac94157c5557",
                  "parentUUID": "2289b90d-91bd-4c31-b80f-44996f316005",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards winchesterDoing1Damage returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing1Damage(0)([src_1.Token.ELDER_SIGN], effects)).to.be\n    .false;\nchai_1.expect(src_1.winchesterDoing1Damage(0)([src_1.Token.ZERO], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(-1)([src_1.Token.PLUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "51a7df20-7747-43d8-9c88-a4a3d37b1328",
                  "parentUUID": "2289b90d-91bd-4c31-b80f-44996f316005",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards winchesterDoing1Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing1Damage(-2)([src_1.Token.ELDER_SIGN], effects)).to.be\n    .false;\nchai_1.expect(src_1.winchesterDoing1Damage(-1)([src_1.Token.ZERO], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(-2)([src_1.Token.PLUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(0)([src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(1)([src_1.Token.MINUS_TWO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "e6e7c7ae-d0cf-4429-a4be-bac06485fdbd",
                  "parentUUID": "2289b90d-91bd-4c31-b80f-44996f316005",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "64e15a63-6043-4ce2-91d2-dcc52e443c9b",
                "d1721239-b9f1-419f-8194-ac94157c5557",
                "51a7df20-7747-43d8-9c88-a4a3d37b1328",
                "e6e7c7ae-d0cf-4429-a4be-bac06485fdbd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7e1b89d1-d38c-4648-8883-fe52de12fcee",
              "title": "winchesterDoing3Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards winchesterDoing3Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.winchesterDoing3Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "41191d18-c17d-4326-ba2a-e04a70b4dbcf",
                  "parentUUID": "7e1b89d1-d38c-4648-8883-fe52de12fcee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards winchesterDoing3Damage returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing3Damage(0)([src_1.Token.ELDER_SIGN], effects)).to.be.true;\nchai_1.expect(src_1.winchesterDoing3Damage(0)([src_1.Token.ZERO], effects)).to.be.true;\nchai_1.expect(src_1.winchesterDoing3Damage(-1)([src_1.Token.PLUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "737a8154-b349-45ed-9106-4faa29f2cb12",
                  "parentUUID": "7e1b89d1-d38c-4648-8883-fe52de12fcee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards winchesterDoing3Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing3Damage(-2)([src_1.Token.ELDER_SIGN], effects)).to.be\n    .false;\nchai_1.expect(src_1.winchesterDoing3Damage(-1)([src_1.Token.ZERO], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing3Damage(-2)([src_1.Token.PLUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "491a60d6-18d3-45a5-9bc9-e44c8b5b76d8",
                  "parentUUID": "7e1b89d1-d38c-4648-8883-fe52de12fcee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards winchesterDoing3Damage returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing3Damage(1)([src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "d97726fa-53de-40c0-a174-c4ff1817a34d",
                  "parentUUID": "7e1b89d1-d38c-4648-8883-fe52de12fcee",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "41191d18-c17d-4326-ba2a-e04a70b4dbcf",
                "737a8154-b349-45ed-9106-4faa29f2cb12",
                "491a60d6-18d3-45a5-9bc9-e44c8b5b76d8",
                "d97726fa-53de-40c0-a174-c4ff1817a34d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "dbdd1e23-8396-4e87-b501-41e628062ec7",
              "title": "oliveMcBrideAndWinchesterDoing1Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBrideAndWinchesterDoing1Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "d9bf6d3c-dcc8-4c7a-97fd-fbd660bffdd5",
                  "parentUUID": "dbdd1e23-8396-4e87-b501-41e628062ec7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(2)([src_1.Token.MINUS_TWO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "3b78d569-bfab-4172-9f4a-2effacd5e092",
                  "parentUUID": "dbdd1e23-8396-4e87-b501-41e628062ec7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(0)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(0)([src_1.Token.PLUS_ONE, , src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "bec7e0c2-06d2-4373-94b1-196abe53e543",
                  "parentUUID": "dbdd1e23-8396-4e87-b501-41e628062ec7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(-1)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(1)([src_1.Token.MINUS_TWO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "7f9259c2-3069-4f95-b62d-49f32ded3e86",
                  "parentUUID": "dbdd1e23-8396-4e87-b501-41e628062ec7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage takes into account redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "9e07d549-5d23-4abc-9fd8-47905c3f3b3b",
                  "parentUUID": "dbdd1e23-8396-4e87-b501-41e628062ec7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d9bf6d3c-dcc8-4c7a-97fd-fbd660bffdd5",
                "3b78d569-bfab-4172-9f4a-2effacd5e092",
                "bec7e0c2-06d2-4373-94b1-196abe53e543",
                "7f9259c2-3069-4f95-b62d-49f32ded3e86",
                "9e07d549-5d23-4abc-9fd8-47905c3f3b3b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7ac6ffa5-69c5-4727-9bf7-36314f449a30",
              "title": "oliveMcBrideAndWinchesterDoing3Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBrideAndWinchesterDoing3Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "02efaf2f-ec43-4213-9c33-eedf8a0e9421",
                  "parentUUID": "7ac6ffa5-69c5-4727-9bf7-36314f449a30",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(0)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(0)([src_1.Token.PLUS_ONE, , src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "e20dce31-3f0e-45de-a80d-627b318800d3",
                  "parentUUID": "7ac6ffa5-69c5-4727-9bf7-36314f449a30",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(-1)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(0)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(-1)([src_1.Token.PLUS_ONE, , src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "cb3aa51c-014e-4b7e-b487-a5b858ed4823",
                  "parentUUID": "7ac6ffa5-69c5-4727-9bf7-36314f449a30",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "eb9a0ea2-4532-4b0f-8372-1e38f704afcd",
                  "parentUUID": "7ac6ffa5-69c5-4727-9bf7-36314f449a30",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage takes into account redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "61286ef4-d17a-46da-abcd-4c1123caa4c4",
                  "parentUUID": "7ac6ffa5-69c5-4727-9bf7-36314f449a30",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "02efaf2f-ec43-4213-9c33-eedf8a0e9421",
                "e20dce31-3f0e-45de-a80d-627b318800d3",
                "cb3aa51c-014e-4b7e-b487-a5b858ed4823",
                "eb9a0ea2-4532-4b0f-8372-1e38f704afcd",
                "61286ef4-d17a-46da-abcd-4c1123caa4c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0f146c1d-8655-47e0-925a-181c912fc70e",
              "title": "jacqueline",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards jacqueline returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.jacqueline(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "cd6e3623-507f-4994-9725-90a2630a5bc7",
                  "parentUUID": "0f146c1d-8655-47e0-925a-181c912fc70e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty when cancelling 2 non-tentacle tokens",
                  "fullTitle": "cards jacqueline returns true if greater than difficulty when cancelling 2 non-tentacle tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(1)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "5d12bf11-132d-46e7-aa2d-64e424ac6988",
                  "parentUUID": "0f146c1d-8655-47e0-925a-181c912fc70e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty when cancelling tentacle",
                  "fullTitle": "cards jacqueline returns true if greater than difficulty when cancelling tentacle",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.true;",
                  "err": {},
                  "uuid": "d1487a75-87cf-4eba-80b8-f04a03987a52",
                  "parentUUID": "0f146c1d-8655-47e0-925a-181c912fc70e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty when cancelling 2 non-tentacle tokens",
                  "fullTitle": "cards jacqueline returns false if lesser than difficulty when cancelling 2 non-tentacle tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(0)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "de7c79aa-3735-43f9-aa56-76d97a1ce7c1",
                  "parentUUID": "0f146c1d-8655-47e0-925a-181c912fc70e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty when cancelling tentacle",
                  "fullTitle": "cards jacqueline returns false if lesser than difficulty when cancelling tentacle",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(1)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.false;",
                  "err": {},
                  "uuid": "ae922f0c-7d22-4f7c-87fa-7c4935dd397d",
                  "parentUUID": "0f146c1d-8655-47e0-925a-181c912fc70e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens when ignoring 2 tokens",
                  "fullTitle": "cards jacqueline takes into account redraw tokens when ignoring 2 tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "ef41d337-de55-4459-a6a3-6232205f28a7",
                  "parentUUID": "0f146c1d-8655-47e0-925a-181c912fc70e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens when cancelling tentacle",
                  "fullTitle": "cards jacqueline takes into account redraw tokens when cancelling tentacle",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "78ebb8be-2261-4c4e-91ab-d56ef6feef63",
                  "parentUUID": "0f146c1d-8655-47e0-925a-181c912fc70e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd6e3623-507f-4994-9725-90a2630a5bc7",
                "5d12bf11-132d-46e7-aa2d-64e424ac6988",
                "d1487a75-87cf-4eba-80b8-f04a03987a52",
                "de7c79aa-3735-43f9-aa56-76d97a1ce7c1",
                "ae922f0c-7d22-4f7c-87fa-7c4935dd397d",
                "ef41d337-de55-4459-a6a3-6232205f28a7",
                "78ebb8be-2261-4c4e-91ab-d56ef6feef63"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3cf7b815-98d4-44f3-9d0d-8bde68559ddf",
          "title": "exports",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/exports.spec.ts",
          "file": "/spec/exports.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "exports the `odds` function",
              "fullTitle": "exports exports the `odds` function",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai_1.expect(ArkhamOdds.odds).to.exist;",
              "err": {},
              "uuid": "fcf696d0-c081-4c82-a7bc-98a5304ef721",
              "parentUUID": "3cf7b815-98d4-44f3-9d0d-8bde68559ddf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fcf696d0-c081-4c82-a7bc-98a5304ef721"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "704c87d4-1c65-42c5-9798-7839659d973d",
          "title": "Odds functions",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
          "file": "/spec/index.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Odds functions \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-1, true)]\n]);",
              "err": {},
              "uuid": "3a822758-032d-4c8e-a596-06cad7df85c7",
              "parentUUID": "704c87d4-1c65-42c5-9798-7839659d973d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "327db12c-a186-4ba5-b8a5-7bbc3782c9ae",
              "title": "odds",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
              "file": "/spec/index.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "fullTitle": "Odds functions odds returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.odds(1, bag, effects, src_1.success(0));\nchai_1.expect(oddsOfSuccess).to.equal(0.5);",
                  "err": {},
                  "uuid": "bed368cc-8fc4-497c-b286-c0c43f733af8",
                  "parentUUID": "327db12c-a186-4ba5-b8a5-7bbc3782c9ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can compute odds even when there are no successful combinations",
                  "fullTitle": "Odds functions odds can compute odds even when there are no successful combinations",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.odds(1, bag, effects, src_1.success(-4));\nchai_1.expect(oddsOfSuccess).to.equal(0);",
                  "err": {},
                  "uuid": "a2fe96c1-598c-467d-8b41-5d33bcc5ef63",
                  "parentUUID": "327db12c-a186-4ba5-b8a5-7bbc3782c9ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account tokens with a redraw effect",
                  "fullTitle": "Odds functions odds takes into account tokens with a redraw effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.CULTIST]);\nvar oddsOfSuccess = src_1.odds(1, bag, effects, src_1.success(-1));\n/* Possible draws are :\n * - +1 with a probability of 1/3\n * - -1 with a probability of 1/3\n * - Cultist and +1 with a probability of 1/6 (1/3 x 1/2)\n * - Cultist and -1 with a probability of 1/6 (1/3 x 1/2)\n * If testing at -1, only +1 result in a success.\n */\nchai_1.expect(oddsOfSuccess).to.be.closeTo(0.33, 0.1);",
                  "err": {},
                  "uuid": "b0d8737b-d4a3-4612-8248-e78fa39f5104",
                  "parentUUID": "327db12c-a186-4ba5-b8a5-7bbc3782c9ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account tokens with a redraw effect when pulling multiple tokens",
                  "fullTitle": "Odds functions odds takes into account tokens with a redraw effect when pulling multiple tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.CULTIST\n]);\n/* Possible draws are in the table below\n *\n * | 1st pull | 2nd pull | 3rd pull | Result | Probability |\n * | +1       | -1       |          | +0     | 1/12        |\n * | +1       | -2       |          | -1     | 1/12        |\n * | +1       | Cultist  | -1       | -1     | 1/24        |\n * | +1       | Cultist  | -2       | -2     | 1/24        |\n * | -1       | +1       |          | +0     | 1/12        |\n * | -1       | -2       |          | -3     | 1/12        |\n * | -1       | Cultist  | +1       | -1     | 1/24        |\n * | -1       | Cultist  | -2       | -4     | 1/24        |\n * | -2       | +1       |          | -1     | 1/12        |\n * | -2       | -1       |          | -3     | 1/12        |\n * | -2       | Cultist  | +1       | -2     | 1/24        |\n * | -2       | Cultist  | -1       | -4     | 1/24        |\n * | Cultist  | +1       | -1       | -1     | 1/24        |\n * | Cultist  | +1       | -2       | -2     | 1/24        |\n * | Cultist  | -1       | +1       | -1     | 1/24        |\n * | Cultist  | -1       | -2       | -4     | 1/24        |\n * | Cultist  | -2       | +1       | -2     | 1/24        |\n * | Cultist  | -2       | -1       | -4     | 1/24        |\n *\n * Odds of success depending on difficulty is then :\n *\n * | Result | Probability |\n * | -4     | 4/24        |\n * | -3     | 4/24        |\n * | -2     | 4/24        |\n * | -1     | 8/24        |\n * | 0      | 4/24        |\n */\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(0))).to.be.closeTo(4 / 24, 0.01, \"when equal\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(1))).to.be.closeTo(4 / 24 + 8 / 24, 0.01, \"when over by 1\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(2))).to.be.closeTo(4 / 24 + 8 / 24 + 4 / 24, 0.01, \"when over by 2\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(3))).to.equal(4 / 24 + 8 / 24 + 4 / 24 + 4 / 24, \"when over by 3\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(4))).to.be.closeTo(1, 0.01, \"when over by 4\");",
                  "err": {},
                  "uuid": "ba0d4538-1e83-43fe-91fb-6553d6490823",
                  "parentUUID": "327db12c-a186-4ba5-b8a5-7bbc3782c9ae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bed368cc-8fc4-497c-b286-c0c43f733af8",
                "a2fe96c1-598c-467d-8b41-5d33bcc5ef63",
                "b0d8737b-d4a3-4612-8248-e78fa39f5104",
                "ba0d4538-1e83-43fe-91fb-6553d6490823"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "994e6526-50ba-4e34-8ed2-3c6b21b3e133",
              "title": "oddsWithRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
              "file": "/spec/index.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "fullTitle": "Odds functions oddsWithRedraw returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.oddsWithRedraw(1, bag, effects, src_1.success(0));\nchai_1.expect(oddsOfSuccess).to.equal(0.5);",
                  "err": {},
                  "uuid": "186d63be-fe0c-41bb-9fb2-1d48106fe910",
                  "parentUUID": "994e6526-50ba-4e34-8ed2-3c6b21b3e133",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns 0.75 when pulling 2 tokens (putting back first token before second draw) if half the tokens results in a success",
                  "fullTitle": "Odds functions oddsWithRedraw returns 0.75 when pulling 2 tokens (putting back first token before second draw) if half the tokens results in a success",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.oddsWithRedraw(2, bag, effects, src_1.successChoosingBest(0));\nchai_1.expect(oddsOfSuccess).to.equal(0.75);",
                  "err": {},
                  "uuid": "4967dee5-3ab1-498a-a89e-4d7ad032410e",
                  "parentUUID": "994e6526-50ba-4e34-8ed2-3c6b21b3e133",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "186d63be-fe0c-41bb-9fb2-1d48106fe910",
                "4967dee5-3ab1-498a-a89e-4d7ad032410e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "39499129-9d81-4fb2-86d7-60b6392df301",
          "title": "Autofail",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
          "file": "/spec/tokens/Autofail.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c7d85af9-1cf5-42d9-85b1-d3d39ecee564",
              "title": "getOutcome",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
              "file": "/spec/tokens/Autofail.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "outcome is of type AUTOFAIL",
                  "fullTitle": "Autofail getOutcome outcome is of type AUTOFAIL",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autofail().getOutcome()).to.equal(src_1.TokenEffectType.AUTOFAIL);",
                  "err": {},
                  "uuid": "7fdbeb96-ad31-48d3-8498-e2598b76067c",
                  "parentUUID": "c7d85af9-1cf5-42d9-85b1-d3d39ecee564",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7fdbeb96-ad31-48d3-8498-e2598b76067c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ab873f94-eb32-4d5f-98cd-0bd852cc6723",
              "title": "isRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
              "file": "/spec/tokens/Autofail.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is not a redraw token",
                  "fullTitle": "Autofail isRedraw is not a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autofail().isRedraw()).to.equal(false);",
                  "err": {},
                  "uuid": "dc29f7b8-19f7-40f7-b068-499d2950f64b",
                  "parentUUID": "ab873f94-eb32-4d5f-98cd-0bd852cc6723",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc29f7b8-19f7-40f7-b068-499d2950f64b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d4450c3b-c15b-49f3-9752-dcb617d00ed2",
              "title": "sameAs",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
              "file": "/spec/tokens/Autofail.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when compared to another Auofail",
                  "fullTitle": "Autofail sameAs is true when compared to another Auofail",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Autofail(), new src_1.Autofail()], fail1 = _a[0], fail2 = _a[1];\nchai_1.expect(fail1.sameAs(fail2)).to.be.true;",
                  "err": {},
                  "uuid": "eb5beaae-4dda-4c02-bdef-14237f1b49f8",
                  "parentUUID": "d4450c3b-c15b-49f3-9752-dcb617d00ed2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when compared to another type of effect",
                  "fullTitle": "Autofail sameAs is false when compared to another type of effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var fail = new src_1.Autofail();\nchai_1.expect(fail.sameAs(new src_1.Modifier(-1))).to.be.false;\nchai_1.expect(fail.sameAs(new src_1.Autosuccess())).to.be.false;",
                  "err": {},
                  "uuid": "aa9ae705-5b94-427c-affb-5ab5607e451b",
                  "parentUUID": "d4450c3b-c15b-49f3-9752-dcb617d00ed2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eb5beaae-4dda-4c02-bdef-14237f1b49f8",
                "aa9ae705-5b94-427c-affb-5ab5607e451b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "871e443e-2964-466a-8ab8-db4fb1348212",
          "title": "Autofail",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
          "file": "/spec/tokens/Autosuccess.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7c8b833c-43e3-431b-a5d3-6a1d58ed86fe",
              "title": "getOutcome",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
              "file": "/spec/tokens/Autosuccess.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "outcome is of type AUTOSUCCESS",
                  "fullTitle": "Autofail getOutcome outcome is of type AUTOSUCCESS",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autosuccess().getOutcome()).to.equal(src_1.TokenEffectType.AUTOSUCCESS);",
                  "err": {},
                  "uuid": "4ba33801-bcf8-4f29-b440-c639bcf5608a",
                  "parentUUID": "7c8b833c-43e3-431b-a5d3-6a1d58ed86fe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4ba33801-bcf8-4f29-b440-c639bcf5608a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e8998630-9374-4dec-88e7-4fe6b0e9f8f4",
              "title": "isRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
              "file": "/spec/tokens/Autosuccess.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is not a redraw token",
                  "fullTitle": "Autofail isRedraw is not a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autosuccess().isRedraw()).to.equal(false);",
                  "err": {},
                  "uuid": "a89b3409-ff04-43b0-9ab7-22946cf952b1",
                  "parentUUID": "e8998630-9374-4dec-88e7-4fe6b0e9f8f4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a89b3409-ff04-43b0-9ab7-22946cf952b1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "882a4d3f-67a2-4c7f-98e2-f42c6d5c5e19",
              "title": "sameAs",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
              "file": "/spec/tokens/Autosuccess.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when compared to another Auofail",
                  "fullTitle": "Autofail sameAs is true when compared to another Auofail",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Autosuccess(), new src_1.Autosuccess()], succ1 = _a[0], succ2 = _a[1];\nchai_1.expect(succ1.sameAs(succ2)).to.be.true;",
                  "err": {},
                  "uuid": "deab8787-f6ce-4521-8ccd-1eaa6c244e1a",
                  "parentUUID": "882a4d3f-67a2-4c7f-98e2-f42c6d5c5e19",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when compared to another type of effect",
                  "fullTitle": "Autofail sameAs is false when compared to another type of effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var succ = new src_1.Autosuccess();\nchai_1.expect(succ.sameAs(new src_1.Modifier(-1))).to.be.false;\nchai_1.expect(succ.sameAs(new src_1.Autofail())).to.be.false;",
                  "err": {},
                  "uuid": "d32f2e79-0468-4b84-bd01-a851fba36b9f",
                  "parentUUID": "882a4d3f-67a2-4c7f-98e2-f42c6d5c5e19",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "deab8787-f6ce-4521-8ccd-1eaa6c244e1a",
                "d32f2e79-0468-4b84-bd01-a851fba36b9f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "73971fb1-ae02-4ab2-a1d6-8c43bc167892",
          "title": "Modifier",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
          "file": "/spec/tokens/Modifier.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "11747d7f-2eee-4ba0-98e7-24daaaaf9c52",
              "title": "getOutcome",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
              "file": "/spec/tokens/Modifier.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "outcome is of type MODIFIER",
                  "fullTitle": "Modifier getOutcome outcome is of type MODIFIER",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Modifier(0).getOutcome()).to.equal(src_1.TokenEffectType.MODIFIER);",
                  "err": {},
                  "uuid": "f0fc4854-6358-4105-b9aa-39d29d4e1f54",
                  "parentUUID": "11747d7f-2eee-4ba0-98e7-24daaaaf9c52",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f0fc4854-6358-4105-b9aa-39d29d4e1f54"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2779d408-af02-4198-8d8f-24f2efce6986",
              "title": "isRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
              "file": "/spec/tokens/Modifier.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if it is a redraw token",
                  "fullTitle": "Modifier isRedraw returns true if it is a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Modifier(0, true).isRedraw()).to.equal(true);",
                  "err": {},
                  "uuid": "bbf06cb8-e513-4ea4-ac06-affdf0899871",
                  "parentUUID": "2779d408-af02-4198-8d8f-24f2efce6986",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if it is not a redraw token",
                  "fullTitle": "Modifier isRedraw returns false if it is not a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Modifier(0).isRedraw()).to.equal(false);",
                  "err": {},
                  "uuid": "9aaad52c-1106-4ef8-95f3-1a7a9a25adac",
                  "parentUUID": "2779d408-af02-4198-8d8f-24f2efce6986",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bbf06cb8-e513-4ea4-ac06-affdf0899871",
                "9aaad52c-1106-4ef8-95f3-1a7a9a25adac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d577b28e-3f65-4341-bb1e-e71a183b59b6",
              "title": "sameAs",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
              "file": "/spec/tokens/Modifier.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when representing a modifier with same value and redraw effect",
                  "fullTitle": "Modifier sameAs is true when representing a modifier with same value and redraw effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Modifier(1), new src_1.Modifier(1)], mod1 = _a[0], mod2 = _a[1];\nchai_1.expect(mod1.sameAs(mod2)).to.be.true;",
                  "err": {},
                  "uuid": "7b35981f-5c2d-4c4c-bbeb-4ea336882d9b",
                  "parentUUID": "d577b28e-3f65-4341-bb1e-e71a183b59b6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when representing a modifier with different value",
                  "fullTitle": "Modifier sameAs is false when representing a modifier with different value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Modifier(1), new src_1.Modifier(2)], mod1 = _a[0], mod2 = _a[1];\nchai_1.expect(mod1.sameAs(mod2)).to.be.false;",
                  "err": {},
                  "uuid": "2ba5a948-1b37-445c-954f-10ed8a3cf425",
                  "parentUUID": "d577b28e-3f65-4341-bb1e-e71a183b59b6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when representing a modifier with same value but different redraw effect",
                  "fullTitle": "Modifier sameAs is false when representing a modifier with same value but different redraw effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Modifier(1), new src_1.Modifier(1, true)], mod1 = _a[0], mod2 = _a[1];\nchai_1.expect(mod1.sameAs(mod2)).to.be.false;",
                  "err": {},
                  "uuid": "32b735e3-fecf-45cd-b700-34fc6992bb21",
                  "parentUUID": "d577b28e-3f65-4341-bb1e-e71a183b59b6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when compared to another type of effect",
                  "fullTitle": "Modifier sameAs is false when compared to another type of effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mod1 = new src_1.Modifier(1);\nchai_1.expect(mod1.sameAs(new src_1.Autofail())).to.be.false;\nchai_1.expect(mod1.sameAs(new src_1.Autosuccess())).to.be.false;",
                  "err": {},
                  "uuid": "24711e0b-07c9-457f-a38c-83baeb13d0ce",
                  "parentUUID": "d577b28e-3f65-4341-bb1e-e71a183b59b6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b35981f-5c2d-4c4c-bbeb-4ea336882d9b",
                "2ba5a948-1b37-445c-954f-10ed8a3cf425",
                "32b735e3-fecf-45cd-b700-34fc6992bb21",
                "24711e0b-07c9-457f-a38c-83baeb13d0ce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5d0148ac-42d2-4820-81e7-e96e82a86f07",
          "title": "TokenEffects",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
          "file": "/spec/tokens/TokenEffects.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "can be created from mapping",
              "fullTitle": "TokenEffects can be created from mapping",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nchai_1.expect(effects.getEffect(src_1.Token.ELDER_SIGN)).to.exist;\nchai_1.expect(effects.getEffect(src_1.Token.AUTOFAIL)).to.not.exist;",
              "err": {},
              "uuid": "4bf76c77-5710-4fb3-867d-36d20935864a",
              "parentUUID": "5d0148ac-42d2-4820-81e7-e96e82a86f07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "is not affected by changes to provided mapping",
              "fullTitle": "TokenEffects is not affected by changes to provided mapping",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mapping = [\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n];\nvar effects = new src_1.TokenEffects(mapping);\nchai_1.expect(effects.getEffect(src_1.Token.AUTOFAIL)).to.not.exist;\nmapping.push([src_1.Token.AUTOFAIL, new src_1.Autofail()]);\nchai_1.expect(effects.getEffect(src_1.Token.AUTOFAIL)).to.not.exist;",
              "err": {},
              "uuid": "fd877dab-cdd8-4dc3-9643-39029aedb185",
              "parentUUID": "5d0148ac-42d2-4820-81e7-e96e82a86f07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can be created empty",
              "fullTitle": "TokenEffects can be created empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var effects = new src_1.TokenEffects();\nchai_1.expect(effects.getEffect(src_1.Token.ELDER_SIGN)).to.not.exist;",
              "err": {},
              "uuid": "84813a6b-d2f5-4821-bddb-bb46029cdf8b",
              "parentUUID": "5d0148ac-42d2-4820-81e7-e96e82a86f07",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "753c463e-4db1-459a-8fb6-2b3845a3350e",
              "title": "setEffect",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new TokenEffects",
                  "fullTitle": "TokenEffects setEffect should return a new TokenEffects",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffect(src_1.Token.CULTIST, new src_1.Autofail());\nchai_1.expect(modifiedEffects).to.not.equal(effects);",
                  "err": {},
                  "uuid": "37fcf3fd-2367-41ea-aff6-a66611919c01",
                  "parentUUID": "753c463e-4db1-459a-8fb6-2b3845a3350e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set the new effect",
                  "fullTitle": "TokenEffects setEffect should set the new effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffect(src_1.Token.CULTIST, new src_1.Autofail());\nchai_1.expect(modifiedEffects.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Autofail())).to\n    .be.true;",
                  "err": {},
                  "uuid": "8b10129e-5f6f-42f9-9385-c2dad516edb0",
                  "parentUUID": "753c463e-4db1-459a-8fb6-2b3845a3350e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should leave the original effects untouched",
                  "fullTitle": "TokenEffects setEffect should leave the original effects untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\neffects.setEffect(src_1.Token.CULTIST, new src_1.Autofail());\nchai_1.expect(effects.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Modifier(-2))).to.be\n    .true;",
                  "err": {},
                  "uuid": "b2ac3f5a-9d2f-4349-9298-de9948a1e25e",
                  "parentUUID": "753c463e-4db1-459a-8fb6-2b3845a3350e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "37fcf3fd-2367-41ea-aff6-a66611919c01",
                "8b10129e-5f6f-42f9-9385-c2dad516edb0",
                "b2ac3f5a-9d2f-4349-9298-de9948a1e25e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7e4f76d2-e30b-4e9f-9e2b-1894a874c4d2",
              "title": "setEffects",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new TokenEffects",
                  "fullTitle": "TokenEffects setEffects should return a new TokenEffects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffects([\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()]\n]);\nchai_1.expect(modifiedEffects).to.not.equal(effects);",
                  "err": {},
                  "uuid": "04b77fc7-1ed6-45e5-96e1-f96d825dd08b",
                  "parentUUID": "7e4f76d2-e30b-4e9f-9e2b-1894a874c4d2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set the new effects",
                  "fullTitle": "TokenEffects setEffects should set the new effects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffects([\n    [src_1.Token.TABLET, new src_1.Modifier(-3)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n]);\nchai_1.expect(modifiedEffects.getEffect(src_1.Token.TABLET).sameAs(new src_1.Modifier(-3)))\n    .to.be.true;\nchai_1.expect(modifiedEffects.getEffect(src_1.Token.ELDER_THING).sameAs(new src_1.Modifier(-4))).to.be.true;",
                  "err": {},
                  "uuid": "538494b5-aaee-44db-ba9c-4ad0bcc689f1",
                  "parentUUID": "7e4f76d2-e30b-4e9f-9e2b-1894a874c4d2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should leave the original effects untouched",
                  "fullTitle": "TokenEffects setEffects should leave the original effects untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\neffects.setEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-3)],\n    [src_1.Token.TABLET, new src_1.Modifier(-4)]\n]);\nchai_1.expect(effects.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Modifier(-2))).to.be\n    .true;",
                  "err": {},
                  "uuid": "ee815d4b-4c6d-4da1-ae8e-99ce5a3588d3",
                  "parentUUID": "7e4f76d2-e30b-4e9f-9e2b-1894a874c4d2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "04b77fc7-1ed6-45e5-96e1-f96d825dd08b",
                "538494b5-aaee-44db-ba9c-4ad0bcc689f1",
                "ee815d4b-4c6d-4da1-ae8e-99ce5a3588d3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a1e2a772-8e8d-4d42-a27a-af8c9bbdadc3",
              "title": "merge",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new TokenEffects",
                  "fullTitle": "TokenEffects merge should return a new TokenEffects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects1 = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar effects2 = new src_1.TokenEffects([\n    [src_1.Token.TABLET, new src_1.Modifier(-3)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n]);\nvar merged = effects1.merge(effects2);\nchai_1.expect(merged).to.not.equal(effects1);\nchai_1.expect(merged).to.not.equal(effects2);",
                  "err": {},
                  "uuid": "fba7c49e-190e-456f-a99f-b5909bc7f601",
                  "parentUUID": "a1e2a772-8e8d-4d42-a27a-af8c9bbdadc3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should merge effects",
                  "fullTitle": "TokenEffects merge should merge effects",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects1 = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar effects2 = new src_1.TokenEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-3)],\n    [src_1.Token.TABLET, new src_1.Modifier(-4)]\n]);\nvar merged = effects1.merge(effects2);\nchai_1.expect(merged.getEffect(src_1.Token.ELDER_SIGN).sameAs(new src_1.Modifier(1))).to.be\n    .true;\nchai_1.expect(merged.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Modifier(-3))).to.be\n    .true;\nchai_1.expect(merged.getEffect(src_1.Token.TABLET).sameAs(new src_1.Modifier(-4))).to.be\n    .true;",
                  "err": {},
                  "uuid": "9d26bfc1-0267-4a9a-b56f-48378c6c4529",
                  "parentUUID": "a1e2a772-8e8d-4d42-a27a-af8c9bbdadc3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fba7c49e-190e-456f-a99f-b5909bc7f601",
                "9d26bfc1-0267-4a9a-b56f-48378c6c4529"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "121a5bcb-f85c-4b9e-ae97-9a63eaf51dfc",
              "title": "isTokenAutoSuccess",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when token is autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoSuccess is true when token is autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Autosuccess()]]);\nchai_1.expect(effects.isTokenAutoSuccess(src_1.Token.ELDER_SIGN)).to.be.true;",
                  "err": {},
                  "uuid": "5bcb0600-9c82-4d77-be65-22a30da52a84",
                  "parentUUID": "121a5bcb-f85c-4b9e-ae97-9a63eaf51dfc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when token is not autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoSuccess is false when token is not autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Modifier(1)]]);\nchai_1.expect(effects.isTokenAutoSuccess(src_1.Token.ELDER_SIGN)).to.be.false;",
                  "err": {},
                  "uuid": "a0839aee-14c6-4fba-96a9-8605d766501b",
                  "parentUUID": "121a5bcb-f85c-4b9e-ae97-9a63eaf51dfc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5bcb0600-9c82-4d77-be65-22a30da52a84",
                "a0839aee-14c6-4fba-96a9-8605d766501b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6bfdc6c1-6972-41f2-8d59-ea4384257077",
              "title": "isTokenAutoFail",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when token is autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoFail is true when token is autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.AUTOFAIL, new src_1.Autofail()]]);\nchai_1.expect(effects.isTokenAutoFail(src_1.Token.AUTOFAIL)).to.be.true;",
                  "err": {},
                  "uuid": "7d4da837-e0b9-4c01-a325-ad3299153dd8",
                  "parentUUID": "6bfdc6c1-6972-41f2-8d59-ea4384257077",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when token is not autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoFail is false when token is not autosuccess",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Modifier(1)]]);\nchai_1.expect(effects.isTokenAutoFail(src_1.Token.ELDER_SIGN)).to.be.false;",
                  "err": {},
                  "uuid": "e21888af-3bc1-4139-b2ac-f64473e672da",
                  "parentUUID": "6bfdc6c1-6972-41f2-8d59-ea4384257077",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d4da837-e0b9-4c01-a325-ad3299153dd8",
                "e21888af-3bc1-4139-b2ac-f64473e672da"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "560132be-4116-426a-8542-86c44e3ff0b8",
              "title": "getTokenModifier",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns the token modifier if the token is a modifier token",
                  "fullTitle": "TokenEffects getTokenModifier returns the token modifier if the token is a modifier token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Modifier(2)]]);\nchai_1.expect(effects.getTokenModifier(src_1.Token.ELDER_SIGN)).to.equal(2);",
                  "err": {},
                  "uuid": "7f2a8fa4-644c-46d0-80d1-a2d82040e570",
                  "parentUUID": "560132be-4116-426a-8542-86c44e3ff0b8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns an error if the token effect is not a modifier token",
                  "fullTitle": "TokenEffects getTokenModifier returns an error if the token effect is not a modifier token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Autosuccess()]]);\nchai_1.expect(function () {\n    effects.getTokenModifier(src_1.Token.ELDER_SIGN);\n}).to.throw();",
                  "err": {},
                  "uuid": "40d28295-dd3f-4aa6-bed9-83ff92bd7ea8",
                  "parentUUID": "560132be-4116-426a-8542-86c44e3ff0b8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7f2a8fa4-644c-46d0-80d1-a2d82040e570",
                "40d28295-dd3f-4aa6-bed9-83ff92bd7ea8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "961886f9-ab86-4bf6-bd98-0c1ea61b8081",
              "title": "sortByBestOutcomeDesc",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Autosuccess comes first",
                  "fullTitle": "TokenEffects sortByBestOutcomeDesc Autosuccess comes first",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Autosuccess()],\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)]\n]);\nvar tokens = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ELDER_SIGN,\n    src_1.Token.PLUS_ONE\n];\nchai_1.expect(effects.sortByBestOutcomeDesc(tokens)[0]).to.equal(src_1.Token.ELDER_SIGN);",
                  "err": {},
                  "uuid": "7591461e-70a4-45c2-af69-6bd4350445ea",
                  "parentUUID": "961886f9-ab86-4bf6-bd98-0c1ea61b8081",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Autofail comes last",
                  "fullTitle": "TokenEffects sortByBestOutcomeDesc Autofail comes last",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()]\n]);\nvar tokens = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.AUTOFAIL,\n    src_1.Token.PLUS_ONE\n];\nchai_1.expect(effects.sortByBestOutcomeDesc(tokens)[tokens.length - 1]).to.equal(src_1.Token.AUTOFAIL);",
                  "err": {},
                  "uuid": "697720db-f4c7-43bd-8eb4-55348d5cd698",
                  "parentUUID": "961886f9-ab86-4bf6-bd98-0c1ea61b8081",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Modifier tokens are sorted by their modifier value from highest to lowest",
                  "fullTitle": "TokenEffects sortByBestOutcomeDesc Modifier tokens are sorted by their modifier value from highest to lowest",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.MINUS_FIVE, new src_1.Modifier(-5)]\n]);\nvar tokens = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_FIVE,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_TWO\n];\nvar sorted = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.MINUS_FIVE\n];\nchai_1.expect(effects.sortByBestOutcomeDesc(tokens)).to.deep.equal(sorted);",
                  "err": {},
                  "uuid": "31b40a6d-513a-4da1-a5c6-c755cf08952d",
                  "parentUUID": "961886f9-ab86-4bf6-bd98-0c1ea61b8081",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7591461e-70a4-45c2-af69-6bd4350445ea",
                "697720db-f4c7-43bd-8eb4-55348d5cd698",
                "31b40a6d-513a-4da1-a5c6-c755cf08952d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4b091024-df5f-4db5-8be0-afa9fe725a5f",
              "title": "isSuccess",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "TokenEffects isSuccess \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sharedEffects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Autosuccess()],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()]\n]);",
                  "err": {},
                  "uuid": "dff3ccdf-3791-43b9-a71c-1787cc03167d",
                  "parentUUID": "4b091024-df5f-4db5-8be0-afa9fe725a5f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "0b7938dd-b6b0-4777-af5c-31c83b872fd8",
                  "title": "with a single token",
                  "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
                  "file": "/spec/tokens/TokenEffects.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns true whatever the difficulty if the token is an autosuccess",
                      "fullTitle": "TokenEffects isSuccess with a single token returns true whatever the difficulty if the token is an autosuccess",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN], 3)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN], -3)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN], -20)).to.be.true;",
                      "err": {},
                      "uuid": "e804be6c-1a29-4126-8fd7-617983bec109",
                      "parentUUID": "0b7938dd-b6b0-4777-af5c-31c83b872fd8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false whatever the difficulty if the token is an autofail",
                      "fullTitle": "TokenEffects isSuccess with a single token returns false whatever the difficulty if the token is an autofail",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL], 3)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL], -3)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL], -20)).to.be.false;",
                      "err": {},
                      "uuid": "7361b3d1-7876-4637-9655-a1a5f94b6245",
                      "parentUUID": "0b7938dd-b6b0-4777-af5c-31c83b872fd8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns true if the sum of (skill - difficulty) and modifier value is greater than or equal to 0",
                      "fullTitle": "TokenEffects isSuccess with a single token returns true if the sum of (skill - difficulty) and modifier value is greater than or equal to 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], 3)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], 1)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_TWO], 2)).to.be.true;",
                      "err": {},
                      "uuid": "f20c54ac-d170-440a-af48-6d3ee6f26b89",
                      "parentUUID": "0b7938dd-b6b0-4777-af5c-31c83b872fd8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false if the sum of (skill - difficulty) and modifier value is lesser than 0",
                      "fullTitle": "TokenEffects isSuccess with a single token returns false if the sum of (skill - difficulty) and modifier value is lesser than 0",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], -3)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], 0)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_TWO], 1)).to.be.false;",
                      "err": {},
                      "uuid": "aacae133-3ed2-4479-8189-cf0dbf12a546",
                      "parentUUID": "0b7938dd-b6b0-4777-af5c-31c83b872fd8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e804be6c-1a29-4126-8fd7-617983bec109",
                    "7361b3d1-7876-4637-9655-a1a5f94b6245",
                    "f20c54ac-d170-440a-af48-6d3ee6f26b89",
                    "aacae133-3ed2-4479-8189-cf0dbf12a546"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "8158fbe6-8d6b-4684-9385-871ac220df7c",
                  "title": "with multiple tokens",
                  "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
                  "file": "/spec/tokens/TokenEffects.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns true when 1 of the tokens is an autosuccess and there are no autofail",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns true when 1 of the tokens is an autosuccess and there are no autofail",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_TWO], -8))\n    .to.be.true;",
                      "err": {},
                      "uuid": "969cf7c0-09fd-4491-8076-cd4df3c6c5d5",
                      "parentUUID": "8158fbe6-8d6b-4684-9385-871ac220df7c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns true when 1 of the tokens is an autofail",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns true when 1 of the tokens is an autofail",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL, src_1.Token.MINUS_TWO], 10))\n    .to.be.false;",
                      "err": {},
                      "uuid": "9cafd7e1-725c-435b-bb5e-0a7984331799",
                      "parentUUID": "8158fbe6-8d6b-4684-9385-871ac220df7c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false when there are both an autosuccess and an autofail among the tokens",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns false when there are both an autosuccess and an autofail among the tokens",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_TWO, src_1.Token.AUTOFAIL], 10)).to.be.false;",
                      "err": {},
                      "uuid": "27ed0071-f662-4582-97b5-38a8196a6893",
                      "parentUUID": "8158fbe6-8d6b-4684-9385-871ac220df7c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns true if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns true if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], 6)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.MINUS_ONE], 4)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_TWO, src_1.Token.MINUS_TWO, src_1.Token.MINUS_TWO], 6)).to.be.true;",
                      "err": {},
                      "uuid": "feaa5961-900c-42fc-b80a-35261eeaa6d7",
                      "parentUUID": "8158fbe6-8d6b-4684-9385-871ac220df7c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns false if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], 0)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], 2)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], 3)).to.be.false;",
                      "err": {},
                      "uuid": "9665f680-64ce-41db-96e6-52fc91273108",
                      "parentUUID": "8158fbe6-8d6b-4684-9385-871ac220df7c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "969cf7c0-09fd-4491-8076-cd4df3c6c5d5",
                    "9cafd7e1-725c-435b-bb5e-0a7984331799",
                    "27ed0071-f662-4582-97b5-38a8196a6893",
                    "feaa5961-900c-42fc-b80a-35261eeaa6d7",
                    "9665f680-64ce-41db-96e6-52fc91273108"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "eba47085-598e-441b-a34b-ff3b82d70452",
              "title": "separateRedrawTokens",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "separates redraw tokens from non-redraw tokens",
                  "fullTitle": "TokenEffects separateRedrawTokens separates redraw tokens from non-redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);\nvar _a = effects.separateRedrawTokens([\n    src_1.Token.ZERO,\n    src_1.Token.BLESS,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.CURSE,\n    src_1.Token.ZERO\n]), nonRedrawTokens = _a.nonRedrawTokens, redrawTokens = _a.redrawTokens;\nchai_1.expect(nonRedrawTokens).to.deep.equal([\n    src_1.Token.ZERO,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.ZERO\n]);\nchai_1.expect(redrawTokens).to.deep.equal([src_1.Token.BLESS, src_1.Token.CURSE]);",
                  "err": {},
                  "uuid": "2029a390-4e65-4f82-bedc-bbde45507bfc",
                  "parentUUID": "eba47085-598e-441b-a34b-ff3b82d70452",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "separates redraw tokens from non-redraw tokens when there are no redraw tokens",
                  "fullTitle": "TokenEffects separateRedrawTokens separates redraw tokens from non-redraw tokens when there are no redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);\nvar _a = effects.separateRedrawTokens([\n    src_1.Token.ZERO,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.ZERO\n]), nonRedrawTokens = _a.nonRedrawTokens, redrawTokens = _a.redrawTokens;\nchai_1.expect(nonRedrawTokens).to.deep.equal([\n    src_1.Token.ZERO,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.ZERO\n]);\nchai_1.expect(redrawTokens).to.deep.equal([]);",
                  "err": {},
                  "uuid": "0187e240-1034-440e-8883-15e3dccae24f",
                  "parentUUID": "eba47085-598e-441b-a34b-ff3b82d70452",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "separates redraw tokens from non-redraw tokens when there are no non-redraw tokens",
                  "fullTitle": "TokenEffects separateRedrawTokens separates redraw tokens from non-redraw tokens when there are no non-redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);\nvar _a = effects.separateRedrawTokens([\n    src_1.Token.BLESS,\n    src_1.Token.CURSE\n]), nonRedrawTokens = _a.nonRedrawTokens, redrawTokens = _a.redrawTokens;\nchai_1.expect(nonRedrawTokens).to.deep.equal([]);\nchai_1.expect(redrawTokens).to.deep.equal([src_1.Token.BLESS, src_1.Token.CURSE]);",
                  "err": {},
                  "uuid": "02f72e09-aacd-4ebf-b429-0c1fe51c7eee",
                  "parentUUID": "eba47085-598e-441b-a34b-ff3b82d70452",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "leaves the original token array untouched",
                  "fullTitle": "TokenEffects separateRedrawTokens leaves the original token array untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)]\n]);\nvar tokens = [src_1.Token.BLESS, src_1.Token.PLUS_ONE];\neffects.separateRedrawTokens(tokens);\nchai_1.expect(tokens).to.deep.equal([src_1.Token.BLESS, src_1.Token.PLUS_ONE]);",
                  "err": {},
                  "uuid": "55a9acf2-69cc-4710-9503-fcd9dbea65a0",
                  "parentUUID": "eba47085-598e-441b-a34b-ff3b82d70452",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2029a390-4e65-4f82-bedc-bbde45507bfc",
                "0187e240-1034-440e-8883-15e3dccae24f",
                "02f72e09-aacd-4ebf-b429-0c1fe51c7eee",
                "55a9acf2-69cc-4710-9503-fcd9dbea65a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "4bf76c77-5710-4fb3-867d-36d20935864a",
            "fd877dab-cdd8-4dc3-9643-39029aedb185",
            "84813a6b-d2f5-4821-bddb-bb46029cdf8b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7e018d46-a266-43eb-ac91-9353b49afbc6",
          "title": "utils",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
          "file": "/spec/utils.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "63fdbfce-8e62-4e8d-8886-cae22a6ba83a",
              "title": "removeFirst",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should remove the first occurrence",
                  "fullTitle": "utils removeFirst should remove the first occurrence",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar removed = utils.removeFirst(arr, 2);\nchai_1.expect(removed).to.deep.equal([1, 3]);",
                  "err": {},
                  "uuid": "db4d5702-37e1-4360-9820-ce8f9b557ed6",
                  "parentUUID": "63fdbfce-8e62-4e8d-8886-cae22a6ba83a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not remove other occurrences",
                  "fullTitle": "utils removeFirst should not remove other occurrences",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 2, 2, 3];\nvar removed = utils.removeFirst(arr, 2);\nchai_1.expect(removed).to.deep.equal([1, 2, 2, 3]);",
                  "err": {},
                  "uuid": "cc78e3f1-8e6b-4f8c-832c-60db0cb7f473",
                  "parentUUID": "63fdbfce-8e62-4e8d-8886-cae22a6ba83a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not modify the original array",
                  "fullTitle": "utils removeFirst should not modify the original array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nutils.removeFirst(arr, 2);\nchai_1.expect(arr).to.deep.equal([1, 2, 3]);",
                  "err": {},
                  "uuid": "1e007160-1dc9-4e3a-ae13-d399f19301d7",
                  "parentUUID": "63fdbfce-8e62-4e8d-8886-cae22a6ba83a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should do nothing if the array does not contain the element",
                  "fullTitle": "utils removeFirst should do nothing if the array does not contain the element",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar removed = utils.removeFirst(arr, 4);\nchai_1.expect(arr).to.deep.equal([1, 2, 3]);\nchai_1.expect(removed).to.deep.equal([1, 2, 3]);\nchai_1.expect(arr).to.not.equal(removed);",
                  "err": {},
                  "uuid": "91132560-4aac-4e5f-bb7a-c7e154f02175",
                  "parentUUID": "63fdbfce-8e62-4e8d-8886-cae22a6ba83a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "db4d5702-37e1-4360-9820-ce8f9b557ed6",
                "cc78e3f1-8e6b-4f8c-832c-60db0cb7f473",
                "1e007160-1dc9-4e3a-ae13-d399f19301d7",
                "91132560-4aac-4e5f-bb7a-c7e154f02175"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "111764e8-dfc1-4e2a-bb73-e1b58a29e0d5",
              "title": "flatten",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "flattens an array",
                  "fullTitle": "utils flatten flattens an array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.flatten([[], [1], [2]])).to.deep.equal([1, 2]);",
                  "err": {},
                  "uuid": "fdad9fac-e18d-4b65-9808-1f108a347830",
                  "parentUUID": "111764e8-dfc1-4e2a-bb73-e1b58a29e0d5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fdad9fac-e18d-4b65-9808-1f108a347830"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "14ace574-fb67-4971-81d9-d88f54b23958",
              "title": "combinations",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an empty array if K > N",
                  "fullTitle": "utils combinations should return an empty array if K > N",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar comb = utils.combinations(4, arr);\nchai_1.expect(comb).to.deep.equals([]);",
                  "err": {},
                  "uuid": "2973fe7a-2d7e-4979-9d70-c9d0b0a2b80f",
                  "parentUUID": "14ace574-fb67-4971-81d9-d88f54b23958",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return [[]] if K <= 0",
                  "fullTitle": "utils combinations should return [[]] if K <= 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nchai_1.expect(utils.combinations(0, arr)).to.deep.equals([[]]);\nchai_1.expect(utils.combinations(-5, arr)).to.deep.equals([[]]);",
                  "err": {},
                  "uuid": "e4f860cf-124c-4a4a-a422-d9ef109952af",
                  "parentUUID": "14ace574-fb67-4971-81d9-d88f54b23958",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the combinations",
                  "fullTitle": "utils combinations should return the combinations",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar expected = [\n    [1, 2],\n    [1, 3],\n    [2, 3]\n];\nchai_1.expect(utils.combinations(2, arr)).to.deep.equals(expected);",
                  "err": {},
                  "uuid": "901fca76-9d60-43e0-b143-faaa3e2cc89f",
                  "parentUUID": "14ace574-fb67-4971-81d9-d88f54b23958",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2973fe7a-2d7e-4979-9d70-c9d0b0a2b80f",
                "e4f860cf-124c-4a4a-a422-d9ef109952af",
                "901fca76-9d60-43e0-b143-faaa3e2cc89f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "40ef0e53-9134-438e-a47d-70dc19576a2e",
              "title": "allCombinations",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return [[]] if provided an empty array of elements",
                  "fullTitle": "utils allCombinations should return [[]] if provided an empty array of elements",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var allComb = utils.allCombinations([]);\nchai_1.expect(allComb).to.deep.equals([[]]);",
                  "err": {},
                  "uuid": "47f8d8d9-91c3-47ec-88d4-5514972205b6",
                  "parentUUID": "40ef0e53-9134-438e-a47d-70dc19576a2e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return all combinations of provided elements including empty and full sets",
                  "fullTitle": "utils allCombinations should return all combinations of provided elements including empty and full sets",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar expected = [[], [1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3]];\nvar allComb = utils.allCombinations(arr);\nchai_1.expect(allComb).to.deep.equals(expected);",
                  "err": {},
                  "uuid": "e3b5368f-ad57-4c15-a7ab-d6efd44010f3",
                  "parentUUID": "40ef0e53-9134-438e-a47d-70dc19576a2e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "47f8d8d9-91c3-47ec-88d4-5514972205b6",
                "e3b5368f-ad57-4c15-a7ab-d6efd44010f3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "dcf11c2f-3e31-4bf9-847f-314ce994bf74",
              "title": "cartesianProduct",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should compute cartesian product of 2 arrays",
                  "fullTitle": "utils cartesianProduct should compute cartesian product of 2 arrays",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr1 = [1, 2];\nvar arr2 = [3, 4];\nvar expected = [\n    [1, 3],\n    [1, 4],\n    [2, 3],\n    [2, 4]\n];\nchai_1.expect(utils.cartesianProduct(arr1, arr2)).to.deep.equals(expected);",
                  "err": {},
                  "uuid": "a1388aa7-a414-4f2b-a140-fadeeff213c5",
                  "parentUUID": "dcf11c2f-3e31-4bf9-847f-314ce994bf74",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a1388aa7-a414-4f2b-a140-fadeeff213c5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6b2b7ae2-38e0-478e-81b5-bae9b7e94ea8",
              "title": "factorial",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns 1 for 0!",
                  "fullTitle": "utils factorial returns 1 for 0!",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.factorial(0)).to.equal(1);",
                  "err": {},
                  "uuid": "d9a0a01b-6284-4d51-9e5d-7f3758ba824d",
                  "parentUUID": "6b2b7ae2-38e0-478e-81b5-bae9b7e94ea8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns 6 for 3!",
                  "fullTitle": "utils factorial returns 6 for 3!",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.factorial(3)).to.equal(6);",
                  "err": {},
                  "uuid": "3d28c39f-7014-42d4-9039-fe1f8976099e",
                  "parentUUID": "6b2b7ae2-38e0-478e-81b5-bae9b7e94ea8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d9a0a01b-6284-4d51-9e5d-7f3758ba824d",
                "3d28c39f-7014-42d4-9039-fe1f8976099e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "reports/tests",
        "reportFilename": "index"
      },
      "version": "4.1.0"
    }
  }
}