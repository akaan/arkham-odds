{
  "stats": {
    "suites": 51,
    "tests": 130,
    "passes": 130,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-15T14:01:16.412Z",
    "end": "2020-05-15T14:01:16.477Z",
    "duration": 65,
    "testsRegistered": 130,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9e8be3d4-9675-4f1c-a549-e5bf6a76e964",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "802be998-6061-4718-b2ad-e87e541fa95a",
          "title": "Bag",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
          "file": "/spec/bag/Bag.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not be affected by changes to the passed array of tokens",
              "fullTitle": "Bag should not be affected by changes to the passed array of tokens",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var someTokens = [tokens_1.Token.ZERO, tokens_1.Token.MINUS_ONE];\nvar bag = new bag_1.Bag(someTokens);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ZERO, tokens_1.Token.MINUS_ONE]);\nsomeTokens.push(tokens_1.Token.AUTOFAIL);\nchai_1.expect(someTokens).to.deep.equal([\n    tokens_1.Token.ZERO,\n    tokens_1.Token.MINUS_ONE,\n    tokens_1.Token.AUTOFAIL\n]);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ZERO, tokens_1.Token.MINUS_ONE]);",
              "err": {},
              "uuid": "f3e00f0f-7579-432f-a4f3-9f1b83b22621",
              "parentUUID": "802be998-6061-4718-b2ad-e87e541fa95a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "f5354238-8f8e-4b4f-9150-3dea59b063a2",
              "title": "getTokens",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
              "file": "/spec/bag/Bag.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "modifications to the returned array should not affect the Bag",
                  "fullTitle": "Bag getTokens modifications to the returned array should not affect the Bag",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nvar tokens = bag.getTokens();\ntokens.push(tokens_1.Token.TABLET);\nchai_1.expect(tokens).to.deep.equal([\n    tokens_1.Token.ELDER_SIGN,\n    tokens_1.Token.AUTOFAIL,\n    tokens_1.Token.TABLET\n]);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);",
                  "err": {},
                  "uuid": "bc20d95e-261f-44cd-8faf-8f1b5cddc1f3",
                  "parentUUID": "f5354238-8f8e-4b4f-9150-3dea59b063a2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bc20d95e-261f-44cd-8faf-8f1b5cddc1f3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "47336b79-9725-4882-818e-efc84703eb0c",
              "title": "addTokens",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
              "file": "/spec/bag/Bag.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new Bag",
                  "fullTitle": "Bag addTokens should return a new Bag",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN]);\nvar added = bag.addTokens([tokens_1.Token.AUTOFAIL]);\nchai_1.expect(added).not.to.equal(bag);",
                  "err": {},
                  "uuid": "ab863921-ecfd-46e5-8d7d-72c31036b0aa",
                  "parentUUID": "47336b79-9725-4882-818e-efc84703eb0c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add the tokens",
                  "fullTitle": "Bag addTokens should add the tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN]);\nvar added = bag.addTokens([tokens_1.Token.AUTOFAIL, tokens_1.Token.TABLET]);\nchai_1.expect(added.getTokens()).to.deep.equal([\n    tokens_1.Token.ELDER_SIGN,\n    tokens_1.Token.AUTOFAIL,\n    tokens_1.Token.TABLET\n]);",
                  "err": {},
                  "uuid": "8da12cc8-69f4-46fe-b1fc-abbe66cd5e18",
                  "parentUUID": "47336b79-9725-4882-818e-efc84703eb0c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should leave the original Bag untouched",
                  "fullTitle": "Bag addTokens should leave the original Bag untouched",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN]);\nbag.addTokens([tokens_1.Token.AUTOFAIL]);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN]);",
                  "err": {},
                  "uuid": "7352e0e6-40de-4c1e-8b40-3639debc3ba5",
                  "parentUUID": "47336b79-9725-4882-818e-efc84703eb0c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ab863921-ecfd-46e5-8d7d-72c31036b0aa",
                "8da12cc8-69f4-46fe-b1fc-abbe66cd5e18",
                "7352e0e6-40de-4c1e-8b40-3639debc3ba5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f25c7318-b56d-477c-a1d1-40d573b3e6df",
              "title": "removeToken",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/bag/Bag.spec.ts",
              "file": "/spec/bag/Bag.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new Bag",
                  "fullTitle": "Bag removeToken should return a new Bag",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nvar removed = bag.removeToken(tokens_1.Token.AUTOFAIL);\nchai_1.expect(removed).not.to.equal(bag);",
                  "err": {},
                  "uuid": "40555b83-8a9d-412e-b880-dc67469f6e44",
                  "parentUUID": "f25c7318-b56d-477c-a1d1-40d573b3e6df",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should remove the token",
                  "fullTitle": "Bag removeToken should remove the token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nvar removed = bag.removeToken(tokens_1.Token.AUTOFAIL);\nchai_1.expect(removed.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN]);",
                  "err": {},
                  "uuid": "f1ee75be-350b-45ab-b9db-d06f9c660ced",
                  "parentUUID": "f25c7318-b56d-477c-a1d1-40d573b3e6df",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should the original Bag untouched",
                  "fullTitle": "Bag removeToken should the original Bag untouched",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new bag_1.Bag([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);\nbag.removeToken(tokens_1.Token.AUTOFAIL);\nchai_1.expect(bag.getTokens()).to.deep.equal([tokens_1.Token.ELDER_SIGN, tokens_1.Token.AUTOFAIL]);",
                  "err": {},
                  "uuid": "302eb016-6c5f-4bd1-a47f-a3854feaa733",
                  "parentUUID": "f25c7318-b56d-477c-a1d1-40d573b3e6df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "40555b83-8a9d-412e-b880-dc67469f6e44",
                "f1ee75be-350b-45ab-b9db-d06f9c660ced",
                "302eb016-6c5f-4bd1-a47f-a3854feaa733"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "f3e00f0f-7579-432f-a4f3-9f1b83b22621"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5e3fca1e-54aa-4386-9fc4-6262139692d6",
          "title": "cards",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
          "file": "/spec/cards.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "cards \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.MINUS_FOUR, new src_1.Modifier(-4)],\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);",
              "err": {},
              "uuid": "a7f24029-5601-4437-a540-6209dd76ede8",
              "parentUUID": "5e3fca1e-54aa-4386-9fc4-6262139692d6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "281b4747-6f2b-4fbf-80e4-9cd5269dae27",
              "title": "success",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards success returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.success(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "7f7b924d-ec41-48fe-9818-6de9c98055f9",
                  "parentUUID": "281b4747-6f2b-4fbf-80e4-9cd5269dae27",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returned function determine success resolving all pulled tokens",
                  "fullTitle": "cards success returned function determine success resolving all pulled tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.success(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be\n    .false;\nchai_1.expect(src_1.success(3)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be\n    .true;",
                  "err": {},
                  "uuid": "1da5403a-cb51-4472-9831-59d608a681e3",
                  "parentUUID": "281b4747-6f2b-4fbf-80e4-9cd5269dae27",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7f7b924d-ec41-48fe-9818-6de9c98055f9",
                "1da5403a-cb51-4472-9831-59d608a681e3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "729b7b43-8757-425e-8da2-b3468105fca7",
              "title": "successChoosingBest",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards successChoosingBest returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.successChoosingBest(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "47327c45-0aa0-4487-8da5-23e5ff190c4a",
                  "parentUUID": "729b7b43-8757-425e-8da2-b3468105fca7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty when applying the best token",
                  "fullTitle": "cards successChoosingBest returns true if greater than difficulty when applying the best token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.successChoosingBest(1)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be.true;",
                  "err": {},
                  "uuid": "d317792a-d4ce-49b8-bad4-e1316a369833",
                  "parentUUID": "729b7b43-8757-425e-8da2-b3468105fca7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty when applying the best token",
                  "fullTitle": "cards successChoosingBest returns false if lesser than difficulty when applying the best token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.successChoosingBest(0)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "61a08e64-4347-4226-8d70-7f56cadb2a5f",
                  "parentUUID": "729b7b43-8757-425e-8da2-b3468105fca7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should assume that redraw tokens where pulled",
                  "fullTitle": "cards successChoosingBest should assume that redraw tokens where pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.successChoosingBest(0)([src_1.Token.AUTOFAIL, src_1.Token.MINUS_FOUR, src_1.Token.BLESS], effects)).to.be.false;",
                  "err": {},
                  "uuid": "2cfd268a-6c55-4d34-8495-0f0760a907bd",
                  "parentUUID": "729b7b43-8757-425e-8da2-b3468105fca7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "47327c45-0aa0-4487-8da5-23e5ff190c4a",
                "d317792a-d4ce-49b8-bad4-e1316a369833",
                "61a08e64-4347-4226-8d70-7f56cadb2a5f",
                "2cfd268a-6c55-4d34-8495-0f0760a907bd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e90da7ec-c583-4d6d-b553-2b81aa1f1a75",
              "title": "oliveMcBride",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBride returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBride(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "6ef83f2f-79f6-40ac-9414-9491295dff9b",
                  "parentUUID": "e90da7ec-c583-4d6d-b553-2b81aa1f1a75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if higher than difficulty with the 2 best tokens",
                  "fullTitle": "cards oliveMcBride returns true if higher than difficulty with the 2 best tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBride(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.true;",
                  "err": {},
                  "uuid": "0a335f09-b25e-4c51-94a5-561ceff86b84",
                  "parentUUID": "e90da7ec-c583-4d6d-b553-2b81aa1f1a75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty with the 2 best tokens",
                  "fullTitle": "cards oliveMcBride returns false if lesser than difficulty with the 2 best tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBride(0)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.false;",
                  "err": {},
                  "uuid": "653279d9-c063-42f7-af67-4a5c28a64f0f",
                  "parentUUID": "e90da7ec-c583-4d6d-b553-2b81aa1f1a75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should assume that redraw tokens where pulled",
                  "fullTitle": "cards oliveMcBride should assume that redraw tokens where pulled",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBride(-2)([src_1.Token.AUTOFAIL, src_1.Token.MINUS_FOUR, src_1.Token.BLESS, src_1.Token.ZERO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "6e36af28-4122-4617-b1e4-b30a06c2e082",
                  "parentUUID": "e90da7ec-c583-4d6d-b553-2b81aa1f1a75",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6ef83f2f-79f6-40ac-9414-9491295dff9b",
                "0a335f09-b25e-4c51-94a5-561ceff86b84",
                "653279d9-c063-42f7-af67-4a5c28a64f0f",
                "6e36af28-4122-4617-b1e4-b30a06c2e082"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a115e61e-2a4b-4532-bf74-6def41cfcadb",
              "title": "oliveMcBrideWithSkull",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBrideWithSkull returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBrideWithSkull(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "e86514fd-65da-4ec7-a7bd-d8d4b919dfe2",
                  "parentUUID": "a115e61e-2a4b-4532-bf74-6def41cfcadb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if there is no Skull token in the tokens pulled",
                  "fullTitle": "cards oliveMcBrideWithSkull returns false if there is no Skull token in the tokens pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(0)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "af3cd1e5-bbe7-43d8-9310-0ad304af9b76",
                  "parentUUID": "a115e61e-2a4b-4532-bf74-6def41cfcadb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not modify the combination",
                  "fullTitle": "cards oliveMcBrideWithSkull should not modify the combination",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var myComb = [src_1.Token.SKULL, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO];\nsrc_1.oliveMcBrideWithSkull(2)(myComb, effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-1)]])));\nchai_1.expect(myComb).to.deep.equal([\n    src_1.Token.SKULL,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO\n]);",
                  "err": {},
                  "uuid": "78dfebc8-e1cf-47b6-a83c-b9e63813c8be",
                  "parentUUID": "a115e61e-2a4b-4532-bf74-6def41cfcadb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if there is a Skull token in the tokens pulled and if adding best of remaining tokens is still higher than difficulty",
                  "fullTitle": "cards oliveMcBrideWithSkull returns true if there is a Skull token in the tokens pulled and if adding best of remaining tokens is still higher than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(2)([src_1.Token.SKULL, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-1)]])))).to.be.true;",
                  "err": {},
                  "uuid": "deaa2142-8b65-4fce-a882-07509c77ea19",
                  "parentUUID": "a115e61e-2a4b-4532-bf74-6def41cfcadb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if there is a Skull token in the tokens pulled and if adding best of remaining tokens is lesser than difficulty",
                  "fullTitle": "cards oliveMcBrideWithSkull returns false if there is a Skull token in the tokens pulled and if adding best of remaining tokens is lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(1)([src_1.Token.SKULL, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-1)]])))).to.be.false;",
                  "err": {},
                  "uuid": "c5c0e0f7-09e1-4d62-a8a5-9fe9dfef6953",
                  "parentUUID": "a115e61e-2a4b-4532-bf74-6def41cfcadb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should assume that redraw tokens where pulled",
                  "fullTitle": "cards oliveMcBrideWithSkull should assume that redraw tokens where pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideWithSkull(3)([src_1.Token.AUTOFAIL, src_1.Token.SKULL, src_1.Token.BLESS, src_1.Token.MINUS_TWO], effects.merge(new src_1.TokenEffects([[src_1.Token.SKULL, new src_1.Modifier(-4)]])))).to.be.false;",
                  "err": {},
                  "uuid": "426fae58-5c28-4053-b6f0-b695b0aaf2ae",
                  "parentUUID": "a115e61e-2a4b-4532-bf74-6def41cfcadb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e86514fd-65da-4ec7-a7bd-d8d4b919dfe2",
                "af3cd1e5-bbe7-43d8-9310-0ad304af9b76",
                "78dfebc8-e1cf-47b6-a83c-b9e63813c8be",
                "deaa2142-8b65-4fce-a882-07509c77ea19",
                "c5c0e0f7-09e1-4d62-a8a5-9fe9dfef6953",
                "426fae58-5c28-4053-b6f0-b695b0aaf2ae"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "012c3225-19fe-4475-a20e-7fa8b3878877",
              "title": "recallTheFuture",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards recallTheFuture returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.recallTheFuture(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "361f8c74-672f-47c1-ba56-24d117af668b",
                  "parentUUID": "012c3225-19fe-4475-a20e-7fa8b3878877",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty",
                  "fullTitle": "cards recallTheFuture returns true if greater than difficulty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(0)([src_1.Token.ZERO], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.true;",
                  "err": {},
                  "uuid": "1b565351-13b9-4045-af17-c974e4c3cca5",
                  "parentUUID": "012c3225-19fe-4475-a20e-7fa8b3878877",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if lesser than difficulty but drew the token which has the most chances to be turned into success using the +2 bonus",
                  "fullTitle": "cards recallTheFuture returns true if lesser than difficulty but drew the token which has the most chances to be turned into success using the +2 bonus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.MINUS_ONE], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.true;",
                  "err": {},
                  "uuid": "3af33a8e-c390-4eb8-9d88-f3d6e003e777",
                  "parentUUID": "012c3225-19fe-4475-a20e-7fa8b3878877",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty and did not drew the token which has the most chances to be turned into success using the +2 bonus",
                  "fullTitle": "cards recallTheFuture returns false if lesser than difficulty and did not drew the token which has the most chances to be turned into success using the +2 bonus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.ZERO], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.false;",
                  "err": {},
                  "uuid": "68306885-c9b0-4dc9-a4fb-f5eb24539b9b",
                  "parentUUID": "012c3225-19fe-4475-a20e-7fa8b3878877",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if still lesser than difficulty applying the +2 bonus",
                  "fullTitle": "cards recallTheFuture returns false if still lesser than difficulty applying the +2 bonus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-2)([src_1.Token.MINUS_ONE], effects, new src_1.Bag([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE]))).to.be.false;",
                  "err": {},
                  "uuid": "5ec2b97c-36bf-41e2-9fff-dbe9f1462343",
                  "parentUUID": "012c3225-19fe-4475-a20e-7fa8b3878877",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can handle the case where several tokens where drawn",
                  "fullTitle": "cards recallTheFuture can handle the case where several tokens where drawn",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE], effects, new src_1.Bag([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO\n]))).to.be.true;",
                  "err": {},
                  "uuid": "99089869-80d2-46c3-837d-74679471e62b",
                  "parentUUID": "012c3225-19fe-4475-a20e-7fa8b3878877",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can handle redraw tokens",
                  "fullTitle": "cards recallTheFuture can handle redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.recallTheFuture(-1)([src_1.Token.MINUS_ONE, src_1.Token.CURSE], effects, new src_1.Bag([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.CURSE\n]))).to.be.false;",
                  "err": {},
                  "uuid": "a342cb98-6bf2-43b0-a8f7-c17f671ee314",
                  "parentUUID": "012c3225-19fe-4475-a20e-7fa8b3878877",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "361f8c74-672f-47c1-ba56-24d117af668b",
                "1b565351-13b9-4045-af17-c974e4c3cca5",
                "3af33a8e-c390-4eb8-9d88-f3d6e003e777",
                "68306885-c9b0-4dc9-a4fb-f5eb24539b9b",
                "5ec2b97c-36bf-41e2-9fff-dbe9f1462343",
                "99089869-80d2-46c3-837d-74679471e62b",
                "a342cb98-6bf2-43b0-a8f7-c17f671ee314"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f86c8dc9-70d5-46c6-b261-5178ee9286ec",
              "title": "darkProphecy",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards darkProphecy returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.darkProphecy(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "096a7898-5645-4e6b-9eb0-ec89ba17e674",
                  "parentUUID": "f86c8dc9-70d5-46c6-b261-5178ee9286ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return true if greater than difficulty using the \"best\" bad token pulled",
                  "fullTitle": "cards darkProphecy return true if greater than difficulty using the \"best\" bad token pulled",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(2)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.CULTIST,\n    src_1.Token.ELDER_THING\n], effects.merge(new src_1.TokenEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n])))).to.be.true;",
                  "err": {},
                  "uuid": "5020c28b-2567-4492-9141-39fd324974aa",
                  "parentUUID": "f86c8dc9-70d5-46c6-b261-5178ee9286ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return false if lesser than difficulty using the \"best\" bad token pulled",
                  "fullTitle": "cards darkProphecy return false if lesser than difficulty using the \"best\" bad token pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(1)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.CULTIST,\n    src_1.Token.ELDER_THING\n], effects.merge(new src_1.TokenEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n])))).to.be.false;",
                  "err": {},
                  "uuid": "13dfb52a-aafd-4caa-bd5e-8cd6fde9302e",
                  "parentUUID": "f86c8dc9-70d5-46c6-b261-5178ee9286ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return true if greater than difficulty using best token when no bad tokens were pulled",
                  "fullTitle": "cards darkProphecy return true if greater than difficulty using best token when no bad tokens were pulled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(0)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_TWO\n], effects)).to.be.true;",
                  "err": {},
                  "uuid": "c414bbe2-9733-408f-8d69-1e7bd849c7ef",
                  "parentUUID": "f86c8dc9-70d5-46c6-b261-5178ee9286ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return false if lesser than difficulty using best token when no bad tokens were pulled",
                  "fullTitle": "cards darkProphecy return false if lesser than difficulty using best token when no bad tokens were pulled",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(-1)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_TWO\n], effects)).to.be.false;",
                  "err": {},
                  "uuid": "580ee29f-19ea-45f4-b969-ceda354c704e",
                  "parentUUID": "f86c8dc9-70d5-46c6-b261-5178ee9286ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens (assuming they were pulled)",
                  "fullTitle": "cards darkProphecy takes into account redraw tokens (assuming they were pulled)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.darkProphecy(0)([\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ZERO,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.CURSE\n], effects)).to.be.false;",
                  "err": {},
                  "uuid": "48e1c51d-3c17-4b01-aee3-cdbb9ec75044",
                  "parentUUID": "f86c8dc9-70d5-46c6-b261-5178ee9286ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "096a7898-5645-4e6b-9eb0-ec89ba17e674",
                "5020c28b-2567-4492-9141-39fd324974aa",
                "13dfb52a-aafd-4caa-bd5e-8cd6fde9302e",
                "c414bbe2-9733-408f-8d69-1e7bd849c7ef",
                "580ee29f-19ea-45f4-b969-ceda354c704e",
                "48e1c51d-3c17-4b01-aee3-cdbb9ec75044"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5a770c13-6da8-4fb5-9f47-c0c8c50f6606",
              "title": "winchesterDoing1Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards winchesterDoing1Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.winchesterDoing1Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "c9ba5654-7849-4743-a059-fa28b28e1959",
                  "parentUUID": "5a770c13-6da8-4fb5-9f47-c0c8c50f6606",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards winchesterDoing1Damage returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing1Damage(1)([src_1.Token.MINUS_ONE], effects)).to.be.true;\nchai_1.expect(src_1.winchesterDoing1Damage(2)([src_1.Token.MINUS_TWO], effects)).to.be.true;",
                  "err": {},
                  "uuid": "7aabae5d-9016-48ce-9428-6f10f7d99890",
                  "parentUUID": "5a770c13-6da8-4fb5-9f47-c0c8c50f6606",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards winchesterDoing1Damage returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing1Damage(0)([src_1.Token.ELDER_SIGN], effects)).to.be\n    .false;\nchai_1.expect(src_1.winchesterDoing1Damage(0)([src_1.Token.ZERO], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(-1)([src_1.Token.PLUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "1fe612a1-fc2b-4b1f-8872-3a232ee00d99",
                  "parentUUID": "5a770c13-6da8-4fb5-9f47-c0c8c50f6606",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards winchesterDoing1Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing1Damage(-2)([src_1.Token.ELDER_SIGN], effects)).to.be\n    .false;\nchai_1.expect(src_1.winchesterDoing1Damage(-1)([src_1.Token.ZERO], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(-2)([src_1.Token.PLUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(0)([src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing1Damage(1)([src_1.Token.MINUS_TWO], effects)).to.be.false;",
                  "err": {},
                  "uuid": "e90d8834-6bc5-4481-827c-12d8327b66e5",
                  "parentUUID": "5a770c13-6da8-4fb5-9f47-c0c8c50f6606",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c9ba5654-7849-4743-a059-fa28b28e1959",
                "7aabae5d-9016-48ce-9428-6f10f7d99890",
                "1fe612a1-fc2b-4b1f-8872-3a232ee00d99",
                "e90d8834-6bc5-4481-827c-12d8327b66e5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "813f70cf-1621-4bc6-9512-c690bc0cd0f7",
              "title": "winchesterDoing3Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards winchesterDoing3Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.winchesterDoing3Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "3195b201-f5c0-42ad-82e3-734ad66e2670",
                  "parentUUID": "813f70cf-1621-4bc6-9512-c690bc0cd0f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards winchesterDoing3Damage returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing3Damage(0)([src_1.Token.ELDER_SIGN], effects)).to.be.true;\nchai_1.expect(src_1.winchesterDoing3Damage(0)([src_1.Token.ZERO], effects)).to.be.true;\nchai_1.expect(src_1.winchesterDoing3Damage(-1)([src_1.Token.PLUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "a7793bfe-fd90-4e3b-8d9a-10c25446fcde",
                  "parentUUID": "813f70cf-1621-4bc6-9512-c690bc0cd0f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards winchesterDoing3Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing3Damage(-2)([src_1.Token.ELDER_SIGN], effects)).to.be\n    .false;\nchai_1.expect(src_1.winchesterDoing3Damage(-1)([src_1.Token.ZERO], effects)).to.be.false;\nchai_1.expect(src_1.winchesterDoing3Damage(-2)([src_1.Token.PLUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "0d94df1d-0bcc-400f-8d35-5eaedb2331d8",
                  "parentUUID": "813f70cf-1621-4bc6-9512-c690bc0cd0f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards winchesterDoing3Damage returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.winchesterDoing3Damage(1)([src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "a7947981-287a-41b8-8a8f-acf81d32088c",
                  "parentUUID": "813f70cf-1621-4bc6-9512-c690bc0cd0f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3195b201-f5c0-42ad-82e3-734ad66e2670",
                "a7793bfe-fd90-4e3b-8d9a-10c25446fcde",
                "0d94df1d-0bcc-400f-8d35-5eaedb2331d8",
                "a7947981-287a-41b8-8a8f-acf81d32088c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2c47d58f-fab3-412e-b202-8b9a0c56cfa4",
              "title": "oliveMcBrideAndWinchesterDoing1Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBrideAndWinchesterDoing1Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "2aa40599-9daf-4798-8469-8906575852f9",
                  "parentUUID": "2c47d58f-fab3-412e-b202-8b9a0c56cfa4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns true if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(2)([src_1.Token.MINUS_TWO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "1de41942-bb2c-47f3-b287-19be798f4872",
                  "parentUUID": "2c47d58f-fab3-412e-b202-8b9a0c56cfa4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns false if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(0)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(0)([src_1.Token.PLUS_ONE, , src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "7aa52e26-597a-4115-96df-4215d637c7bd",
                  "parentUUID": "2c47d58f-fab3-412e-b202-8b9a0c56cfa4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(-1)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(1)([src_1.Token.MINUS_TWO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "8f032c8e-756a-44dc-b595-97bf3e76b797",
                  "parentUUID": "2c47d58f-fab3-412e-b202-8b9a0c56cfa4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing1Damage takes into account redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing1Damage(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "00c9b9f3-993c-4417-813f-f22ac5dbbb1a",
                  "parentUUID": "2c47d58f-fab3-412e-b202-8b9a0c56cfa4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2aa40599-9daf-4798-8469-8906575852f9",
                "1de41942-bb2c-47f3-b287-19be798f4872",
                "7aa52e26-597a-4115-96df-4215d637c7bd",
                "8f032c8e-756a-44dc-b595-97bf3e76b797",
                "00c9b9f3-993c-4417-813f-f22ac5dbbb1a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4dc64ac7-8af6-4d03-9639-84d6c42f17d6",
              "title": "oliveMcBrideAndWinchesterDoing3Damage",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.oliveMcBrideAndWinchesterDoing3Damage(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "22184c2c-0066-4fec-b4ad-1569709a35df",
                  "parentUUID": "4dc64ac7-8af6-4d03-9639-84d6c42f17d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns true if greater than difficulty and pulled an Elder Sign, a +1 or a 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(0)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(0)([src_1.Token.PLUS_ONE, , src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "f4022be3-9140-4285-abd4-be589d6ed7c2",
                  "parentUUID": "4dc64ac7-8af6-4d03-9639-84d6c42f17d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns false if lesser than difficulty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(-1)([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(0)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;\nchai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(-1)([src_1.Token.PLUS_ONE, , src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "37a44d3b-6cf6-4fcc-8b68-e30840911dbe",
                  "parentUUID": "4dc64ac7-8af6-4d03-9639-84d6c42f17d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage returns false if greater than difficulty and pulled no Elder Sign, +1 or 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "8b65ac26-4e2e-4f4c-9f7e-6ae42926b82d",
                  "parentUUID": "4dc64ac7-8af6-4d03-9639-84d6c42f17d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens",
                  "fullTitle": "cards oliveMcBrideAndWinchesterDoing3Damage takes into account redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.oliveMcBrideAndWinchesterDoing3Damage(1)([src_1.Token.ZERO, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "6db6e1ed-0e41-4bd3-9c6c-a73454d7a90a",
                  "parentUUID": "4dc64ac7-8af6-4d03-9639-84d6c42f17d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "22184c2c-0066-4fec-b4ad-1569709a35df",
                "f4022be3-9140-4285-abd4-be589d6ed7c2",
                "37a44d3b-6cf6-4fcc-8b68-e30840911dbe",
                "8b65ac26-4e2e-4f4c-9f7e-6ae42926b82d",
                "6db6e1ed-0e41-4bd3-9c6c-a73454d7a90a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6b7820ab-6323-4aed-812f-9ff0a654244a",
              "title": "jacqueline",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/cards.spec.ts",
              "file": "/spec/cards.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a function",
                  "fullTitle": "cards jacqueline returns a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var returnValue = src_1.jacqueline(0);\nchai_1.expect(returnValue).to.be.instanceof(Function);",
                  "err": {},
                  "uuid": "096d8115-3a9d-49c9-b27d-04ebfd77a0c5",
                  "parentUUID": "6b7820ab-6323-4aed-812f-9ff0a654244a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty when cancelling 2 non-tentacle tokens",
                  "fullTitle": "cards jacqueline returns true if greater than difficulty when cancelling 2 non-tentacle tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(1)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.true;",
                  "err": {},
                  "uuid": "2d57cc12-f25c-4d5e-8071-db79739b9707",
                  "parentUUID": "6b7820ab-6323-4aed-812f-9ff0a654244a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if greater than difficulty when cancelling tentacle",
                  "fullTitle": "cards jacqueline returns true if greater than difficulty when cancelling tentacle",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.true;",
                  "err": {},
                  "uuid": "f65002a4-d8e6-475f-b32d-b0446600fced",
                  "parentUUID": "6b7820ab-6323-4aed-812f-9ff0a654244a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty when cancelling 2 non-tentacle tokens",
                  "fullTitle": "cards jacqueline returns false if lesser than difficulty when cancelling 2 non-tentacle tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(0)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "c9eee50a-6e6c-47f5-8acb-e398ac8fe67f",
                  "parentUUID": "6b7820ab-6323-4aed-812f-9ff0a654244a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if lesser than difficulty when cancelling tentacle",
                  "fullTitle": "cards jacqueline returns false if lesser than difficulty when cancelling tentacle",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(1)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL], effects)).to.be.false;",
                  "err": {},
                  "uuid": "b866e006-b462-4b22-8fe6-c89df41a76a1",
                  "parentUUID": "6b7820ab-6323-4aed-812f-9ff0a654244a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens when ignoring 2 tokens",
                  "fullTitle": "cards jacqueline takes into account redraw tokens when ignoring 2 tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "315d10c8-1983-4327-986f-f1e62a07a283",
                  "parentUUID": "6b7820ab-6323-4aed-812f-9ff0a654244a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account redraw tokens when cancelling tentacle",
                  "fullTitle": "cards jacqueline takes into account redraw tokens when cancelling tentacle",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(src_1.jacqueline(2)([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.AUTOFAIL, src_1.Token.CURSE], effects)).to.be.false;",
                  "err": {},
                  "uuid": "f747f435-f266-454a-ba94-92820f11ad96",
                  "parentUUID": "6b7820ab-6323-4aed-812f-9ff0a654244a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "096d8115-3a9d-49c9-b27d-04ebfd77a0c5",
                "2d57cc12-f25c-4d5e-8071-db79739b9707",
                "f65002a4-d8e6-475f-b32d-b0446600fced",
                "c9eee50a-6e6c-47f5-8acb-e398ac8fe67f",
                "b866e006-b462-4b22-8fe6-c89df41a76a1",
                "315d10c8-1983-4327-986f-f1e62a07a283",
                "f747f435-f266-454a-ba94-92820f11ad96"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "41c2c46e-46dd-4a95-8b24-1d805a3d6948",
          "title": "exports",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/exports.spec.ts",
          "file": "/spec/exports.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "exports the `odds` function",
              "fullTitle": "exports exports the `odds` function",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai_1.expect(ArkhamOdds.odds).to.exist;",
              "err": {},
              "uuid": "5bb1a959-eecf-491e-83ac-fe0294908019",
              "parentUUID": "41c2c46e-46dd-4a95-8b24-1d805a3d6948",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5bb1a959-eecf-491e-83ac-fe0294908019"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e5275df2-ca3f-41a1-84b5-ff1b62a30b85",
          "title": "Odds functions",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
          "file": "/spec/index.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Odds functions \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-1, true)]\n]);",
              "err": {},
              "uuid": "e5085f05-c77c-4f20-8867-fde0ba68cd30",
              "parentUUID": "e5275df2-ca3f-41a1-84b5-ff1b62a30b85",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "798c5842-9310-4f90-8e20-330b8ed98ef1",
              "title": "odds",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
              "file": "/spec/index.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "fullTitle": "Odds functions odds returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.odds(1, bag, effects, src_1.success(0));\nchai_1.expect(oddsOfSuccess).to.equal(0.5);",
                  "err": {},
                  "uuid": "a53f451f-836e-4d58-badd-947e37b8a68f",
                  "parentUUID": "798c5842-9310-4f90-8e20-330b8ed98ef1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can compute odds even when there are no successful combinations",
                  "fullTitle": "Odds functions odds can compute odds even when there are no successful combinations",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.odds(1, bag, effects, src_1.success(-4));\nchai_1.expect(oddsOfSuccess).to.equal(0);",
                  "err": {},
                  "uuid": "264cbfc3-4222-47c4-ad20-d25892f6cac9",
                  "parentUUID": "798c5842-9310-4f90-8e20-330b8ed98ef1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account tokens with a redraw effect",
                  "fullTitle": "Odds functions odds takes into account tokens with a redraw effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.CULTIST]);\nvar oddsOfSuccess = src_1.odds(1, bag, effects, src_1.success(-1));\n/* Possible draws are :\n * - +1 with a probability of 1/3\n * - -1 with a probability of 1/3\n * - Cultist and +1 with a probability of 1/6 (1/3 x 1/2)\n * - Cultist and -1 with a probability of 1/6 (1/3 x 1/2)\n * If testing at -1, only +1 result in a success.\n */\nchai_1.expect(oddsOfSuccess).to.be.closeTo(0.33, 0.1);",
                  "err": {},
                  "uuid": "6f9833dc-fb6c-4bb6-85eb-62e22f92423a",
                  "parentUUID": "798c5842-9310-4f90-8e20-330b8ed98ef1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes into account tokens with a redraw effect when pulling multiple tokens",
                  "fullTitle": "Odds functions odds takes into account tokens with a redraw effect when pulling multiple tokens",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.CULTIST\n]);\n/* Possible draws are in the table below\n *\n * | 1st pull | 2nd pull | 3rd pull | Result | Probability |\n * | +1       | -1       |          | +0     | 1/12        |\n * | +1       | -2       |          | -1     | 1/12        |\n * | +1       | Cultist  | -1       | -1     | 1/24        |\n * | +1       | Cultist  | -2       | -2     | 1/24        |\n * | -1       | +1       |          | +0     | 1/12        |\n * | -1       | -2       |          | -3     | 1/12        |\n * | -1       | Cultist  | +1       | -1     | 1/24        |\n * | -1       | Cultist  | -2       | -4     | 1/24        |\n * | -2       | +1       |          | -1     | 1/12        |\n * | -2       | -1       |          | -3     | 1/12        |\n * | -2       | Cultist  | +1       | -2     | 1/24        |\n * | -2       | Cultist  | -1       | -4     | 1/24        |\n * | Cultist  | +1       | -1       | -1     | 1/24        |\n * | Cultist  | +1       | -2       | -2     | 1/24        |\n * | Cultist  | -1       | +1       | -1     | 1/24        |\n * | Cultist  | -1       | -2       | -4     | 1/24        |\n * | Cultist  | -2       | +1       | -2     | 1/24        |\n * | Cultist  | -2       | -1       | -4     | 1/24        |\n *\n * Odds of success depending on difficulty is then :\n *\n * | Result | Probability |\n * | -4     | 4/24        |\n * | -3     | 4/24        |\n * | -2     | 4/24        |\n * | -1     | 8/24        |\n * | 0      | 4/24        |\n */\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(0))).to.be.closeTo(4 / 24, 0.01, \"when equal\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(1))).to.be.closeTo(4 / 24 + 8 / 24, 0.01, \"when over by 1\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(2))).to.be.closeTo(4 / 24 + 8 / 24 + 4 / 24, 0.01, \"when over by 2\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(3))).to.equal(4 / 24 + 8 / 24 + 4 / 24 + 4 / 24, \"when over by 3\");\nchai_1.expect(src_1.odds(2, bag, effects, src_1.success(4))).to.be.closeTo(1, 0.01, \"when over by 4\");",
                  "err": {},
                  "uuid": "6fac5c4a-6488-40e4-bf86-e9fe253fa803",
                  "parentUUID": "798c5842-9310-4f90-8e20-330b8ed98ef1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a53f451f-836e-4d58-badd-947e37b8a68f",
                "264cbfc3-4222-47c4-ad20-d25892f6cac9",
                "6f9833dc-fb6c-4bb6-85eb-62e22f92423a",
                "6fac5c4a-6488-40e4-bf86-e9fe253fa803"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "629d67de-2fcb-4c9a-9b96-9cef3bd378e5",
              "title": "oddsWithRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/index.spec.ts",
              "file": "/spec/index.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "fullTitle": "Odds functions oddsWithRedraw returns 0.5 when pulling 1 token if half the tokens results in a success",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.oddsWithRedraw(1, bag, effects, src_1.success(0));\nchai_1.expect(oddsOfSuccess).to.equal(0.5);",
                  "err": {},
                  "uuid": "f3e3725c-4da8-4dc6-abb7-0cce3b58fcf9",
                  "parentUUID": "629d67de-2fcb-4c9a-9b96-9cef3bd378e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns 0.75 when pulling 2 tokens (putting back first token before second draw) if half the tokens results in a success",
                  "fullTitle": "Odds functions oddsWithRedraw returns 0.75 when pulling 2 tokens (putting back first token before second draw) if half the tokens results in a success",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bag = new src_1.Bag([src_1.Token.PLUS_ONE, src_1.Token.MINUS_ONE]);\nvar oddsOfSuccess = src_1.oddsWithRedraw(2, bag, effects, src_1.successChoosingBest(0));\nchai_1.expect(oddsOfSuccess).to.equal(0.75);",
                  "err": {},
                  "uuid": "0f402627-c8c5-4972-9399-cb5a1e9aa178",
                  "parentUUID": "629d67de-2fcb-4c9a-9b96-9cef3bd378e5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f3e3725c-4da8-4dc6-abb7-0cce3b58fcf9",
                "0f402627-c8c5-4972-9399-cb5a1e9aa178"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "de601db7-bb32-4bba-9ec8-587b896bb0fe",
          "title": "Autofail",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
          "file": "/spec/tokens/Autofail.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "88223b8e-f2df-4a5d-af8e-d9e0e6f650f1",
              "title": "getOutcome",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
              "file": "/spec/tokens/Autofail.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "outcome is of type AUTOFAIL",
                  "fullTitle": "Autofail getOutcome outcome is of type AUTOFAIL",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autofail().getOutcome()).to.equal(src_1.TokenEffectType.AUTOFAIL);",
                  "err": {},
                  "uuid": "4d33db2f-1100-4f94-87be-caac43a9b0e4",
                  "parentUUID": "88223b8e-f2df-4a5d-af8e-d9e0e6f650f1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4d33db2f-1100-4f94-87be-caac43a9b0e4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a15f9194-856a-477c-b987-250d9c9cdf75",
              "title": "isRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
              "file": "/spec/tokens/Autofail.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is not a redraw token",
                  "fullTitle": "Autofail isRedraw is not a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autofail().isRedraw()).to.equal(false);",
                  "err": {},
                  "uuid": "d8ee5437-d675-4efd-a536-e4b596ebce95",
                  "parentUUID": "a15f9194-856a-477c-b987-250d9c9cdf75",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d8ee5437-d675-4efd-a536-e4b596ebce95"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2a5fd54a-cd42-4c1f-a427-2bb384fc1a38",
              "title": "sameAs",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autofail.spec.ts",
              "file": "/spec/tokens/Autofail.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when compared to another Auofail",
                  "fullTitle": "Autofail sameAs is true when compared to another Auofail",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Autofail(), new src_1.Autofail()], fail1 = _a[0], fail2 = _a[1];\nchai_1.expect(fail1.sameAs(fail2)).to.be.true;",
                  "err": {},
                  "uuid": "c6ca2d8f-d3f1-4f5f-afbd-5b2099fd7125",
                  "parentUUID": "2a5fd54a-cd42-4c1f-a427-2bb384fc1a38",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when compared to another type of effect",
                  "fullTitle": "Autofail sameAs is false when compared to another type of effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var fail = new src_1.Autofail();\nchai_1.expect(fail.sameAs(new src_1.Modifier(-1))).to.be.false;\nchai_1.expect(fail.sameAs(new src_1.Autosuccess())).to.be.false;",
                  "err": {},
                  "uuid": "fc9cfa22-6399-4d66-99b2-21680e2db8f0",
                  "parentUUID": "2a5fd54a-cd42-4c1f-a427-2bb384fc1a38",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c6ca2d8f-d3f1-4f5f-afbd-5b2099fd7125",
                "fc9cfa22-6399-4d66-99b2-21680e2db8f0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3ad723a7-d713-4ada-9770-077fe01e07fc",
          "title": "Autofail",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
          "file": "/spec/tokens/Autosuccess.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2397b609-9f93-4510-bc7e-53a03f0b3ea5",
              "title": "getOutcome",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
              "file": "/spec/tokens/Autosuccess.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "outcome is of type AUTOSUCCESS",
                  "fullTitle": "Autofail getOutcome outcome is of type AUTOSUCCESS",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autosuccess().getOutcome()).to.equal(src_1.TokenEffectType.AUTOSUCCESS);",
                  "err": {},
                  "uuid": "bc95d4cd-2685-4300-9a5c-9d4d3875be97",
                  "parentUUID": "2397b609-9f93-4510-bc7e-53a03f0b3ea5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bc95d4cd-2685-4300-9a5c-9d4d3875be97"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "79f1e4fa-bafb-4a4d-a875-f91f0f13dbd9",
              "title": "isRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
              "file": "/spec/tokens/Autosuccess.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is not a redraw token",
                  "fullTitle": "Autofail isRedraw is not a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Autosuccess().isRedraw()).to.equal(false);",
                  "err": {},
                  "uuid": "a148ade3-5c42-42fa-ad67-e96dfccaacd5",
                  "parentUUID": "79f1e4fa-bafb-4a4d-a875-f91f0f13dbd9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a148ade3-5c42-42fa-ad67-e96dfccaacd5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ee6ad690-289d-43e4-a4e6-fb24b921b571",
              "title": "sameAs",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Autosuccess.spec.ts",
              "file": "/spec/tokens/Autosuccess.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when compared to another Auofail",
                  "fullTitle": "Autofail sameAs is true when compared to another Auofail",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Autosuccess(), new src_1.Autosuccess()], succ1 = _a[0], succ2 = _a[1];\nchai_1.expect(succ1.sameAs(succ2)).to.be.true;",
                  "err": {},
                  "uuid": "6b2e857b-685e-4b5b-ba63-ef9cd28f833a",
                  "parentUUID": "ee6ad690-289d-43e4-a4e6-fb24b921b571",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when compared to another type of effect",
                  "fullTitle": "Autofail sameAs is false when compared to another type of effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var succ = new src_1.Autosuccess();\nchai_1.expect(succ.sameAs(new src_1.Modifier(-1))).to.be.false;\nchai_1.expect(succ.sameAs(new src_1.Autofail())).to.be.false;",
                  "err": {},
                  "uuid": "428df9f0-aa34-4494-a540-fcbcb720092b",
                  "parentUUID": "ee6ad690-289d-43e4-a4e6-fb24b921b571",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6b2e857b-685e-4b5b-ba63-ef9cd28f833a",
                "428df9f0-aa34-4494-a540-fcbcb720092b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cbc25772-8c37-4dff-9247-81f5007aad93",
          "title": "Modifier",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
          "file": "/spec/tokens/Modifier.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "80251cba-e51f-4e34-8088-55e771b2edc4",
              "title": "getOutcome",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
              "file": "/spec/tokens/Modifier.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "outcome is of type MODIFIER",
                  "fullTitle": "Modifier getOutcome outcome is of type MODIFIER",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Modifier(0).getOutcome()).to.equal(src_1.TokenEffectType.MODIFIER);",
                  "err": {},
                  "uuid": "f483f92b-6425-43e0-80d8-17e04ade52fb",
                  "parentUUID": "80251cba-e51f-4e34-8088-55e771b2edc4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f483f92b-6425-43e0-80d8-17e04ade52fb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f304123e-8802-4c3f-837b-8666bff37f29",
              "title": "isRedraw",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
              "file": "/spec/tokens/Modifier.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if it is a redraw token",
                  "fullTitle": "Modifier isRedraw returns true if it is a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Modifier(0, true).isRedraw()).to.equal(true);",
                  "err": {},
                  "uuid": "6a1bb370-e6a6-45fc-96cc-9b7486477611",
                  "parentUUID": "f304123e-8802-4c3f-837b-8666bff37f29",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if it is not a redraw token",
                  "fullTitle": "Modifier isRedraw returns false if it is not a redraw token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(new src_1.Modifier(0).isRedraw()).to.equal(false);",
                  "err": {},
                  "uuid": "c7750432-6b62-4132-be35-aa7e61d3439d",
                  "parentUUID": "f304123e-8802-4c3f-837b-8666bff37f29",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6a1bb370-e6a6-45fc-96cc-9b7486477611",
                "c7750432-6b62-4132-be35-aa7e61d3439d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c02579ae-303e-40cd-adbe-8f50e8fd2842",
              "title": "sameAs",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/Modifier.spec.ts",
              "file": "/spec/tokens/Modifier.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when representing a modifier with same value and redraw effect",
                  "fullTitle": "Modifier sameAs is true when representing a modifier with same value and redraw effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Modifier(1), new src_1.Modifier(1)], mod1 = _a[0], mod2 = _a[1];\nchai_1.expect(mod1.sameAs(mod2)).to.be.true;",
                  "err": {},
                  "uuid": "a9269f74-106c-48b8-aece-61a2198c764f",
                  "parentUUID": "c02579ae-303e-40cd-adbe-8f50e8fd2842",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when representing a modifier with different value",
                  "fullTitle": "Modifier sameAs is false when representing a modifier with different value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Modifier(1), new src_1.Modifier(2)], mod1 = _a[0], mod2 = _a[1];\nchai_1.expect(mod1.sameAs(mod2)).to.be.false;",
                  "err": {},
                  "uuid": "c0c9ada3-fc63-4766-ab97-92b5de2dd871",
                  "parentUUID": "c02579ae-303e-40cd-adbe-8f50e8fd2842",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when representing a modifier with same value but different redraw effect",
                  "fullTitle": "Modifier sameAs is false when representing a modifier with same value but different redraw effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a = [new src_1.Modifier(1), new src_1.Modifier(1, true)], mod1 = _a[0], mod2 = _a[1];\nchai_1.expect(mod1.sameAs(mod2)).to.be.false;",
                  "err": {},
                  "uuid": "ef846584-a403-4304-9cd8-30f399487769",
                  "parentUUID": "c02579ae-303e-40cd-adbe-8f50e8fd2842",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when compared to another type of effect",
                  "fullTitle": "Modifier sameAs is false when compared to another type of effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mod1 = new src_1.Modifier(1);\nchai_1.expect(mod1.sameAs(new src_1.Autofail())).to.be.false;\nchai_1.expect(mod1.sameAs(new src_1.Autosuccess())).to.be.false;",
                  "err": {},
                  "uuid": "d878c9dd-e2fe-4d23-b997-58b0ac35b49f",
                  "parentUUID": "c02579ae-303e-40cd-adbe-8f50e8fd2842",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a9269f74-106c-48b8-aece-61a2198c764f",
                "c0c9ada3-fc63-4766-ab97-92b5de2dd871",
                "ef846584-a403-4304-9cd8-30f399487769",
                "d878c9dd-e2fe-4d23-b997-58b0ac35b49f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3ba4efa8-451d-4ad7-815c-6694433283c4",
          "title": "TokenEffects",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
          "file": "/spec/tokens/TokenEffects.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "can be created from mapping",
              "fullTitle": "TokenEffects can be created from mapping",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nchai_1.expect(effects.getEffect(src_1.Token.ELDER_SIGN)).to.exist;\nchai_1.expect(effects.getEffect(src_1.Token.AUTOFAIL)).to.not.exist;",
              "err": {},
              "uuid": "66b8e90e-6842-4122-98ff-1822a5ff5d56",
              "parentUUID": "3ba4efa8-451d-4ad7-815c-6694433283c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "is not affected by changes to provided mapping",
              "fullTitle": "TokenEffects is not affected by changes to provided mapping",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mapping = [\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n];\nvar effects = new src_1.TokenEffects(mapping);\nchai_1.expect(effects.getEffect(src_1.Token.AUTOFAIL)).to.not.exist;\nmapping.push([src_1.Token.AUTOFAIL, new src_1.Autofail()]);\nchai_1.expect(effects.getEffect(src_1.Token.AUTOFAIL)).to.not.exist;",
              "err": {},
              "uuid": "859dd93c-ad45-4d2c-8fe6-ff95c7c8209b",
              "parentUUID": "3ba4efa8-451d-4ad7-815c-6694433283c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can be created empty",
              "fullTitle": "TokenEffects can be created empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var effects = new src_1.TokenEffects();\nchai_1.expect(effects.getEffect(src_1.Token.ELDER_SIGN)).to.not.exist;",
              "err": {},
              "uuid": "0d11e9b5-d90f-4668-a7e3-17f377f64e5d",
              "parentUUID": "3ba4efa8-451d-4ad7-815c-6694433283c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "7e5eee1c-8062-47ad-b39a-db2ca873066e",
              "title": "setEffect",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new TokenEffects",
                  "fullTitle": "TokenEffects setEffect should return a new TokenEffects",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffect(src_1.Token.CULTIST, new src_1.Autofail());\nchai_1.expect(modifiedEffects).to.not.equal(effects);",
                  "err": {},
                  "uuid": "41f2629b-b359-46f7-9749-d60c03c6b002",
                  "parentUUID": "7e5eee1c-8062-47ad-b39a-db2ca873066e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set the new effect",
                  "fullTitle": "TokenEffects setEffect should set the new effect",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffect(src_1.Token.CULTIST, new src_1.Autofail());\nchai_1.expect(modifiedEffects.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Autofail())).to\n    .be.true;",
                  "err": {},
                  "uuid": "a0bd56da-baf4-460f-8d4d-8100fcb34e84",
                  "parentUUID": "7e5eee1c-8062-47ad-b39a-db2ca873066e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should leave the original effects untouched",
                  "fullTitle": "TokenEffects setEffect should leave the original effects untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\neffects.setEffect(src_1.Token.CULTIST, new src_1.Autofail());\nchai_1.expect(effects.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Modifier(-2))).to.be\n    .true;",
                  "err": {},
                  "uuid": "223e0766-b912-4429-bba5-695c85e95d67",
                  "parentUUID": "7e5eee1c-8062-47ad-b39a-db2ca873066e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "41f2629b-b359-46f7-9749-d60c03c6b002",
                "a0bd56da-baf4-460f-8d4d-8100fcb34e84",
                "223e0766-b912-4429-bba5-695c85e95d67"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d10b8741-0c47-492f-b140-7356c672bb66",
              "title": "setEffects",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new TokenEffects",
                  "fullTitle": "TokenEffects setEffects should return a new TokenEffects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffects([\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()]\n]);\nchai_1.expect(modifiedEffects).to.not.equal(effects);",
                  "err": {},
                  "uuid": "2cc4ded7-3fde-4dea-92f9-335d7860b743",
                  "parentUUID": "d10b8741-0c47-492f-b140-7356c672bb66",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set the new effects",
                  "fullTitle": "TokenEffects setEffects should set the new effects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar modifiedEffects = effects.setEffects([\n    [src_1.Token.TABLET, new src_1.Modifier(-3)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n]);\nchai_1.expect(modifiedEffects.getEffect(src_1.Token.TABLET).sameAs(new src_1.Modifier(-3)))\n    .to.be.true;\nchai_1.expect(modifiedEffects.getEffect(src_1.Token.ELDER_THING).sameAs(new src_1.Modifier(-4))).to.be.true;",
                  "err": {},
                  "uuid": "2098f809-7d09-44a2-b152-b7aacac9168c",
                  "parentUUID": "d10b8741-0c47-492f-b140-7356c672bb66",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should leave the original effects untouched",
                  "fullTitle": "TokenEffects setEffects should leave the original effects untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\neffects.setEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-3)],\n    [src_1.Token.TABLET, new src_1.Modifier(-4)]\n]);\nchai_1.expect(effects.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Modifier(-2))).to.be\n    .true;",
                  "err": {},
                  "uuid": "99565dc7-d57b-4583-9587-3b0b8876cb7d",
                  "parentUUID": "d10b8741-0c47-492f-b140-7356c672bb66",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2cc4ded7-3fde-4dea-92f9-335d7860b743",
                "2098f809-7d09-44a2-b152-b7aacac9168c",
                "99565dc7-d57b-4583-9587-3b0b8876cb7d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "522fc7c4-9066-4a4c-8311-85c8398ccfc7",
              "title": "merge",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new TokenEffects",
                  "fullTitle": "TokenEffects merge should return a new TokenEffects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects1 = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar effects2 = new src_1.TokenEffects([\n    [src_1.Token.TABLET, new src_1.Modifier(-3)],\n    [src_1.Token.ELDER_THING, new src_1.Modifier(-4)]\n]);\nvar merged = effects1.merge(effects2);\nchai_1.expect(merged).to.not.equal(effects1);\nchai_1.expect(merged).to.not.equal(effects2);",
                  "err": {},
                  "uuid": "1d68feb7-0906-4d4b-8f1f-dcb0b47ec938",
                  "parentUUID": "522fc7c4-9066-4a4c-8311-85c8398ccfc7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should merge effects",
                  "fullTitle": "TokenEffects merge should merge effects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects1 = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Modifier(1)],\n    [src_1.Token.CULTIST, new src_1.Modifier(-2)]\n]);\nvar effects2 = new src_1.TokenEffects([\n    [src_1.Token.CULTIST, new src_1.Modifier(-3)],\n    [src_1.Token.TABLET, new src_1.Modifier(-4)]\n]);\nvar merged = effects1.merge(effects2);\nchai_1.expect(merged.getEffect(src_1.Token.ELDER_SIGN).sameAs(new src_1.Modifier(1))).to.be\n    .true;\nchai_1.expect(merged.getEffect(src_1.Token.CULTIST).sameAs(new src_1.Modifier(-3))).to.be\n    .true;\nchai_1.expect(merged.getEffect(src_1.Token.TABLET).sameAs(new src_1.Modifier(-4))).to.be\n    .true;",
                  "err": {},
                  "uuid": "2e45e224-1fc9-4cd5-abfe-9c88a56087d3",
                  "parentUUID": "522fc7c4-9066-4a4c-8311-85c8398ccfc7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1d68feb7-0906-4d4b-8f1f-dcb0b47ec938",
                "2e45e224-1fc9-4cd5-abfe-9c88a56087d3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "efb84c60-42fe-4cf9-923d-58273cc21919",
              "title": "isTokenAutoSuccess",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when token is autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoSuccess is true when token is autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Autosuccess()]]);\nchai_1.expect(effects.isTokenAutoSuccess(src_1.Token.ELDER_SIGN)).to.be.true;",
                  "err": {},
                  "uuid": "45c68819-4efb-46bd-9448-7f4158f4c73c",
                  "parentUUID": "efb84c60-42fe-4cf9-923d-58273cc21919",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when token is not autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoSuccess is false when token is not autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Modifier(1)]]);\nchai_1.expect(effects.isTokenAutoSuccess(src_1.Token.ELDER_SIGN)).to.be.false;",
                  "err": {},
                  "uuid": "4b6340b6-5608-4cad-8376-c02584d2eb8e",
                  "parentUUID": "efb84c60-42fe-4cf9-923d-58273cc21919",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "45c68819-4efb-46bd-9448-7f4158f4c73c",
                "4b6340b6-5608-4cad-8376-c02584d2eb8e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "217a5552-659f-4bc1-86a3-2f2acab30cb9",
              "title": "isTokenAutoFail",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is true when token is autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoFail is true when token is autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.AUTOFAIL, new src_1.Autofail()]]);\nchai_1.expect(effects.isTokenAutoFail(src_1.Token.AUTOFAIL)).to.be.true;",
                  "err": {},
                  "uuid": "af9a6bd4-045e-4da6-9c21-a259a7ac7770",
                  "parentUUID": "217a5552-659f-4bc1-86a3-2f2acab30cb9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is false when token is not autosuccess",
                  "fullTitle": "TokenEffects isTokenAutoFail is false when token is not autosuccess",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Modifier(1)]]);\nchai_1.expect(effects.isTokenAutoFail(src_1.Token.ELDER_SIGN)).to.be.false;",
                  "err": {},
                  "uuid": "3560cc0d-1898-49bd-81f5-9a3fcc09fc6b",
                  "parentUUID": "217a5552-659f-4bc1-86a3-2f2acab30cb9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "af9a6bd4-045e-4da6-9c21-a259a7ac7770",
                "3560cc0d-1898-49bd-81f5-9a3fcc09fc6b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "69fec6b2-7e0e-48ec-b432-a2f1b08b4ba4",
              "title": "getTokenModifier",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns the token modifier if the token is a modifier token",
                  "fullTitle": "TokenEffects getTokenModifier returns the token modifier if the token is a modifier token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Modifier(2)]]);\nchai_1.expect(effects.getTokenModifier(src_1.Token.ELDER_SIGN)).to.equal(2);",
                  "err": {},
                  "uuid": "a44c1f93-5a42-48f5-ac0a-7ad506ea2861",
                  "parentUUID": "69fec6b2-7e0e-48ec-b432-a2f1b08b4ba4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns an error if the token effect is not a modifier token",
                  "fullTitle": "TokenEffects getTokenModifier returns an error if the token effect is not a modifier token",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([[src_1.Token.ELDER_SIGN, new src_1.Autosuccess()]]);\nchai_1.expect(function () {\n    effects.getTokenModifier(src_1.Token.ELDER_SIGN);\n}).to.throw();",
                  "err": {},
                  "uuid": "efd8cee3-a525-4d8b-b872-5e13eec9e850",
                  "parentUUID": "69fec6b2-7e0e-48ec-b432-a2f1b08b4ba4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a44c1f93-5a42-48f5-ac0a-7ad506ea2861",
                "efd8cee3-a525-4d8b-b872-5e13eec9e850"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "13979d26-10f4-477a-be4e-d78c6d35391d",
              "title": "sortByBestOutcomeDesc",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Autosuccess comes first",
                  "fullTitle": "TokenEffects sortByBestOutcomeDesc Autosuccess comes first",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Autosuccess()],\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)]\n]);\nvar tokens = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.ELDER_SIGN,\n    src_1.Token.PLUS_ONE\n];\nchai_1.expect(effects.sortByBestOutcomeDesc(tokens)[0]).to.equal(src_1.Token.ELDER_SIGN);",
                  "err": {},
                  "uuid": "8f436753-412d-4b78-91d4-680fe176c20e",
                  "parentUUID": "13979d26-10f4-477a-be4e-d78c6d35391d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Autofail comes last",
                  "fullTitle": "TokenEffects sortByBestOutcomeDesc Autofail comes last",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()]\n]);\nvar tokens = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.AUTOFAIL,\n    src_1.Token.PLUS_ONE\n];\nchai_1.expect(effects.sortByBestOutcomeDesc(tokens)[tokens.length - 1]).to.equal(src_1.Token.AUTOFAIL);",
                  "err": {},
                  "uuid": "51a72978-93a9-4657-8f10-0f0a70a6fc94",
                  "parentUUID": "13979d26-10f4-477a-be4e-d78c6d35391d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Modifier tokens are sorted by their modifier value from highest to lowest",
                  "fullTitle": "TokenEffects sortByBestOutcomeDesc Modifier tokens are sorted by their modifier value from highest to lowest",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.MINUS_FIVE, new src_1.Modifier(-5)]\n]);\nvar tokens = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_FIVE,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_TWO\n];\nvar sorted = [\n    src_1.Token.PLUS_ONE,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.MINUS_ONE,\n    src_1.Token.MINUS_TWO,\n    src_1.Token.MINUS_FIVE\n];\nchai_1.expect(effects.sortByBestOutcomeDesc(tokens)).to.deep.equal(sorted);",
                  "err": {},
                  "uuid": "ababe6af-b81d-4880-84b4-590b66949d5a",
                  "parentUUID": "13979d26-10f4-477a-be4e-d78c6d35391d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8f436753-412d-4b78-91d4-680fe176c20e",
                "51a72978-93a9-4657-8f10-0f0a70a6fc94",
                "ababe6af-b81d-4880-84b4-590b66949d5a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b89cf2f0-4094-450a-a87c-8be97f39a1ff",
              "title": "isSuccess",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "TokenEffects isSuccess \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sharedEffects = new src_1.TokenEffects([\n    [src_1.Token.ELDER_SIGN, new src_1.Autosuccess()],\n    [src_1.Token.MINUS_ONE, new src_1.Modifier(-1)],\n    [src_1.Token.MINUS_TWO, new src_1.Modifier(-2)],\n    [src_1.Token.AUTOFAIL, new src_1.Autofail()]\n]);",
                  "err": {},
                  "uuid": "02671b0d-df42-4739-9903-67739ce913d9",
                  "parentUUID": "b89cf2f0-4094-450a-a87c-8be97f39a1ff",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "1fb4a8a3-85fa-4801-b535-b9e6e29370b8",
                  "title": "with a single token",
                  "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
                  "file": "/spec/tokens/TokenEffects.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns true whatever the difficulty if the token is an autosuccess",
                      "fullTitle": "TokenEffects isSuccess with a single token returns true whatever the difficulty if the token is an autosuccess",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN], 3)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN], -3)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN], -20)).to.be.true;",
                      "err": {},
                      "uuid": "72091988-d51c-4760-b785-6aac214a0655",
                      "parentUUID": "1fb4a8a3-85fa-4801-b535-b9e6e29370b8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false whatever the difficulty if the token is an autofail",
                      "fullTitle": "TokenEffects isSuccess with a single token returns false whatever the difficulty if the token is an autofail",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL], 3)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL], -3)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL], -20)).to.be.false;",
                      "err": {},
                      "uuid": "30ae7ef9-3db9-4b46-950f-7d3ba408ce04",
                      "parentUUID": "1fb4a8a3-85fa-4801-b535-b9e6e29370b8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns true if the sum of (skill - difficulty) and modifier value is greater than or equal to 0",
                      "fullTitle": "TokenEffects isSuccess with a single token returns true if the sum of (skill - difficulty) and modifier value is greater than or equal to 0",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], 3)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], 1)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_TWO], 2)).to.be.true;",
                      "err": {},
                      "uuid": "9250deb3-9427-44e3-affe-c756a5a53baf",
                      "parentUUID": "1fb4a8a3-85fa-4801-b535-b9e6e29370b8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false if the sum of (skill - difficulty) and modifier value is lesser than 0",
                      "fullTitle": "TokenEffects isSuccess with a single token returns false if the sum of (skill - difficulty) and modifier value is lesser than 0",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], -3)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE], 0)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_TWO], 1)).to.be.false;",
                      "err": {},
                      "uuid": "51b00efe-5dfd-4b53-ae86-2fb202e86df3",
                      "parentUUID": "1fb4a8a3-85fa-4801-b535-b9e6e29370b8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "72091988-d51c-4760-b785-6aac214a0655",
                    "30ae7ef9-3db9-4b46-950f-7d3ba408ce04",
                    "9250deb3-9427-44e3-affe-c756a5a53baf",
                    "51b00efe-5dfd-4b53-ae86-2fb202e86df3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "12811fb7-ef8a-4481-96b0-ad52bb8e47fb",
                  "title": "with multiple tokens",
                  "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
                  "file": "/spec/tokens/TokenEffects.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns true when 1 of the tokens is an autosuccess and there are no autofail",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns true when 1 of the tokens is an autosuccess and there are no autofail",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_TWO], -8))\n    .to.be.true;",
                      "err": {},
                      "uuid": "7d241fb9-cc40-400e-954b-c68c403c3159",
                      "parentUUID": "12811fb7-ef8a-4481-96b0-ad52bb8e47fb",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns true when 1 of the tokens is an autofail",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns true when 1 of the tokens is an autofail",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.AUTOFAIL, src_1.Token.MINUS_TWO], 10))\n    .to.be.false;",
                      "err": {},
                      "uuid": "67d18a49-13e1-44dd-8566-7b1461d201c7",
                      "parentUUID": "12811fb7-ef8a-4481-96b0-ad52bb8e47fb",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false when there are both an autosuccess and an autofail among the tokens",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns false when there are both an autosuccess and an autofail among the tokens",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.ELDER_SIGN, src_1.Token.MINUS_TWO, src_1.Token.AUTOFAIL], 10)).to.be.false;",
                      "err": {},
                      "uuid": "609fcd98-8686-4d92-95ef-daac5c4fa932",
                      "parentUUID": "12811fb7-ef8a-4481-96b0-ad52bb8e47fb",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns true if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns true if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], 6)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO, src_1.Token.MINUS_ONE], 4)).to.be.true;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_TWO, src_1.Token.MINUS_TWO, src_1.Token.MINUS_TWO], 6)).to.be.true;",
                      "err": {},
                      "uuid": "dfdaa3b8-11ce-4df3-9b63-bb4e8588e78c",
                      "parentUUID": "12811fb7-ef8a-4481-96b0-ad52bb8e47fb",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns false if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "fullTitle": "TokenEffects isSuccess with multiple tokens returns false if the sum of (skill - difficulty) and all modifier values is lesser than 0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], 0)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE], 2)).to.be.false;\nchai_1.expect(sharedEffects.isSuccess([src_1.Token.MINUS_ONE, src_1.Token.MINUS_ONE, src_1.Token.MINUS_TWO], 3)).to.be.false;",
                      "err": {},
                      "uuid": "63719a45-59c6-4fe6-9c2b-4e5099bf1f10",
                      "parentUUID": "12811fb7-ef8a-4481-96b0-ad52bb8e47fb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7d241fb9-cc40-400e-954b-c68c403c3159",
                    "67d18a49-13e1-44dd-8566-7b1461d201c7",
                    "609fcd98-8686-4d92-95ef-daac5c4fa932",
                    "dfdaa3b8-11ce-4df3-9b63-bb4e8588e78c",
                    "63719a45-59c6-4fe6-9c2b-4e5099bf1f10"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e5793b89-78a0-42f4-98ef-48da39bf196e",
              "title": "separateRedrawTokens",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/tokens/TokenEffects.spec.ts",
              "file": "/spec/tokens/TokenEffects.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "separates redraw tokens from non-redraw tokens",
                  "fullTitle": "TokenEffects separateRedrawTokens separates redraw tokens from non-redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);\nvar _a = effects.separateRedrawTokens([\n    src_1.Token.ZERO,\n    src_1.Token.BLESS,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.CURSE,\n    src_1.Token.ZERO\n]), nonRedrawTokens = _a.nonRedrawTokens, redrawTokens = _a.redrawTokens;\nchai_1.expect(nonRedrawTokens).to.deep.equal([\n    src_1.Token.ZERO,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.ZERO\n]);\nchai_1.expect(redrawTokens).to.deep.equal([src_1.Token.BLESS, src_1.Token.CURSE]);",
                  "err": {},
                  "uuid": "f38f3867-e89a-4596-b8da-1cfdb5e2c360",
                  "parentUUID": "e5793b89-78a0-42f4-98ef-48da39bf196e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "separates redraw tokens from non-redraw tokens when there are no redraw tokens",
                  "fullTitle": "TokenEffects separateRedrawTokens separates redraw tokens from non-redraw tokens when there are no redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);\nvar _a = effects.separateRedrawTokens([\n    src_1.Token.ZERO,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.ZERO\n]), nonRedrawTokens = _a.nonRedrawTokens, redrawTokens = _a.redrawTokens;\nchai_1.expect(nonRedrawTokens).to.deep.equal([\n    src_1.Token.ZERO,\n    src_1.Token.PLUS_ONE,\n    src_1.Token.ZERO\n]);\nchai_1.expect(redrawTokens).to.deep.equal([]);",
                  "err": {},
                  "uuid": "c3457a6f-ac4e-42b4-bce8-226a4e0ef98a",
                  "parentUUID": "e5793b89-78a0-42f4-98ef-48da39bf196e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "separates redraw tokens from non-redraw tokens when there are no non-redraw tokens",
                  "fullTitle": "TokenEffects separateRedrawTokens separates redraw tokens from non-redraw tokens when there are no non-redraw tokens",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.ZERO, new src_1.Modifier(0)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)],\n    [src_1.Token.CURSE, new src_1.Modifier(-2, true)]\n]);\nvar _a = effects.separateRedrawTokens([\n    src_1.Token.BLESS,\n    src_1.Token.CURSE\n]), nonRedrawTokens = _a.nonRedrawTokens, redrawTokens = _a.redrawTokens;\nchai_1.expect(nonRedrawTokens).to.deep.equal([]);\nchai_1.expect(redrawTokens).to.deep.equal([src_1.Token.BLESS, src_1.Token.CURSE]);",
                  "err": {},
                  "uuid": "2ba605bf-ecc2-40b4-980f-1440614b5459",
                  "parentUUID": "e5793b89-78a0-42f4-98ef-48da39bf196e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "leaves the original token array untouched",
                  "fullTitle": "TokenEffects separateRedrawTokens leaves the original token array untouched",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var effects = new src_1.TokenEffects([\n    [src_1.Token.PLUS_ONE, new src_1.Modifier(1)],\n    [src_1.Token.BLESS, new src_1.Modifier(2, true)]\n]);\nvar tokens = [src_1.Token.BLESS, src_1.Token.PLUS_ONE];\neffects.separateRedrawTokens(tokens);\nchai_1.expect(tokens).to.deep.equal([src_1.Token.BLESS, src_1.Token.PLUS_ONE]);",
                  "err": {},
                  "uuid": "a19469b0-42dd-4349-a582-1f31eee8a1db",
                  "parentUUID": "e5793b89-78a0-42f4-98ef-48da39bf196e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f38f3867-e89a-4596-b8da-1cfdb5e2c360",
                "c3457a6f-ac4e-42b4-bce8-226a4e0ef98a",
                "2ba605bf-ecc2-40b4-980f-1440614b5459",
                "a19469b0-42dd-4349-a582-1f31eee8a1db"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "66b8e90e-6842-4122-98ff-1822a5ff5d56",
            "859dd93c-ad45-4d2c-8fe6-ff95c7c8209b",
            "0d11e9b5-d90f-4668-a7e3-17f377f64e5d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a9bb3d7b-6196-4d75-be36-99ae8d17c081",
          "title": "utils",
          "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
          "file": "/spec/utils.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "b79f249d-0ee9-4bf0-a8a0-01681b680a9b",
              "title": "removeFirst",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should remove the first occurrence",
                  "fullTitle": "utils removeFirst should remove the first occurrence",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar removed = utils.removeFirst(arr, 2);\nchai_1.expect(removed).to.deep.equal([1, 3]);",
                  "err": {},
                  "uuid": "eb6c4350-4d6e-4f93-88c5-5bdf6ccfb5f5",
                  "parentUUID": "b79f249d-0ee9-4bf0-a8a0-01681b680a9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not remove other occurrences",
                  "fullTitle": "utils removeFirst should not remove other occurrences",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 2, 2, 3];\nvar removed = utils.removeFirst(arr, 2);\nchai_1.expect(removed).to.deep.equal([1, 2, 2, 3]);",
                  "err": {},
                  "uuid": "35e98065-e2fe-486b-b455-118a62e3fb39",
                  "parentUUID": "b79f249d-0ee9-4bf0-a8a0-01681b680a9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not modify the original array",
                  "fullTitle": "utils removeFirst should not modify the original array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nutils.removeFirst(arr, 2);\nchai_1.expect(arr).to.deep.equal([1, 2, 3]);",
                  "err": {},
                  "uuid": "d793e84c-ff43-4e8c-886b-cf9383ee7711",
                  "parentUUID": "b79f249d-0ee9-4bf0-a8a0-01681b680a9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should do nothing if the array does not contain the element",
                  "fullTitle": "utils removeFirst should do nothing if the array does not contain the element",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar removed = utils.removeFirst(arr, 4);\nchai_1.expect(arr).to.deep.equal([1, 2, 3]);\nchai_1.expect(removed).to.deep.equal([1, 2, 3]);\nchai_1.expect(arr).to.not.equal(removed);",
                  "err": {},
                  "uuid": "eed7ac58-372a-4d7a-8560-965ac83f8aa2",
                  "parentUUID": "b79f249d-0ee9-4bf0-a8a0-01681b680a9b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eb6c4350-4d6e-4f93-88c5-5bdf6ccfb5f5",
                "35e98065-e2fe-486b-b455-118a62e3fb39",
                "d793e84c-ff43-4e8c-886b-cf9383ee7711",
                "eed7ac58-372a-4d7a-8560-965ac83f8aa2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "da9c53d4-4fe2-4f09-984a-cec8f0c3be1b",
              "title": "flatten",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "flattens an array",
                  "fullTitle": "utils flatten flattens an array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.flatten([[], [1], [2]])).to.deep.equal([1, 2]);",
                  "err": {},
                  "uuid": "a8e311c8-145f-4660-8228-789bc9b0c88d",
                  "parentUUID": "da9c53d4-4fe2-4f09-984a-cec8f0c3be1b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a8e311c8-145f-4660-8228-789bc9b0c88d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3b478eb7-0452-4493-832c-0791e7025ec4",
              "title": "combinations",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an empty array if K > N",
                  "fullTitle": "utils combinations should return an empty array if K > N",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar comb = utils.combinations(4, arr);\nchai_1.expect(comb).to.deep.equals([]);",
                  "err": {},
                  "uuid": "9d85fe25-e933-4eff-8af9-bfd2ba478901",
                  "parentUUID": "3b478eb7-0452-4493-832c-0791e7025ec4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return [[]] if K <= 0",
                  "fullTitle": "utils combinations should return [[]] if K <= 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nchai_1.expect(utils.combinations(0, arr)).to.deep.equals([[]]);\nchai_1.expect(utils.combinations(-5, arr)).to.deep.equals([[]]);",
                  "err": {},
                  "uuid": "24797c5c-af0e-4df7-b8bb-94794e4492a3",
                  "parentUUID": "3b478eb7-0452-4493-832c-0791e7025ec4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the combinations",
                  "fullTitle": "utils combinations should return the combinations",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar expected = [\n    [1, 2],\n    [1, 3],\n    [2, 3]\n];\nchai_1.expect(utils.combinations(2, arr)).to.deep.equals(expected);",
                  "err": {},
                  "uuid": "d261c4cb-f83d-42c3-b76c-50948f4c6c25",
                  "parentUUID": "3b478eb7-0452-4493-832c-0791e7025ec4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9d85fe25-e933-4eff-8af9-bfd2ba478901",
                "24797c5c-af0e-4df7-b8bb-94794e4492a3",
                "d261c4cb-f83d-42c3-b76c-50948f4c6c25"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "18159b62-f27f-4347-b39c-352591aed43d",
              "title": "allCombinations",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return [[]] if provided an empty array of elements",
                  "fullTitle": "utils allCombinations should return [[]] if provided an empty array of elements",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var allComb = utils.allCombinations([]);\nchai_1.expect(allComb).to.deep.equals([[]]);",
                  "err": {},
                  "uuid": "f0c24929-db7c-47b9-bc91-ad053bd23901",
                  "parentUUID": "18159b62-f27f-4347-b39c-352591aed43d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return all combinations of provided elements including empty and full sets",
                  "fullTitle": "utils allCombinations should return all combinations of provided elements including empty and full sets",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [1, 2, 3];\nvar expected = [[], [1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3]];\nvar allComb = utils.allCombinations(arr);\nchai_1.expect(allComb).to.deep.equals(expected);",
                  "err": {},
                  "uuid": "3674eea2-db9b-4cad-bf11-550a8d0f2792",
                  "parentUUID": "18159b62-f27f-4347-b39c-352591aed43d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f0c24929-db7c-47b9-bc91-ad053bd23901",
                "3674eea2-db9b-4cad-bf11-550a8d0f2792"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f529dce2-3124-45ec-be75-b8ad8121abd9",
              "title": "cartesianProduct",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should compute cartesian product of 2 arrays",
                  "fullTitle": "utils cartesianProduct should compute cartesian product of 2 arrays",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr1 = [1, 2];\nvar arr2 = [3, 4];\nvar expected = [\n    [1, 3],\n    [1, 4],\n    [2, 3],\n    [2, 4]\n];\nchai_1.expect(utils.cartesianProduct(arr1, arr2)).to.deep.equals(expected);",
                  "err": {},
                  "uuid": "83f541d7-5ce6-47b0-acca-5fb951efefcb",
                  "parentUUID": "f529dce2-3124-45ec-be75-b8ad8121abd9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "83f541d7-5ce6-47b0-acca-5fb951efefcb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "16a4cfac-d6b3-45c1-9b9d-1038ca2645a7",
              "title": "factorial",
              "fullFile": "/home/runner/work/arkham-odds/arkham-odds/spec/utils.spec.ts",
              "file": "/spec/utils.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns 1 for 0!",
                  "fullTitle": "utils factorial returns 1 for 0!",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.factorial(0)).to.equal(1);",
                  "err": {},
                  "uuid": "23100fa2-3a5e-48ed-bd71-2d58adb7685c",
                  "parentUUID": "16a4cfac-d6b3-45c1-9b9d-1038ca2645a7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns 6 for 3!",
                  "fullTitle": "utils factorial returns 6 for 3!",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(utils.factorial(3)).to.equal(6);",
                  "err": {},
                  "uuid": "8dad4b92-6ec4-4396-b7f0-519b35c82b71",
                  "parentUUID": "16a4cfac-d6b3-45c1-9b9d-1038ca2645a7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "23100fa2-3a5e-48ed-bd71-2d58adb7685c",
                "8dad4b92-6ec4-4396-b7f0-519b35c82b71"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "reports/tests",
        "reportFilename": "index"
      },
      "version": "4.1.0"
    }
  }
}